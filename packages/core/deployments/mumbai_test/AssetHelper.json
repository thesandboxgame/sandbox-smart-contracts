{
  "address": "0x0053e2A630E86Cf411825C7bc2F7f50B83d0d743",
  "abi": [],
  "transactionHash": "0x0c29471cf085bde5c96d04450f78ffcc42d1fb1c57ab91a48a91b76c9bde72cc",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0x0053e2A630E86Cf411825C7bc2F7f50B83d0d743",
    "transactionIndex": 1,
    "gasUsed": "940098",
    "logsBloom": "0x
    "blockHash": "0xcc9201776b89e30d0c4ec209077f6c170e705caf47a0dfdf4d3414cf356e0584",
    "transactionHash": "0x0c29471cf085bde5c96d04450f78ffcc42d1fb1c57ab91a48a91b76c9bde72cc",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 21211106,
        "transactionHash": "0x0c29471cf085bde5c96d04450f78ffcc42d1fb1c57ab91a48a91b76c9bde72cc",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000357039f58140000000000000000000000000000000000000000000000000001c2d10c3c395c000000000000000000000000000000000000000000000001f6883f8a146ed4030400000000000000000000000000000000000000000000000001bf7a089ce148000000000000000000000000000000000000000000000001f68842e1180e2c1704",
        "logIndex": 2,
        "blockHash": "0xcc9201776b89e30d0c4ec209077f6c170e705caf47a0dfdf4d3414cf356e0584"
      }
    ],
    "blockNumber": 21211106,
    "cumulativeGasUsed": "1283298",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "06b15ee7498183c9f24ccb2d08ffcc2e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/solc_0.8/asset/libraries/AssetHelper.sol\":\"AssetHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"src/solc_0.8/asset/libraries/AssetHelper.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.2;\\n\\nimport \\\"../../common/interfaces/IAssetAttributesRegistry.sol\\\";\\n\\n// used to reduce PolygonAssetV2 contract code size\\nlibrary AssetHelper {\\n    struct AssetRegistryData {\\n        IAssetAttributesRegistry assetRegistry;\\n    }\\n\\n    function setCatalystDatas(\\n        AssetRegistryData storage self,\\n        IAssetAttributesRegistry.AssetGemsCatalystData[] memory assetGemsCatalystData\\n    ) public {\\n        for (uint256 i = 0; i < assetGemsCatalystData.length; i++) {\\n            require(assetGemsCatalystData[i].catalystContractId > 0, \\\"WRONG_catalystContractId\\\");\\n            require(assetGemsCatalystData[i].assetId != 0, \\\"WRONG_assetId\\\");\\n            self.assetRegistry.setCatalystWhenDepositOnOtherLayer(\\n                assetGemsCatalystData[i].assetId,\\n                assetGemsCatalystData[i].catalystContractId,\\n                assetGemsCatalystData[i].gemContractIds\\n            );\\n        }\\n    }\\n\\n    function decodeAndSetCatalystDataL1toL2(AssetRegistryData storage self, bytes calldata depositData)\\n        public\\n        returns (\\n            uint256[] memory ids,\\n            uint256[] memory amounts,\\n            bytes32[] memory hashes\\n        )\\n    {\\n        bytes memory data;\\n        IAssetAttributesRegistry.AssetGemsCatalystData[] memory catalystDatas;\\n        (ids, amounts, data) = abi.decode(depositData, (uint256[], uint256[], bytes));\\n        (hashes, catalystDatas) = abi.decode(data, (bytes32[], IAssetAttributesRegistry.AssetGemsCatalystData[]));\\n\\n        setCatalystDatas(self, catalystDatas);\\n    }\\n\\n    function decodeAndSetCatalystDataL2toL1(AssetRegistryData storage self, bytes calldata data)\\n        public\\n        returns (bytes32[] memory hashes)\\n    {\\n        IAssetAttributesRegistry.AssetGemsCatalystData[] memory catalystDatas;\\n\\n        (hashes, catalystDatas) = abi.decode(data, (bytes32[], IAssetAttributesRegistry.AssetGemsCatalystData[]));\\n\\n        setCatalystDatas(self, catalystDatas);\\n    }\\n\\n    function getGemsAndCatalystData(AssetRegistryData storage self, uint256[] calldata assetIds)\\n        public\\n        view\\n        returns (IAssetAttributesRegistry.AssetGemsCatalystData[] memory)\\n    {\\n        uint256 count = getGemsCatalystDataCount(self, assetIds);\\n        uint256 indexInCatalystArray;\\n\\n        IAssetAttributesRegistry.AssetGemsCatalystData[] memory gemsCatalystDatas =\\n            new IAssetAttributesRegistry.AssetGemsCatalystData[](count);\\n\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            (bool isDataFound, uint16 catalystId, uint16[] memory gemIds) = self.assetRegistry.getRecord(assetIds[i]);\\n            if (isDataFound) {\\n                IAssetAttributesRegistry.AssetGemsCatalystData memory data;\\n                data.assetId = assetIds[i];\\n                data.catalystContractId = catalystId;\\n                data.gemContractIds = gemIds;\\n                require(indexInCatalystArray < count, \\\"indexInCatalystArray out of bound\\\");\\n                gemsCatalystDatas[indexInCatalystArray] = data;\\n                indexInCatalystArray++;\\n            }\\n        }\\n\\n        return gemsCatalystDatas;\\n    }\\n\\n    function getGemsCatalystDataCount(AssetRegistryData storage self, uint256[] calldata assetIds)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 count;\\n\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            (bool isDataFound, , ) = self.assetRegistry.getRecord(assetIds[i]);\\n            if (isDataFound) {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n\",\"keccak256\":\"0x7fe8407314d07665b27aff8bda0caf2ebedbf93f7618a9d83e2627963284367d\",\"license\":\"MIT\"},\"src/solc_0.8/common/interfaces/IAssetAttributesRegistry.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.2;\\npragma experimental ABIEncoderV2;\\n\\ninterface IAssetAttributesRegistry {\\n    struct GemEvent {\\n        uint16[] gemIds;\\n        bytes32 blockHash;\\n    }\\n\\n    struct AssetGemsCatalystData {\\n        uint256 assetId;\\n        uint16 catalystContractId;\\n        uint16[] gemContractIds;\\n    }\\n\\n    function getRecord(uint256 assetId)\\n        external\\n        view\\n        returns (\\n            bool exists,\\n            uint16 catalystId,\\n            uint16[] memory gemIds\\n        );\\n\\n    function getAttributes(uint256 assetId, GemEvent[] calldata events) external view returns (uint32[] memory values);\\n\\n    function setCatalyst(\\n        uint256 assetId,\\n        uint16 catalystId,\\n        uint16[] calldata gemIds\\n    ) external;\\n\\n    function setCatalystWhenDepositOnOtherLayer(\\n        uint256 assetId,\\n        uint16 catalystId,\\n        uint16[] calldata gemIds\\n    ) external;\\n\\n    function setCatalystWithBlockNumber(\\n        uint256 assetId,\\n        uint16 catalystId,\\n        uint16[] calldata gemIds,\\n        uint64 blockNumber\\n    ) external;\\n\\n    function addGems(uint256 assetId, uint16[] calldata gemIds) external;\\n\\n    function setMigrationContract(address _migrationContract) external;\\n\\n    function getCatalystRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7f12fa565160d7598f702dcae0e511943be9c6eaa4dc338f3439a36f0a6086c9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}