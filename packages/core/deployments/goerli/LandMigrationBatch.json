{
  "address": "0xFa12Dc076DCE33BC828B3E5B7F856F9ed1acA730",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Batch.Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "name": "atomicBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct Batch.ExecutionWithETH[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "name": "atomicBatchWithETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Batch.Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "name": "nonAtomicBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct Batch.ExecutionWithETH[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "name": "nonAtomicBatchWithETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes[]",
          "name": "callDatas",
          "type": "bytes[]"
        }
      ],
      "name": "singleTargetAtomicBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct Batch.SingleTargetExecutionWithETH[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "name": "singleTargetAtomicBatchWithETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes[]",
          "name": "callDatas",
          "type": "bytes[]"
        }
      ],
      "name": "singleTargetNonAtomicBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct Batch.SingleTargetExecutionWithETH[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "name": "singleTargetNonAtomicBatchWithETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xf821da664782cb0111cb64df6885afbeb386b45e8d0fe848247b7e1bfcade1e4",
  "receipt": {
    "to": null,
    "from": "0xA796AE911621E00809E0E7C8f0AD6BF118E5139e",
    "contractAddress": "0xFa12Dc076DCE33BC828B3E5B7F856F9ed1acA730",
    "transactionIndex": 41,
    "gasUsed": "1207363",
    "logsBloom": "0x
    "blockHash": "0xd4d3c64efadd4b2cf78f56047ce84a48b419411a9ce81ed01594e372a5fc0ab4",
    "transactionHash": "0xf821da664782cb0111cb64df6885afbeb386b45e8d0fe848247b7e1bfcade1e4",
    "logs": [],
    "blockNumber": 7027412,
    "cumulativeGasUsed": "3432556",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4751d4DC3D8CfF421598592b51BB1D9a0fb116E9"
  ],
  "numDeployments": 1,
  "solcInputHash": "b324cd7389fb25cfd4aeba7aeca25d0f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Batch.Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"name\":\"atomicBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Batch.ExecutionWithETH[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"name\":\"atomicBatchWithETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Batch.Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"name\":\"nonAtomicBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Batch.ExecutionWithETH[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"name\":\"nonAtomicBatchWithETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"callDatas\",\"type\":\"bytes[]\"}],\"name\":\"singleTargetAtomicBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Batch.SingleTargetExecutionWithETH[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"name\":\"singleTargetAtomicBatchWithETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"callDatas\",\"type\":\"bytes[]\"}],\"name\":\"singleTargetNonAtomicBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Batch.SingleTargetExecutionWithETH[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"name\":\"singleTargetNonAtomicBatchWithETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/solc_0.8/Utils/Batch.sol\":\"Batch\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.8/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"src/solc_0.8/Utils/Batch.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.2;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts-0.8/utils/Address.sol\\\";\\n\\ncontract Batch {\\n    using Address for address;\\n\\n    struct Execution {\\n        address target;\\n        bytes callData;\\n    }\\n\\n    struct ExecutionWithETH {\\n        address target;\\n        bytes callData;\\n        uint256 value;\\n    }\\n\\n    struct SingleTargetExecutionWithETH {\\n        bytes callData;\\n        uint256 value;\\n    }\\n\\n    address public immutable executor;\\n\\n    constructor(address _executor) {\\n        executor = _executor;\\n    }\\n\\n    modifier onlyExecutor() {\\n        require(msg.sender == executor, \\\"NOT_AUTHORIZED\\\");\\n        _;\\n    }\\n\\n    function atomicBatchWithETH(ExecutionWithETH[] calldata executions) external payable onlyExecutor {\\n        for (uint256 i = 0; i < executions.length; i++) {\\n            executions[i].target.functionCallWithValue(executions[i].callData, executions[i].value);\\n        }\\n    }\\n\\n    function nonAtomicBatchWithETH(ExecutionWithETH[] calldata executions) external payable onlyExecutor {\\n        for (uint256 i = 0; i < executions.length; i++) {\\n            _call(executions[i].target, executions[i].callData, executions[i].value);\\n        }\\n    }\\n\\n    function atomicBatch(Execution[] calldata executions) external onlyExecutor {\\n        for (uint256 i = 0; i < executions.length; i++) {\\n            executions[i].target.functionCall(executions[i].callData);\\n        }\\n    }\\n\\n    function nonAtomicBatch(Execution[] calldata executions) external onlyExecutor {\\n        for (uint256 i = 0; i < executions.length; i++) {\\n            _call(executions[i].target, executions[i].callData, 0);\\n        }\\n    }\\n\\n    function singleTargetAtomicBatchWithETH(address target, SingleTargetExecutionWithETH[] calldata executions)\\n        external\\n        payable\\n        onlyExecutor\\n    {\\n        for (uint256 i = 0; i < executions.length; i++) {\\n            target.functionCallWithValue(executions[i].callData, executions[i].value);\\n        }\\n    }\\n\\n    function singleTargetNonAtomicBatchWithETH(address target, SingleTargetExecutionWithETH[] calldata executions)\\n        external\\n        payable\\n        onlyExecutor\\n    {\\n        for (uint256 i = 0; i < executions.length; i++) {\\n            _call(target, executions[i].callData, executions[i].value);\\n        }\\n    }\\n\\n    function singleTargetAtomicBatch(address target, bytes[] calldata callDatas) external onlyExecutor {\\n        for (uint256 i = 0; i < callDatas.length; i++) {\\n            target.functionCall(callDatas[i]);\\n        }\\n    }\\n\\n    function singleTargetNonAtomicBatch(address target, bytes[] calldata callDatas) external onlyExecutor {\\n        for (uint256 i = 0; i < callDatas.length; i++) {\\n            _call(target, callDatas[i], 0);\\n        }\\n    }\\n\\n    function _call(\\n        address target,\\n        bytes calldata data,\\n        uint256 value\\n    ) internal returns (bool) {\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = target.call{value: value}(data);\\n        return success;\\n    }\\n\\n    // ----------------------------------------------------------------------------------------------------\\n    // TOKEN RECEPTION\\n    // ----------------------------------------------------------------------------------------------------\\n\\n    // ERC1155\\n    bytes4 private constant ERC1155_IS_RECEIVER = 0x4e2312e0;\\n    bytes4 private constant ERC1155_RECEIVED = 0xf23a6e61;\\n    bytes4 private constant ERC1155_BATCH_RECEIVED = 0xbc197c81;\\n\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4) {\\n        return ERC1155_RECEIVED;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] calldata,\\n        uint256[] calldata,\\n        bytes calldata\\n    ) external pure returns (bytes4) {\\n        return ERC1155_BATCH_RECEIVED;\\n    }\\n\\n    // ERC721\\n\\n    bytes4 private constant ERC721_IS_RECEIVER = 0x150b7a02;\\n    bytes4 private constant ERC721_RECEIVED = 0x150b7a02;\\n\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4) {\\n        return ERC721_RECEIVED;\\n    }\\n\\n    // ERC165\\n    function supportsInterface(bytes4 _interfaceId) external pure returns (bool) {\\n        return _interfaceId == 0x01ffc9a7 || _interfaceId == ERC1155_IS_RECEIVER || _interfaceId == ERC721_IS_RECEIVER;\\n    }\\n}\\n\",\"keccak256\":\"0x2162ccc1b2bc75556f5058092b311f7cdd3537e4d36f8530eff40775890271a5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516115bb3803806115bb83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6114f36100c86000396000818161025601528181610334015281816105750152818161063f01528181610741015281816108c801528181610a0c01528181610b0d0152610c5201526114f36000f3fe6080604052600436106100d15760003560e01c806393538f111161007f578063d2570b3b11610059578063d2570b3b14610290578063f23a6e61146102b0578063f28503e9146102f6578063fad5f5ed14610309576100d1565b806393538f11146101e9578063bc197c81146101fc578063c34c08e514610244576100d1565b8063150b7a02116100b0578063150b7a021461014d578063570187a0146101c35780638fc17957146101d6576100d1565b8062ebd9e5146100d657806301ffc9a7146100f85780630dc09f2f1461012d575b600080fd5b3480156100e257600080fd5b506100f66100f136600461125d565b610329565b005b34801561010457600080fd5b5061011861011336600461129d565b610483565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b506100f661014836600461120c565b61056a565b34801561015957600080fd5b50610192610168366004611129565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610124565b6100f66101d136600461120c565b610634565b6100f66101e436600461125d565b610736565b6100f66101f736600461120c565b6108bd565b34801561020857600080fd5b50610192610217366004611072565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561025057600080fd5b506102787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610124565b34801561029c57600080fd5b506100f66102ab36600461120c565b610a01565b3480156102bc57600080fd5b506101926102cb366004611196565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b6100f661030436600461125d565b610b02565b34801561031557600080fd5b506100f661032436600461125d565b610c47565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103975760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60005b8181101561047e5761046b8383838181106103c557634e487b7160e01b600052603260045260246000fd5b90506020028101906103d791906113f0565b6103e590602081019061135a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525087925086915085905081811061043c57634e487b7160e01b600052603260045260246000fd5b905060200281019061044e91906113f0565b61045c906020810190611058565b6001600160a01b031690610d51565b50806104768161144f565b91505061039a565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061051657507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061056257507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b90505b919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105d35760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561062e5761061b8484848481811061060257634e487b7160e01b600052603260045260246000fd5b9050602002810190610614919061135a565b6000610d9a565b50806106268161144f565b9150506105d6565b50505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461069d5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561062e57610723848484848181106106cc57634e487b7160e01b600052603260045260246000fd5b90506020028101906106de91906113f0565b6106e8908061135a565b86868681811061070857634e487b7160e01b600052603260045260246000fd5b905060200281019061071a91906113f0565b60200135610d9a565b508061072e8161144f565b9150506106a0565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461079f5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561047e576108aa8383838181106107cd57634e487b7160e01b600052603260045260246000fd5b90506020028101906107df91906113bd565b6107ed90602081019061135a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525087925086915085905081811061084457634e487b7160e01b600052603260045260246000fd5b905060200281019061085691906113bd565b6040013585858581811061087a57634e487b7160e01b600052603260045260246000fd5b905060200281019061088c91906113bd565b61089a906020810190611058565b6001600160a01b03169190610e07565b50806108b58161144f565b9150506107a2565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109265760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561062e576109ee83838381811061095457634e487b7160e01b600052603260045260246000fd5b905060200281019061096691906113f0565b610970908061135a565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508792508691508590508181106109c757634e487b7160e01b600052603260045260246000fd5b90506020028101906109d991906113f0565b6001600160a01b038716919060200135610e07565b50806109f98161144f565b915050610929565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a6a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561062e57610aef838383818110610a9857634e487b7160e01b600052603260045260246000fd5b9050602002810190610aaa919061135a565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506001600160a01b03881692915050610d51565b5080610afa8161144f565b915050610a6d565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b6b5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561047e57610c34838383818110610b9957634e487b7160e01b600052603260045260246000fd5b9050602002810190610bab91906113bd565b610bb9906020810190611058565b848484818110610bd957634e487b7160e01b600052603260045260246000fd5b9050602002810190610beb91906113bd565b610bf990602081019061135a565b868686818110610c1957634e487b7160e01b600052603260045260246000fd5b9050602002810190610c2b91906113bd565b60400135610d9a565b5080610c3f8161144f565b915050610b6e565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cb05760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561047e57610d3e838383818110610cde57634e487b7160e01b600052603260045260246000fd5b9050602002810190610cf091906113f0565b610cfe906020810190611058565b848484818110610d1e57634e487b7160e01b600052603260045260246000fd5b9050602002810190610d3091906113f0565b61061490602081019061135a565b5080610d498161144f565b915050610cb3565b6060610d9383836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610e35565b9392505050565b600080856001600160a01b0316838686604051610db89291906112dd565b60006040518083038185875af1925050503d8060008114610df5576040519150601f19603f3d011682016040523d82523d6000602084013e610dfa565b606091505b5090979650505050505050565b6060610e2d84848460405180606001604052806029815260200161149560299139610e40565b949350505050565b6060610e2d84846000855b606082471015610eb85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161038e565b843b610f065760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038e565b600080866001600160a01b03168587604051610f2291906112ed565b60006040518083038185875af1925050503d8060008114610f5f576040519150601f19603f3d011682016040523d82523d6000602084013e610f64565b606091505b5091509150610f74828286610f7f565b979650505050505050565b60608315610f8e575081610d93565b825115610f9e5782518084602001fd5b8160405162461bcd60e51b815260040161038e9190611309565b80356001600160a01b038116811461056557600080fd5b60008083601f840112610fe0578182fd5b50813567ffffffffffffffff811115610ff7578182fd5b602083019150836020808302850101111561101157600080fd5b9250929050565b60008083601f840112611029578182fd5b50813567ffffffffffffffff811115611040578182fd5b60208301915083602082850101111561101157600080fd5b600060208284031215611069578081fd5b610d9382610fb8565b60008060008060008060008060a0898b03121561108d578384fd5b61109689610fb8565b97506110a460208a01610fb8565b9650604089013567ffffffffffffffff808211156110c0578586fd5b6110cc8c838d01610fcf565b909850965060608b01359150808211156110e4578586fd5b6110f08c838d01610fcf565b909650945060808b0135915080821115611108578384fd5b506111158b828c01611018565b999c989b5096995094979396929594505050565b600080600080600060808688031215611140578081fd5b61114986610fb8565b945061115760208701610fb8565b935060408601359250606086013567ffffffffffffffff811115611179578182fd5b61118588828901611018565b969995985093965092949392505050565b60008060008060008060a087890312156111ae578182fd5b6111b787610fb8565b95506111c560208801610fb8565b94506040870135935060608701359250608087013567ffffffffffffffff8111156111ee578283fd5b6111fa89828a01611018565b979a9699509497509295939492505050565b600080600060408486031215611220578283fd5b61122984610fb8565b9250602084013567ffffffffffffffff811115611244578283fd5b61125086828701610fcf565b9497909650939450505050565b6000806020838503121561126f578182fd5b823567ffffffffffffffff811115611285578283fd5b61129185828601610fcf565b90969095509350505050565b6000602082840312156112ae578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610d93578182fd5b6000828483379101908152919050565b600082516112ff818460208701611423565b9190910192915050565b6000602082528251806020840152611328816040850160208701611423565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261138e578283fd5b83018035915067ffffffffffffffff8211156113a8578283fd5b60200191503681900382131561101157600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18336030181126112ff578182fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18336030181126112ff578182fd5b60005b8381101561143e578181015183820152602001611426565b8381111561062e5750506000910152565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561148d57634e487b7160e01b81526011600452602481fd5b506001019056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a2646970667358221220f7c425c3a3feed3f4634aa8703a8b0eb3a605b60d3041f062774fa50ba15f46364736f6c63430008020033",
  "deployedBytecode": "0x6080604052600436106100d15760003560e01c806393538f111161007f578063d2570b3b11610059578063d2570b3b14610290578063f23a6e61146102b0578063f28503e9146102f6578063fad5f5ed14610309576100d1565b806393538f11146101e9578063bc197c81146101fc578063c34c08e514610244576100d1565b8063150b7a02116100b0578063150b7a021461014d578063570187a0146101c35780638fc17957146101d6576100d1565b8062ebd9e5146100d657806301ffc9a7146100f85780630dc09f2f1461012d575b600080fd5b3480156100e257600080fd5b506100f66100f136600461125d565b610329565b005b34801561010457600080fd5b5061011861011336600461129d565b610483565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b506100f661014836600461120c565b61056a565b34801561015957600080fd5b50610192610168366004611129565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610124565b6100f66101d136600461120c565b610634565b6100f66101e436600461125d565b610736565b6100f66101f736600461120c565b6108bd565b34801561020857600080fd5b50610192610217366004611072565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561025057600080fd5b506102787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610124565b34801561029c57600080fd5b506100f66102ab36600461120c565b610a01565b3480156102bc57600080fd5b506101926102cb366004611196565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b6100f661030436600461125d565b610b02565b34801561031557600080fd5b506100f661032436600461125d565b610c47565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103975760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60005b8181101561047e5761046b8383838181106103c557634e487b7160e01b600052603260045260246000fd5b90506020028101906103d791906113f0565b6103e590602081019061135a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525087925086915085905081811061043c57634e487b7160e01b600052603260045260246000fd5b905060200281019061044e91906113f0565b61045c906020810190611058565b6001600160a01b031690610d51565b50806104768161144f565b91505061039a565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061051657507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061056257507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b90505b919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105d35760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561062e5761061b8484848481811061060257634e487b7160e01b600052603260045260246000fd5b9050602002810190610614919061135a565b6000610d9a565b50806106268161144f565b9150506105d6565b50505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461069d5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561062e57610723848484848181106106cc57634e487b7160e01b600052603260045260246000fd5b90506020028101906106de91906113f0565b6106e8908061135a565b86868681811061070857634e487b7160e01b600052603260045260246000fd5b905060200281019061071a91906113f0565b60200135610d9a565b508061072e8161144f565b9150506106a0565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461079f5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561047e576108aa8383838181106107cd57634e487b7160e01b600052603260045260246000fd5b90506020028101906107df91906113bd565b6107ed90602081019061135a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525087925086915085905081811061084457634e487b7160e01b600052603260045260246000fd5b905060200281019061085691906113bd565b6040013585858581811061087a57634e487b7160e01b600052603260045260246000fd5b905060200281019061088c91906113bd565b61089a906020810190611058565b6001600160a01b03169190610e07565b50806108b58161144f565b9150506107a2565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109265760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561062e576109ee83838381811061095457634e487b7160e01b600052603260045260246000fd5b905060200281019061096691906113f0565b610970908061135a565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508792508691508590508181106109c757634e487b7160e01b600052603260045260246000fd5b90506020028101906109d991906113f0565b6001600160a01b038716919060200135610e07565b50806109f98161144f565b915050610929565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a6a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561062e57610aef838383818110610a9857634e487b7160e01b600052603260045260246000fd5b9050602002810190610aaa919061135a565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506001600160a01b03881692915050610d51565b5080610afa8161144f565b915050610a6d565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b6b5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561047e57610c34838383818110610b9957634e487b7160e01b600052603260045260246000fd5b9050602002810190610bab91906113bd565b610bb9906020810190611058565b848484818110610bd957634e487b7160e01b600052603260045260246000fd5b9050602002810190610beb91906113bd565b610bf990602081019061135a565b868686818110610c1957634e487b7160e01b600052603260045260246000fd5b9050602002810190610c2b91906113bd565b60400135610d9a565b5080610c3f8161144f565b915050610b6e565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cb05760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038e565b60005b8181101561047e57610d3e838383818110610cde57634e487b7160e01b600052603260045260246000fd5b9050602002810190610cf091906113f0565b610cfe906020810190611058565b848484818110610d1e57634e487b7160e01b600052603260045260246000fd5b9050602002810190610d3091906113f0565b61061490602081019061135a565b5080610d498161144f565b915050610cb3565b6060610d9383836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610e35565b9392505050565b600080856001600160a01b0316838686604051610db89291906112dd565b60006040518083038185875af1925050503d8060008114610df5576040519150601f19603f3d011682016040523d82523d6000602084013e610dfa565b606091505b5090979650505050505050565b6060610e2d84848460405180606001604052806029815260200161149560299139610e40565b949350505050565b6060610e2d84846000855b606082471015610eb85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161038e565b843b610f065760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038e565b600080866001600160a01b03168587604051610f2291906112ed565b60006040518083038185875af1925050503d8060008114610f5f576040519150601f19603f3d011682016040523d82523d6000602084013e610f64565b606091505b5091509150610f74828286610f7f565b979650505050505050565b60608315610f8e575081610d93565b825115610f9e5782518084602001fd5b8160405162461bcd60e51b815260040161038e9190611309565b80356001600160a01b038116811461056557600080fd5b60008083601f840112610fe0578182fd5b50813567ffffffffffffffff811115610ff7578182fd5b602083019150836020808302850101111561101157600080fd5b9250929050565b60008083601f840112611029578182fd5b50813567ffffffffffffffff811115611040578182fd5b60208301915083602082850101111561101157600080fd5b600060208284031215611069578081fd5b610d9382610fb8565b60008060008060008060008060a0898b03121561108d578384fd5b61109689610fb8565b97506110a460208a01610fb8565b9650604089013567ffffffffffffffff808211156110c0578586fd5b6110cc8c838d01610fcf565b909850965060608b01359150808211156110e4578586fd5b6110f08c838d01610fcf565b909650945060808b0135915080821115611108578384fd5b506111158b828c01611018565b999c989b5096995094979396929594505050565b600080600080600060808688031215611140578081fd5b61114986610fb8565b945061115760208701610fb8565b935060408601359250606086013567ffffffffffffffff811115611179578182fd5b61118588828901611018565b969995985093965092949392505050565b60008060008060008060a087890312156111ae578182fd5b6111b787610fb8565b95506111c560208801610fb8565b94506040870135935060608701359250608087013567ffffffffffffffff8111156111ee578283fd5b6111fa89828a01611018565b979a9699509497509295939492505050565b600080600060408486031215611220578283fd5b61122984610fb8565b9250602084013567ffffffffffffffff811115611244578283fd5b61125086828701610fcf565b9497909650939450505050565b6000806020838503121561126f578182fd5b823567ffffffffffffffff811115611285578283fd5b61129185828601610fcf565b90969095509350505050565b6000602082840312156112ae578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610d93578182fd5b6000828483379101908152919050565b600082516112ff818460208701611423565b9190910192915050565b6000602082528251806020840152611328816040850160208701611423565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261138e578283fd5b83018035915067ffffffffffffffff8211156113a8578283fd5b60200191503681900382131561101157600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18336030181126112ff578182fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18336030181126112ff578182fd5b60005b8381101561143e578181015183820152602001611426565b8381111561062e5750506000910152565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561148d57634e487b7160e01b81526011600452602481fd5b506001019056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a2646970667358221220f7c425c3a3feed3f4634aa8703a8b0eb3a605b60d3041f062774fa50ba15f46364736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}