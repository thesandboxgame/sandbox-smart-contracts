{
  "address": "0x40BDedE0D2D8f078f42cccF4f7720DA1Fff1AcBf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x22d943dd66288b2e8c6698ed9813ef8d6f1b8ae68dbf34a57ed74d4053b1f2c4",
  "receipt": {
    "to": null,
    "from": "0x7074BB056C53ACC0b6091dd3FAe591aa3A4acC88",
    "contractAddress": "0x40BDedE0D2D8f078f42cccF4f7720DA1Fff1AcBf",
    "transactionIndex": 40,
    "gasUsed": "2667591",
    "logsBloom": "0x0000000000000000000000000000000000000000000000000104000040000000000000000000000000000000000000000000a000000000000000000000000000000000000000080000000000000000800000000000000000000100000000000000000000000000000000000000000000000000000000000484000000010000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000100000000000000000004000000000000000000001000000000000000000000000000000100008000000000000000000000000000000000000000000000800000000000080000000100000",
    "blockHash": "0x4c8e468b5e9e66edfb83b92a0c7c7a8152805a6b0712070f3f0d96d54a6cca14",
    "transactionHash": "0x22d943dd66288b2e8c6698ed9813ef8d6f1b8ae68dbf34a57ed74d4053b1f2c4",
    "logs": [
      {
        "transactionIndex": 40,
        "blockNumber": 42457000,
        "transactionHash": "0x22d943dd66288b2e8c6698ed9813ef8d6f1b8ae68dbf34a57ed74d4053b1f2c4",
        "address": "0x40BDedE0D2D8f078f42cccF4f7720DA1Fff1AcBf",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000bbba073c31bf03b8acf7c28ef0738decf36956830000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 140,
        "blockHash": "0x4c8e468b5e9e66edfb83b92a0c7c7a8152805a6b0712070f3f0d96d54a6cca14"
      },
      {
        "transactionIndex": 40,
        "blockNumber": 42457000,
        "transactionHash": "0x22d943dd66288b2e8c6698ed9813ef8d6f1b8ae68dbf34a57ed74d4053b1f2c4",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000007074bb056c53acc0b6091dd3fae591aa3a4acc88",
          "0x00000000000000000000000040314efbc35bc0db441969bce451bf0167efded1"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001649d57d67610b4000000000000000000000000000000000000000000000001a1167544a68009b20000000000000000000000000000000000000000000000da5a4b7949505c09160000000000000000000000000000000000000000000000019fb1d7ecd009f8fe0000000000000000000000000000000000000000000000da5bb016a126d219ca",
        "logIndex": 141,
        "blockHash": "0x4c8e468b5e9e66edfb83b92a0c7c7a8152805a6b0712070f3f0d96d54a6cca14"
      }
    ],
    "blockNumber": 42457000,
    "cumulativeGasUsed": "11228126",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9d305a42A3975Ee4c1C57555BeD5919889DCE63F",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xfD30a48Bc6c56E24B0ebF1B0117d750e2CFf7531",
    "0x1b47567CBE36e63293A7A2018F79687f942aB24C",
    "0x3e9c5a512f21e442d7b5b2982669b2f41c3dc2c4166b53e3fa09394d13e1a15f",
    1685016000,
    "0x3044719d139F866a44c988823513eCB93060bF1b",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xd19cc137bb848d3a48ad8ad883886b67c26761dc",
    "0x42a4a3795446A4c070565da201c6303fC78a2569",
    "0x7804fb2AF15bB1323795A888B09913cEf629Ffda"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 291,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf3972d44460223d55cf5613cc45b6d45589695c18dda23db72e4401ad0b366da",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7acddf67bb7e22b26cdfb716d349d2e0dbfed62dd0121b286f7ba2838534a902",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x995efffa2d6e0d0c48f934ed6770643d70aefe5f797903db0027b404a1173c40",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x86cc976580392f90ac1c76770669d0d1e5c068926cc8deac4c08afe703e45ee7",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1c4a36d79b7164752b9fb8d3568ef853a9aeeb1926449861dd7da2fc650bc90",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa3b0e5a998b5b52d8e662d812a2ec3d92986f45542d00ff7a89e7d97a72dcb1a",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdcde6256cacf2f601d3abcad46d5f2393fee83df554c00664319ad1f4787d0fb",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcd04d719a9959fabace1fdf6338857763c3ccb26da480e000f518d30da5fc599",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf217824f5e93ba6c62c5ac2ee41328aa668dfb9d2319fefb00954ef9b1cdbc5a",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb50db9fdcb5e60a1698a6d8c65c1cc97a9153b66526260c9d502aef4427c57da",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb0200c56ec5e6424da0e8f53a83c29e5678d2433e722c7135a32234ed69b6cf4",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d62b79724d146981860042176efcd2646628535656a4fe2f3cb13cefc01b80c",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xefd320998fa36ee14d9ee3214484a2d47b070e03a9449262e4c15b3402d2d53a",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb2523726ae0eae9ee8b8606296fad509055a09c5b698b18db98769c84fd23d51",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x729e3c173b3917f0b13579afa04e51d1cb29155cd1764cb30335e73dd68a205b",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcb4deceb4e9e21b0c1991899afed9182424a8f166a91cf54f5b06e585de13a64",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa510940db9e77bd9b6aee4a3132b79244016360864386bb1cad053333bece275",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xce64cf8e53c425ef3d18ec588348cbaf6783c644239fdd499e83287a613c248d",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0e82d584fa01484ee2f4c0bf792cb6df2b5fc0deab3348cc9ace75648ac85047",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9204dd86613fab3a5cab272122a6057d8f8bdb6850842ec94263b082bda7779",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbe45ddc5b2a1c807d1243f083690cb0cf7408105d9357e32493833097d735118",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb78e95ebce17ef3c04b882b257dcd3d2ce92d139ecc5b8e896983e3f061dfcdd",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5a23077668b1902edd51c6e7eea509f4eac1b7e1e8c82556838196d64c0ba66e",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 377,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd0025b2c549d7a0217e1ebc30865bda9837e350e5ad88707ef4e2730779645a5",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 363,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x332d91e5bf5f8cb767bb82b6db0570f7a8ec494fcda52b64b8fe470855e9312f",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb92cd0010adc9408114513614fa0b878b1760926a60e083a5bc357372d7128e4",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd71604563a23dd5811cdf5214643b578655eab884e076866ad55563fad150b2b",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xebdc9d58ed0df75af2cb59863fc1d2b6caa6ef17e50681b14ccf6325bb79e90f",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5c53b1fce223778b62989e58e6917daebc33e6b4d82cfd3548eddde123313b2b",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb568754cace9b92c25403f56178e00adce4199e0f07006acf33130d26a925043",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd3d1e2aac2060dd765a965de791b8fa56918af581047a0536e1acd114ec722de",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf7eace9ab0ffb9bb90bb19ad6e9ac93058293a67faf181e425943cfc682836c8",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6947bc23b9a517f09386c6f57d1cee0fc152437b9b18b05973adeaa933340fce",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0150c2d271094f2242cadd40ab6541fdf683c767f8cc38b8d0b56ba9f759ef8a",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 376,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9db8fe48af445bee6c86f123d8b99c787baa2bf75834d3f6b83940f5f585bb0f",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xeee56916d549109152adac9a02e8c403f559366acaf8e3a0e71605c093e92f75",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x39bf9500f9f2569d795f16a78ad649e18a40e3838a0eedb9f31623cb4cefd887",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x66e4591586b59b5c2797b13692feede1a749bd97d265ee6f48d737c28598082a",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 362,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0dd6fd8c1d1ffb548802ed0af62b7900a9477cb2de39fbce906384318db9f976",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7e0fc786eeee16c881b069eeac99dd7c46642a741492c749ca2bd4544ed8b33a",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x71a9fa2f413d2e1bb9e2ae943758b20f23c76ee82cb73c0ca9cd607679618a20",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x51b07c19df38b1e6990dbca719362386e84a3d1034f032843d8ae54ec57d72c4",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x116c64a34a20dcfb18a674b29668cb46ecfbc88f236a083396341ec25800a7ff",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b8846fc1126b81f233cbaf30faedf027dd163d0e6875b2c42aab78e6cd45597",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1846ab458d57dae6c099b8b614838a9079d62c30986d03fa6bcf298a79d0c768",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d73cfa9697ab9ea62854873913118b0852cdb92207807b21ca0982f3a6d2432",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x56fb7920accbf802cf57283f013905e2727606ef8b442981af21e77e8eb87962",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xed1d20f216162e017a30ce00876191bb11276fb910414e8fd42c5009c090438b",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x70edbffc071b76cc444d2604c13fb826f53a613a34d1257661813f9dd499a152",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb2e4b4d810c293ef06c04423e70e039048e4558469ddc9f0322647b9f3a8d43f",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1022157df328ad2c7d3332b37db3ef167a93b64c25a2b38112c86d03d3465553",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa0a7fa14c28e38547eddd8f7689a217fb5948ec65c4214c8699abd7612a576d9",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 382,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb920d4bca1fe80e90a4618a024ef2dd2dd507ee884d9ec847fb1af85626a269c",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4420285615ba95f60f32c9125f81f02e8491ba24d7766043f3046dcf7f2c43d8",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb8d1e86d0f3402492c6c138a88b8858b1d77f233af6cbbf9841d99e9ee730c63",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2f0a5e8102372acac996bc6777aa614d5cbbf42eb951bf35b1a7e10a981f9b34",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1183410396ea0abe681b6b7c5c337216c6dcfff5cec9360023491d51e427f878",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x068c245548d0da72bdcb07aa0e17204ef66d7c6c2f55ad19c99ecb3c5674c668",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9461d027470e7d8196be05ad0dd0e4ce168ca13181019b2aaec5d51bd2ccae06",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 365,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x53048a3810b33e6b3a34eb5f49f989ee4920e78ceb95f3a9fd2fd78ce6e6021a",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6eeea2dfd818e90505ee6ad78df538ee8904a2e5afd26365742ead29a18ad526",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2fbad8a0d98bffae67ca548e604a1be70f879547fc0351330dcb67fcd95ba5a5",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6da14f522a48c59fd88d22d47472b41134a86130ac3b6eff0e64cd8e7ec99df",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a76a45e097d6479c3f63b219038b50ad4cae4ae82d6c39529379cd04faf2bb9",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcc9257115769476b58aea11a7e6e7b9c19a4910f9bb4e9e66f0510e3c0764505",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2eb93371b7cd4a072087138f1e00018023f5d7761548c9b24a455ccc1505ec35",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab5210cbc45cc95bcaaa2e610b6a407c24b210190f6bef6fb530cbf13ebd4cb9",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd1898cb22836e6fab2b127c6af9c3a6e950726c8513cc2ef5dbee0d7ac38164f",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5fcd67adf3b4ac84b26efa44c6e33df271138d82c8fa7d95e29b61d99631e044",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x48fe9f082a250e2dc572858f3fc2ab8fd3722f910d07ac9c200cd7a5e347750b",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2967b5a32018e6c9df434ce514bfa1fb10edcf7fc663fc491f1c6dbabd49535e",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 383,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xaa2f41c36f9b40c4a3e15449846b14c305b635cf068afbaaa8a2b9f176fa32ef",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d20036ff3ac12c29709730eb4a407480b6ba1666798c06f603dde3295c8342e",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc64d8c638ce2ae6edf92479602a27d6bd0de4d2c88913a6e953d435c6ce9257e",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x98bb123ade4129b8d7fcce4530c8dabaac3473cbe1361db1a40cd46a176a1c53",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7bfb536cd4e1bf6d292a16856c24cda21b06b16776257e64bf3b2f05e5eee8b4",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8c5c5a77b9bc479b1d37c49c9a2a649b31de5b1601b8d66d111de2d62d59bef1",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xeb82f698118bf413932f85cb17885691d8f6832b6bff83f2488cee36686c74f8",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 366,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb0b8113904fd692a59557e771985404374c9a367195b133b898786fce102deb2",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4008decf4def0506fce3e02342999bfbe15f07efbb6b8882f5ff5a292f17af58",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0f55cdedfa441ecc48bb5a3ba68c33538d46efa148ea71e264f5e1a103cf451c",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x292fbe957db867e525888a34a4823614d19a1bd742ef0f3b719acf31a7c35c3a",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7dbb40d8e0b85b5a8dacd18f56ad0d53de1be3ff49bd33d1d44a15c576904d21",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1facdda3aadabba8ab93f89d24c506d2c04d0950e364c164077d9f47e1bd694",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfec5253dde4e93bacc56d447b5a7d1a9985afd5d24844ae0ff3cc788e3268f98",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4cd6f4eff9453349d4a6c96c30e705cfb73de65aa9c01f0c25e338e9b06dba43",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc3a0d9ca7f4d1a9c813b361b7f26518a081835e84a0d6c65cf208d702d376928",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb96fc8fa4e0210cbde3c7d9fb9188bfa55f44c7b42cd210efd5b367654a27641",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x07bd2747897caff8de1c2f4901074b8f65d1352722e32565a70df0df04871afb",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ab77ac57d380ed38f19156a784219a7705b3ef80f3c2533c57c70d58c9dece0",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6a98f81344a044a12b98aaf18087a358a4ad974f6ac3bbcbbf9935b08c0964fc",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe148f52bcfc73358d7968c54b1715c22117034c855f91e84d335ff3a41f449df",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5fd006ac2761dc88facbb8de9b599fdf5f9f568a0cf77ba42367798d9a4f9a34",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb3b47776fbd85923ce0f83063ce7da5d2928250175acbef253e3927ca6ed42d4",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x79d37c703b5419691d5b817a1ac23342a11e0aed6ff1f8d1acb40afc3bd4120a",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x727efa7bc7833f567363cc9fdee8187b19cc04ecdc64fd5aa712418d52539ff4",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x04de2cb0efa8ce640267b157ccc1e9fd0e814dec7eb325733b8c71cb466b412a",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb23fae5b28c3da837cd1e746109f2955a99ec8625fdf46514abf9a56e0376faa",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2364f23c530954e6d578aa370b70823043e54064ac506577faecbcd39fc86145",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9902afe5712fb3bbc8a65b9cd10ebb4121a6da719afef6953f12dbbb08a1f17a",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 376,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf55791f487bd8dc5bf4282090d058760c24fee4303ded186915bf18c9be90917",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x986a990e186eb74a0f2034063ce86c58072ef6b3a3d039bfa8de8718a11f5a73",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfddfad79135c11b6493bc39d90890a43001fc3c5163de1884c966ca6bc651a98",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2b642c78f8a4a7b9944ae1d5358c375387caf3f7a4a299aa35bf1650820c0727",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0d4d972bcf403b56c4c4c2c038b81ac2ee21104ce6fb64232f4c04ef35693572",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd59c309d7f38a3c5d34786acdb7123ab49d8d60887fa20e67b597710ec16547f",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa4867461d77c48a047919e38ba9df2c6f6148a5cc294db32d93b1e39ebaaf048",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdbcfcf9cf78ccbf4a490fed2d32d4b078e249f395ee2e472f3a53aed68e2938d",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1fac6d04cec381152a88cef3854c289dacb5994eb3cef6308c5da5c8aa03c62d",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x94076a4893f5423be3f249f43eb164527cb1a757b63c8bfb634efe9f780cd787",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x494effd2a653e313c939a58c574d48610f28fd4c863a46bfe45d005b9adc2394",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb2d2097c959b8b5ea7cb4cd874a9f0a1c14e8bc9c44f6affcb045f69ba94c465",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd3482d7466fea1cc795909a3cf04642bafdd7849f5a5b556521d4541f80cb23a",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84219b0b1190f7db264509fa85bf937975871bd608ec18a18ab68da6030564f1",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe8f9c63e67a5a4b3b9df2d5a9b3c53672d50c00dd74205b800820232285144ba",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1c4e7708e2082ffd3ae87216861f31110d1751cef4ade935fb6fe899c2043153",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5782aa03735b36a8f3f4eace1ceaebf25d6c48634a02f224efc0018e024569e2",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6cbf04b3b8b5a0f10714b931d57b148976f0046c0f7d6a02c55f8afe7ed8f162",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac3d6812697923a1b5f1b13ceb69e1f573852ebd77b25a56b8761d12a0c7efc1",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 377,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8852e8867cfcda192623b00d21a730b75879b3a1318edbb488609375b16997e1",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb500c0f99f52d6d637841ada854d2ea1000ecb17e24ee4baf910b282a801e148",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3171689dbe57d96c030b230f18b13151ef278d75d93aa7a1bf7e77aba8f8cae3",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa9fd153bb433dc0b87851576f848b3d4882a0f4af7ed818ab222ff7081c76b8",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d92fb1d6365c4fec4ad29c190faeb81b30b308eaa45012ce4adbbd84290cca6",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x76d767ef01a5492dd8296a12dd499c5bda99e7bec2f53ee1eb7d07b7e1bb9c52",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc9d7e66dd14e5c1ac73eb46d70c4c918adfab0e489410d6b7abfca02e9c7adba",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d760d55fa1dfcac18efac310e895b329096ebf24f3ac94c4de77b8e19b5a185",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc8f5265634466543ed6b153f3e4b89edbab03cdfa138f62ad85fdd34f8ff6366",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8a23e9ebbcb4c0ac8cd7009a4809dfe8c381ff1c6165c16844a7c8cb1c0495bd",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcf48ba2914d7fa8fde7782ad3902abb7d84269178c3f259936f596e8966e2d58",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x45c2193416f026478e94cf643f865caba8a1d05b4e21b236647175e21fc56a3b",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 365,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x960537dc489b2d17c5fce65d4b20bfbe6d1cb996515827b0bd991bb40cafa6a5",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0402b2edd07ca7ef16129fa95c96037787402d2cb3f78bb0a95eeeb8c7bedde3",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52e6ae8695e2e8a720a8b7d4b0b149e0701801eb6351cba00033ecb14ce906c9",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xff57b72d6efa2bfec5d60a9ff5088ec84b7560194d89f635e239891961e9c8c2",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa11429fb31d6024b9dc7863bbcda5873bc5c2ac6867e3e854d4eab6a06d16fdf",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x800512da257066c0a0ba7f01bb6a2274bdf6985658bb38deef0c0fa837fb3797",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0e436bdf36ac21361ac11ca266b00b049f25fcb070b4ce23225783fcc130f354",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd9f3d0b3076c080964a036da094b8052847e65d84e85bfa1f71301ff20df6196",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xec271ac2850ad5faed8757d2bba777b9167e3af6fc2974a8e1825605bb6c7598",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfa3cb51214b63cc7fe2678e3f63d838fcb3836bfe37a24eb05d1840b7704ef6f",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf7ebd3a31e41e80289148353646f50003b82a1659aefd5fe816cb0d9b93ad7b",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x64953ae45781edc4dd96994b345a3e66ea4c2772a7e38e6462b4d6bccb09103a",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x38f49851d8b633d81d8c0e59d247e8d4d122d0905f337b479b0f67dbefb5ba0a",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x503b602b471d7aee5748dd861f94e534e02a80ad6a256020727ce629e99cb221",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2294359f064e4f8b436f20ff3504107710537fd017ca5e4b97c2907438f3fc71",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x372954a5afef3a9972f13b1069935b6b1a2acf4879329864079d7708bb3d9f79",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdce2f5ccc0ad8df64ae1fcca97ef6956a6be6ae01a35afeb691858a88e5e9911",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe592e74d12dc68cb6a98d060d85bd545fa95bc2d567de479ab5efba54541c4bf",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x93dcfbee7f7628255f900e8402c03471326cfb464ac2ce39f7e8dd0d01580c29",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9448f19d9b960a6f67ad39cd64526ec25ac93079afe2472926d057fd18d6c68f",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd67de8a447b1921d7c48dcf6dee7f02f43ea7e18321de999915bf75026f5da03",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xee40d5fa28d2aa046b2fc7acb6cd3400cf19d6879a0f7f4ce1099af917a45707",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x98b6c2243215a5ba74a213498552e5b415fbd83f17f188456a5a9aa1a1f23db7",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd9ac53316e129f9fe2959031a6910703039883df0fc45f79bf6bd7a89f65f556",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x21808f750343c499fb7fc71c0414b505d5c1e0712d28e4c537b3e4c49671e09c",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x837f4c193e9dd61bce7a65c8b9622553b0408a81d00f896e994f663269cd486b",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5f60b75f06c6481e84ef6a9f3cf41c01ed3a72836045f984446fd209da750c6b",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfc90ae36374b45e4975472ddb2cf16b5804723e3bff641a05d13bf92cba419ea",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e89ab60d18090022730660828fdae23a130c90ee632a49973ddec65a0f9f24e",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x807b8f27a2183a5a933c6621dc967411f6ff50fefd7db160150dd4bf9d2f344e",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbcefb82c676238be3c504993158f89ba5158eb9f63391e70fd89a83eb2b852af",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe0ca0cf7a5d0087ca21df5cbb23a65877ec33efa4661310b8ab960bbafc805be",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x573bc5fc5f1ea678cb067a6d68fbcc116e22d210bbfd7d70c672962a4dea7ecb",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 365,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xcfc8a0967a90f8e05de6c29e89730d8d76c3867ef1e6b06b3ebe5b1f6b163d94",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x700bfd536122574075e37c4d9db6adad6ebb6d8c9bf0abc436798866a80c2271",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1ed69d39e2c2581028a08fa1ace8262787879d5d6e53cc1137b314f29c44b5e",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc54a97d3830285dd081d8d661d50b498fc8045249959a5d06097c9db65bbb744",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe2673d079e4a36514bee4784f516bf456af5f2bca78f5acb9992cb226245b7eb",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbaa1cf48847449680e5d7a5965af6e5b67c41848a7d415b077c1dc8bbc90d68c",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6f8b4b434b80388ad879dd42419e7614db519bf1f2f0d14b95c7f448764c8b7",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa0a30ab9a9f568f2ae33fc1087ca6163d98f1e883b45572045736cf3dac9acbf",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x64c0a6e36610d22d86b69a813adc64b291e11897104c89703cbbcfe7a1e97f0b",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4cb25fadbece8285ebbc9ca0ee53aff52a3cd9d8383543517990246e24d6a407",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7d8d65eb221c273379efacb2b4dc86b7f8e6244c516cd0480c580de72238346e",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf4307d9a1c2f8eee7f0c41e4bef3896a44d78350f8f3128f30c05a90498e2d5b",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x91c6c4a0cea892d6687f5a1f181bb8fdddbaf1666f87254972fe5f1501f7b029",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x90144500a0b2e2194bc5e1bface744189eda006d645f331435e30ced2a8abaf6",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x068197c7a79ed5388d3c7009fd68559d7a1de4f21d434eab74b57e41e00ca1e6",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3c6178c47efd82d2869ac0836716777ffe6d95f632471476c31fd91c08695604",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3031c5a5ecc054d79f98016eff70de1473600760cb293022da9315338250bc9a",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1453a5c8a836ddc1ddafa9d0e493c2027b8289a5dc42bb1565793bcd39df9d5b",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x25cee86bcf4a901d90732d1704d04c1e508fcd3540b6b9771565ad879456d7b4",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6de070e79bdd8298cc8a907098d38182142542b13e19ffdc1910458d63540cfa",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc5af2a3bd7e450a4677049b3f6bec772d962808ac169142b525b327aa92a87aa",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x278f50f60cab28d7e98e7cc27bdd5634256f548bb527c3719763b1173a954142",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6c3e3c126f97177f4fbb1a92a57cca6b4f6f44e19c34f5c2888394144ee69824",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x146b116b0ca1b06b9d6e965ba5a193295a036345ac42377c70c72c7b195efb6b",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf1efa4c1a02a6a43113e762929edd5c95ba2a4c7c8e1a2b9451bd6ccfab9deab",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x96812e30462de197515fc28bfaf41e8d0b3c14c437c4fc3c026d5bff437b3b97",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2206c7abcd9a9fe1d7eb7a68a40becd0e9a754c1b51cbd13694454207785df59",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeb82587c68cb4096d5be7ea07f4c374706c671d7ae8a91c357551a6b7445cb6a",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2f6797b7809bc15abed168230cb4215dad77127c11dd1fbcd86d68c9318ac763",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd28c64ccd8ec5f80cfafa415fd3b5292af9c920b3fcf0e220030eb165c7cfa5",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xdb0bd6aea1c386abe4e433740ed834f70952a8c19d19b5327133bc855c053820",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1f7954c8b0735f163f0def65359e880bb19e69a8fd13d186ad3af3d663ce6d6",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5467aea0e754e4582dfdb0f8e525a98f7515f879292c7b10393979310b62858a",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xdb02e935494525107bc5398ebf6438a3d36a19dca302839e39031873a3d6c09b",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5bfdb4980de44391e8bd676ffb8fc67e4eb5272ef361947a13e51297a8046a1",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xee08b6f43f5e4869f77af7cb2addd96ba85e62585b4bf747549f4067b6b8640f",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2b6fd5cafa6a9e47a8205e37d65b6b8c5017ece62146a6cf7061136ea909549e",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x37c3358fbed1620e16bb466d6568cc0a57d8c81a5a28352ff217c1b290a3e11c",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf0b0072a7dcc1f08dac2bc990260c9372b124ea7da46086f7d7235a622a9c638",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe65601000ed06e8b78fef8ae422c79ce8ecd3ca5754ff0c427fc2e50f1415ef6",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d583a5a32065dbd4ef27cac1c7c0c5f89605593c1950c5e9da27cb4f946c831",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7e4cf0628dce20fa9c574f96921422f540c09eb460c45a2dd469a6ec91af37d5",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe4cb7a6f314136cda70a2d0f02e9c0cc7377d1b777372cea853d969eccceb8e2",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8008a45acee0e069cce54436c1b4fd8008f9c91859c76007b36fd916968b8d3a",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6f3594b978fd700a8cd0354fd23f7eebbedf3d6887a5952e6b6c3bca04c7feed",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4087e22389e237d62f348cbdd1695908501ad48b1d7a8db6a80105fd46beca63",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x92eb094b9eb88b21c2c21c849816fe222a933a8e043470dbc0a88f9151b07eaa",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7184db94875df632aaee2c5a5df627d4916ec4ea6bfb15facad22d33d4345b12",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x830737b74720d48a6b847b5c73a7b08368faab8d352975e9e652d07f3621418e",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x469f9c756a6c9bb0b2ebb89899fec08f488e71827f53d7ff141defd3fbfc91a4",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xebd0ffa1fc14c48a4367564cf7612a4769fa444cc1d16031c42a52e892972832",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe0670d878129df67c27a9900afffa1c884c9fd77ce581e8338b19d921903160e",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8bd626bc41eb923dac93e24ab19bfad810d707d80e936a53d304675388a4ab41",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x46bf0ea9370c15c5370e4c79f29e615f77020fe6526a1ee06c389818f41851f8",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x246923628928c4a256df4f14ac4c8b605c6a7368e4c70e4ca4509ea974352aa5",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaad8a7a6fb6ad87cd10957dafee67d5897589d3f69609d8c98824ad7a007f7ed",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2498a6abc152f6eeb27885496eb9ca45701bb46757de6d964b602405f7fd54c2",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x383fc74598faceed6e4b7e6874364dbc0e01f289e7c65c5a2598d6e3c0960116",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd74cae04f490667239c55b4173b51529d676ecd8e28438248c7e953104b353d5",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1e72b8f8b799f4ec5290d477f862d75db2e5a75cf4e0249ab288663965e669ee",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3de30767713007b826553258a4b9dcfd2800e5b396279f2d2d3c5d139611a9a2",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1442e5c24eb596f11ee37983d4024ebf06d5d492dc53bdca50631e7eda3bc123",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf9401ca51dfc60bf81dec15806644b9be4737263a3f2192048dcd8018da618d",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x174c37b562736996e622b3b5145b1e80494491174ebc0f965ab64dac3aece863",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x15037c808378ce10a2135396b01f740dac130ef509e90315e55841b124d4b737",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3be34aaefe15098f059af55040c232de63489df0b282d047eb447b1cdbc3d485",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9859836b0dc7a6e98373c4c6d832a1d34516ce67b4a0c76993586487337b6877",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfa2c5002b29185b887b96b51a734c05b8b57de5f54574651adc2bc7acc69c4fd",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xda292412d3d9869d69ad26c2ae030327ff9d56ddaef152053fcb18ed72c8fdf7",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf130626afa973dabcbf89386d8fe97bbc3015cd13ed4ff741bd939be20373076",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x108c5e1ec176883bd43f8c0331cbb3ee2b03c2dc324ea6918f3a84a039f238ad",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x42569726e53ba8c40c8ee5b48b4cab50a8c4e66e58c33e2961996f3fb9f35812",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1f1bed9ad3b02988ef25f077da64086f7ab842a67fe77ba8fb31a0a6d105907e",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x771d22014b402ddf86f7f12b70cd1ea2a705946b6460c6bfb9837f6207e683c0",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe706aeab6f843dce1494f56361a366df249e7ca1d0d10c1a549eeb90fb91d5c3",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb91a1669063f3fc0dca6c6b720e5cd6a869f649cf73f2a9da2c8462ef7232319",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd167dda8ce0bb0d2a307b14af08ab4ab06f3ebc76a0f2cdb45018ce86e26940a",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdc28174a95aad730913ed257cd4d340acbb55d7d21c4a5aeb5ee6034e347d109",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd4ad055b107d2ee773d28f3b12f81bafd56dfbe48b8a9d2e1486279f051a5ea3",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x89d871d2ef32eed6babd0a9ab4c331c6f4eaddd39469cf57d777b8e4a02dd9a5",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x99203cdd988a13a3deed13a208ab6ae630cd9c2891a9706c7373942aa90a5bf4",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6f0a7a67113f3b4cf1b39d3af33a0357caad5f44e118ec525c85c0052ee40dcf",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc44c05883006a6b65a5710106d92619e5bd7a08ce988e5b5d4ae678ba7165623",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x67ffe1181f1f498ff02a7fe7c0a2046174099085bffe3126f6e4319ed4c46139",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x262dec7256d97f5d6833d2704c42cffa5607886e240a5288f95444b4f55e9ba5",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc518f42c820e5bc130675fba3a7b072f1e4384c42b3ef278c9e427aee38922ae",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9de76e9d13894103b8f8367192459d8ec9fe5ce9a1c12e2e1ad778a9617058a3",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7b2604ec1782dc3e3e56ca4f4575c397ed179bcde4cafaa9bac2be0a9609dab4",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1d8c3b5a40066fde67594c09d9bcde15b3436fb6f0bc8b66213172fddde5094",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2a0bb62afb1edd129bf9d94230c30961a6c1caaeda2397cf66616d3d87b430f7",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8e5b4f6132720bcf6ac0b1aa60e97f56b8c15c981540bab11b076295e32ceb49",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xae4ccbf0a3c9531e89e475973f61e8f23e455cd83f9a7b8f1bc83be0e413c0bd",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6da4ef33e94be285684c6f88ea864a339d87713104d2b83d28776025591082db",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcf7dc99c160b137f6a49f058f371928ca3228c44034fe56037b3d8253bfe95b6",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa0b01e67644a6d1f7e54551cb1dad88f07f4687c3bb863ff20b4007d144c2894",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d698d82c3077c67541d531803e4be59762ee97cff6a49548d5a6131f0ba5ac4",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0233f02f69b59b2be1f44a3730886d691569d5e1a93aa314ccb85e84326bff5d",
      "assetIds": []
    }
  ],
  "solcInputHash": "c036f79ccddd697b5a9602e7ef0ca71e",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}