{
  "address": "0x7c42ccc0b134077098ac5Cbe1C6E57dD9493cB1e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xda818de4f618426ebcf34373dde45c2671bf551f54a8613334983b911c0f1a5c",
  "receipt": {
    "to": null,
    "from": "0xCba49d154b4Bb9a9aD7F5Dad396CB9a0a3a62ABc",
    "contractAddress": "0x7c42ccc0b134077098ac5Cbe1C6E57dD9493cB1e",
    "transactionIndex": 25,
    "gasUsed": "2668417",
    "logsBloom": "0x00000000000000000000400000000000000000000000000000040004000000000000000000000000000000000000000000008000000000000000000000000000000000000000008000000000000000800000000000000000000100000000000000000000000000000000000000000000000000000800101080000000010000000000000000000000000000000000000000000000000000000000000000000000200000000000000040000000000000000000000000000000000000000000004000000000000000000001001000000000000000000000000000100008000000000000080000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0x72642ac6e2704a32bc7448700900ffbeba909f24fc5333ad429ff7c5a1d0f297",
    "transactionHash": "0xda818de4f618426ebcf34373dde45c2671bf551f54a8613334983b911c0f1a5c",
    "logs": [
      {
        "transactionIndex": 25,
        "blockNumber": 62224743,
        "transactionHash": "0xda818de4f618426ebcf34373dde45c2671bf551f54a8613334983b911c0f1a5c",
        "address": "0x7c42ccc0b134077098ac5Cbe1C6E57dD9493cB1e",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000bbba073c31bf03b8acf7c28ef0738decf36956830000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 84,
        "blockHash": "0x72642ac6e2704a32bc7448700900ffbeba909f24fc5333ad429ff7c5a1d0f297"
      },
      {
        "transactionIndex": 25,
        "blockNumber": 62224743,
        "transactionHash": "0xda818de4f618426ebcf34373dde45c2671bf551f54a8613334983b911c0f1a5c",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000cba49d154b4bb9a9ad7f5dad396cb9a0a3a62abc",
          "0x00000000000000000000000083d69448f88bf9c701c1b93f43e1f753d39b2632"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001ac9ad219719dcf0000000000000000000000000000000000000000000000005b801c52eaf9333b00000000000000000000000000000000000000000000184fc1e130d3db58626000000000000000000000000000000000000000000000000059d38180d187956c00000000000000000000000000000000000000000000184fc38dcba5f4ca002f",
        "logIndex": 85,
        "blockHash": "0x72642ac6e2704a32bc7448700900ffbeba909f24fc5333ad429ff7c5a1d0f297"
      }
    ],
    "blockNumber": 62224743,
    "cumulativeGasUsed": "5236201",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9d305a42A3975Ee4c1C57555BeD5919889DCE63F",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xfD30a48Bc6c56E24B0ebF1B0117d750e2CFf7531",
    "0x1b47567CBE36e63293A7A2018F79687f942aB24C",
    "0x1a6e5cc6158add16633f50ad0f6f63985edf4faed9e6f56e69e744273a9664d6",
    1728907200,
    "0x3044719d139F866a44c988823513eCB93060bF1b",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xDbc52cd5b8EdA1A7BCBABb838ca927d23E3673e5",
    "0x42a4a3795446A4c070565da201c6303fC78a2569",
    "0x7804fb2AF15bB1323795A888B09913cEf629Ffda"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 180,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf6ac4055691b055d512a311028496c6adc8c90b991b31493fd4c25f806750a18",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x19104a8c43ee67d886d119c19bb174753581623b3a175dbc542c5799051e3291",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xedd0e7c0cfc33517029e86b1493a1c857d0daa05b857c60594b835841ff44aff",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6df1089e26eecebd20cbb0791b7092ae648f8abb5e354c3c4d03e68085ddfd9a",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7bdd664439b0e644fe991be9f94f52f8b4012739d719ca6a164685a6b897b75c",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb62b5165120a9451919d687956aa87e3c3151c3da345fcab005d30b020141554",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1b3e03494d950085df43788a2c0ad31c5da772fe11b19bf212aa286aa0e8bd40",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x453018cf0b70aa7ffc50dad973c131c050a70edba1a5628d41aa1a1633673738",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x58a3e371b2a25b074e2eab1bd279b40e17bab3182f1930e61bda6c3a5e3a15bf",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x33733fa83ece83a6a722232af2351b959a1c0c2f5a34c8897245a62705a5f1ed",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4c49453e7e56f7cc179e4c416d09fc23e710ef006944e779522db5a7729cff2f",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa2b51fbb4c9861489614cf56ea74cf3530a0f331d0d15ab6f1b349e37244a2ff",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5cf0b3759f2fca171588cc648239617ee991eaabd5c68899cde96807a23d8bfa",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6b0b0fe7bf480990bfb92870d7411e02e4d9f22578c375da6b532c72716182e",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xcffdaa1feab3fd4489a743214d9b69d362b1b1a634d29096891f9bec52819fea",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0edb4f216fd7cc3d16dd5cc1f59b432119aec8c0f2bbc60b596feb7e2c793245",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9753d9f0fa08a3b1bc67955598a2eda0f4cd313808e833bf2c1f6c5b0fd943ae",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe50dc15ce1a9a9d3e1e40eb0012a6d19f0298cbb9fde9faf8a8c01829cdc2422",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x49b19695bd1fb4b8264274bd59859b08a662c0d722f115c9570914c6da8b6677",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x918b94c7c1b04b3305ade6e167a72d1cb374990a5fd363a8579e540e5f79015d",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4f60a8c566b0da80e1cc4c300d3eb5367c39b6082737f2c2cca602f16689820b",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x159b0230cb753038e0b997a0c2d7fb79be545084759613d2d1d523c9c15ddb45",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x767d1b7687120cd8233062c7bc9aa96d5594ebbf0eefc191498e380b45954661",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84db74ba802fb7bf8005c0dedf9d617303e1308c4c404d7d9fcf36c2625509a6",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2f83886dce2a1acac249b7a56656685379bcbb4d048679fab8198cf999c54d2c",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x99b7eed66569e3fceda13f1cb84a3eeabc8c574e856b2277d01126aab3ffb212",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b34a0a4cc0fe0afb3e709e165205ee9b74378af1642a6db46d1c7c121498604",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b480b9fec1c9f29b5d42893c9c5180ba4aa32a9fd0bf3c7c6ed32b8a66bc9ae",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d1da1bc43ecc884234d1a02e9df43e86f65ea956ca7f06ee00955a052cc782b",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8749c265e8994b970e368159eb674e9a0e19097370be85c6d03cbf6b4e5ef7d9",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd0782a2af31fd1faf663a74ee99fdfbcf430a340090935c64fee08d4f0b47cc1",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac39f9bb784fe8459682be22d157097b3919cc9be71185324dc5081be28cd2cb",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd2877bdf4cf337f826959d8485cecfd9b994adab42ff7886483629fb3f70e9d3",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xff7321d1a93d036d81ea6e691d2dcfb3429ec804736f0efb9db768c3bdc8cad1",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7838900d68c68176f90cbe7c634a6153162937c38bcdc0d115023d92bb5b0ba5",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a91d08e1ab2bd8c0d0b1f55cd3f0950d10e5b61a9336a66c2957fd98c909c4f",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbb0ed0ab65f7670fcf3cf77f050a75a6438b5cd99c88cef56fc6812bd84c23c8",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa25016f1e5d3a96108bf8f13d363ce929f9fd76a5fcb06b2ff90b86d64798baa",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7abad1cbd5312443e26b74eb1392804894beeb735a0b70df18fa50b6c2059ba1",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd8f68fffb6e7da49a90d7639ac3df1ca28f9fa91f0b4cd7028da4290cc0b5bfc",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf670c4e0d95aa0c2abe5a3f3f869252d40110a352af4a51ddc1effa996f64478",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb0c4fe6b4c905a2420b4d85e2b35e5af52b02990ee6459f47edcaac110093e07",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0c822530bb4732de5d9667410e3331d72ef41ee4f5b07c0af207eefeb2b96caf",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xee918ae34c42289745744cecbe31dde2c2f6f2def915a89fb8e980f8d393d8ce",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x57d0a8ab25cf127080ea4d6d0b0f55fb418954b9838651c4429d2793c702f988",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2bffc4406edfbc4b790d03988bd3a1b18c698294136e6483c2f69bae7342ba11",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xfddf7f9f5de5d6c66f0bdcf844dcb09e5926535e5defd553402d1f9858e87ed0",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x592368d3b613b5b6c36c0db0dbe37e0591f0115dbb4a80c1e98f3cd72417f4d8",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2dec650f64e5cdfbd4e6398e077ab941f89006062b8075d4e4ac0525233cf2a3",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x04b6dd359d3a2a8bb23b93d8778c79c102db21a25c7b860727f3b938c8c2a282",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x39f079498f4ddc23b19ccc656f7561eaa49fd98f0a36344db303950a92e4ba98",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4e9544ffe4fd924ee79c0f69c54cebd768f6b2b5f262c0e8b4ea556b2cd2c288",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x53497bf33d3b80064b5321ed006b0eb8840211c386fd7772a1f7b6e73fb84dda",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe0df1b0f3bb0bcb0a259ea19c716109be05a35c772e83879b44e57929d902d51",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x35f18a1e8108d5ed59b341356f0a41f4e4445c84a93e686a62a61675f5456a9b",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x606b1ce49b3b7f47f6def8a83eb902069bd30d507da3d3c9e9f83664304c9f36",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9dc50ff9911e23cfc0f5a547bfa6d70fedd8fa8320975ed52c3fdd2b77cd1f6d",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xca5ea1a8ee1515ff5cecc527e0953a053eca5de87bd3c262f3ccd472f6e8712c",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5d3c479a9b86251fe1cb906a18e02af72cb230f4011f587619a994cadfedfa81",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d58c73b55328a6d10f0e8f68109abf7792ab9bbeb05f66624c16f4b96697328",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7dff0778216802b3c1cceb48e57f9a8560bde5e858fe10021960e785524ef76c",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x12ffc9121eec9eb20763da1c12d04a27266e22f7b26cd0a8192f7960d8ae1456",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf7f2047a9fd4c6ba293f4f88cda76a2a685fa80e603c794b185591e7251fb769",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb54e93505492fd9dddc49e5987a6a304dd5c1e5e94213170523718b8316a9da7",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x238e8d81e7b0500e29c51d113585c0e78ad089882b166fd97f293f4196a38dcd",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb6bbe1ffae55b61a595ea1e15f7d3e4e3c481a3bf5262587b39308790e17bea6",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5d3228a2efa5e52ffde41f54f5158159a2f4adad3b0f8aaaa133d9f3e3d86a4",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x64d4c5e8d5b6433884736890860fbc54411f5f939f1090622e543e61e2e1932a",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84fe4ccbaa6ca95fb3a884f522b177737e8982f4d2de0a0098999623764e5227",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbf9ae1f8175e19c0fda71d64dafa2ca5b33727eb0e81fd4ad06aa80eed638474",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc3b030a78d4982195de985a92eb5594e632ae098e4fb241fb93759b3b906e76e",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x93139f315e945ff007a7810406f06fd74aaae101eafef90300fe16c9771fc7c5",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x43802c741011512cd1cd6c486aacb7d2db12dbab363aa841e7e7018f5a7c02db",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1fb4c4b388af08558304a66e8a7ebc7e7c35e9d06fb1f95f995da802343f446f",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9d4e6b5b3fab5ac3b10bdb622cda5d0d657d99e37586e49573f629449868000",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x06c380a6e9ade0617443360fefe56de1d92d0f9fef242d704e5de1f61b1bfe37",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd2b5efdc6be81caf7a3a0ec87e9fee0c6c6694d6d505033bdc233f8d8267760a",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5084607fe1eac26980860f1d4008856f9591629b36f3413339d88fd4a893fafe",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9f027708feefd50fefc8f99e88978dc1d6682fff15b38cd62734bdd8c9fb3c5",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x77514a504d9ba8cbb21c6abb1cd283017669ccc6cc1bd050af117efb49660ec7",
      "assetIds": []
    },
    {
      "x": 191,
      "y": 60,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x2f4d64d8def801c01f58d45c4d393a35bd5cb196cc7e2a9145896b23fb68825e",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 191,
      "y": 61,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x86cf059c4dfd0365bc7dd458549a1eaf3fcfd738a02a8481bc0b7ba9078ae078",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 191,
      "y": 62,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x54853191307398b22ec0f2041b5d70670b7e6c419340a04ba51a8d094229f487",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 191,
      "y": 63,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xeafd19c41d4fee0233a0522725a9e79002ca3a12e1f08836a19d9a607f550fe2",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 191,
      "y": 65,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x54ca2b47020087ae8c5a7bc65a9ccd6e65a3807702e9c3608757dc3575da1bcb",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 192,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf2b81d968c01859767ebab7af36fe6cf6d1ffb481ae7bb6fd027a00eaea10466",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x13e41522340a0ccd028587a5d2b168919f78d26f66a3bb0af86c65873f6a2169",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x699e3e4750db6147c7d866b76f718d4508ada5c11c65fb0b41252215237f1e47",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xada5bb7a53001b8b3708d02e4c5119f36e217829b4e2046863ff8c63489af1b3",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x07df34f05614d1f02c33f3c80014a0feee297f96729179db0bfbead3ecdd84b3",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdec48202ae79ce7112ab68ba837bef7cff34b5ad20f3ab5f2047676bf2038230",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 192,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xecd1f454d2e78da918054b9b25251cab67fa4f5d890bba2f1102093d88d53e19",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8a28670a49a84bf203c9c7992846d869e6af538c272cec880c4586bcf6bc0d65",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x87001280b6814b7ee7c867e139f8b0b4a76d377422d5670638a107ae2c87665f",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2428e7ac6ff849f99c16f274250d7b0866791034f8bfde2d3e9e8720c2487e79",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x63f85aa947b4a394290e426441f9fed0f80ead4791c60d9200fe2801a8c314f8",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf2ce335d8b510dfe0b96105cf0a742cfe0444998197cee65e266fc85cb7f4300",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5c6cc7178f06b566991695d1da704209804c2346ab41c9891e891623112bcf74",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 59,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1792f657ef747396c961e50e70468408481ed3f69744aa1548d08f18422ac4b0",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 193,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d7ce5f42f33d23dac4201c59c6cb6707d89d8295c3c3253bc7bf54b8259b9a2",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc0a1b74f9b81cf64b7a983cac03dd7f08ae54c330c25de4ea0f134ad8a4e5e63",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfff727a343eed5369710106042645705fe408cae826b5991ca372fcefae8c3fa",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6597ebe0450273492ff182bc69965b0b5ef66b5486ac48ef8b005376482007c3",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x997f1561c875ff91e4249f9ed930da9392d1b068b8259f888ae866d8e2e2c4d3",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c5b8accec6712146ae736f59c0812fb562a21ea511a1464e6701d9fb0a4388a",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa07921214d0a2db7687ea82cbdd7ffc001cebc8e67ac2144bab50ae178d7f412",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 194,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x93abd71838f59343172e3bcc3db6569dfe431c0fd2e67594d39c54a678cae660",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd92b598870009c8a60465155b62aa248d900abf39f50d94fb5aed68020c18765",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x791fba399315927098ee46dfd5f660d2acc3d79c8f3118926074a75dc097909e",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x323a9f543d62a2e0dc8a3ddff5e297fab2d53273b0ecd77f9b930d912ba0e2db",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x107873007d03b6f188ae1009f6ba5ffffd43722cdd53655ea208fed905fc2c0b",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x77e3741da5aa2e92d3539bbcfd5095a9ae520172798a123be215d7ec8e166d94",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x974bac6179c3f6f380b84f76e228975446c28566ec491d05539d0147263fd762",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 59,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xfe6f36c8190bf287f3b7463fcec60944ed5c409f764568724f9b2c964537a586",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 195,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc6c0e06cb1b20da3a767a92e0b52ee8ef70ae84793e91ed35249bce136c18290",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 195,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xcf8954d25c7ce0617d2bf852973876f3a10fa99ea6eb068b7d78983602023853",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x49c349cc767072fb29d9b42fe5c8cf2e9f3858fa538c69a28a002a1681fc7d80",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xca9c9a959cf3690901ef68e1007f33db0eedbf05fe092858d9e08ec2c7016570",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa51b7f087616a594bc4423cd98477779305af9fa4a64d18ecbbbf608c16ecc18",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1435a3d4e6c05aa9193dc75f21c8d34338256bc432d001dc2a99ff7775a7f1e3",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdb7396fc71a631813f812ac7d789b8cc6a8c49c6a62432c0654d1951b4ca1cc9",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x27dfb3b9384e58278c5efb9111f2bea049cb986b846e0708bdafc9deb98a3a8f",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9f6022a11f536689cdb3fc21bfa50e51ad2e95b2f0c5ea4e80f881990a8949f",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x59ae7895f9b66a5c214aaaae142d8094323422f2c98b4ddf3cc3752aa0d6e6de",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x03d7f2534feec1f185be5482700255d92c72203e64808d6d56e7ff6e7bfcd500",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbeb11273cb6979778fd916034d485b1603d5701f068a3d1cdcf1a9f0205731f8",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x29caaa2142524f07da0bbe94abc7be7507e2fed547360b524e6cffd1749532b8",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x66003db658ce51a39bbcf0477d9b1a57fbbb147dc8ab21c21074289b7dd258fc",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd2e3ae5b721e84573d84468f6acf7e658c70e4b74411a7eaeee34a588db9c74e",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 59,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1c07766fc8c30f59f56bfdab86ef7cee6a1134f0355b0a546f81572638e6fb9d",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 197,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xaf1abd4b7a3e2d7646f4549411e1918c422d702f78e33a15bb64066d48611336",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 197,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5e0515182f175dd1c39188b1f3ad6a98b29f191a4d4837be2e5da9a8702c1f87",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf5889258996917d4335a8b6d7826ed377412646bcbdb5c0cabf8e36f063fe040",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 63,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdf0c642447bd29f5d1a1cd52eb60dfa13d0d22b3ebfd1a27cd411501b0431e1c",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 198,
      "y": 65,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf5dc4556048ad741edee046ac781793ff505555c791a3b7c947e4a0554c56990",
      "assetIds": [
        "195309932868745570579261590503682561118212229405359562",
        "194935788449588859432201447186507192665180310674357706",
        "213640086404149754979372205675610182750736935359364554",
        "194186038109638106235162956867323739476096817279811018",
        "194560182528794817382223100184499107929128736010812874",
        "24712989335703115044721698553951079139450787704159354314",
        "24713363480122271755868758697268254507903819622890356170",
        "24713737624541428467015818840585429876356851541621358026"
      ]
    },
    {
      "x": 198,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6567ac8f905bcd6568e7b89074e20372dc82ca56e881ac61fcd5f1fe912f8583",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x03baad5c5f85143760cdaebf1e61a7a60868ffe426a4ece52e6c570cabf983ed",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc42d2ff7d0e6aa93e7b551242ffcff742f72d827f2fbef1f124db2ca90aa4f2d",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xef5d0efc17fb377c434d548b6d9e9b76a5c17909b4fa53927c732cabce36ed8b",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd93e20be62e3ff5370086d902b3db5cdd0c3008dfc814e9d8ab88e1911e5fa5d",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf98fac51225e122fb181338c9d7d31c907b7f3fc71592f38421e15065a90822b",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd0fda741e0f85f02454218554482cfa1866259aa4f64cd04556fb1480f086934",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x15a6add5a385d53d18b84e5a73fa34c35e315bae6147ab2c1724845784f59bfa",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1415033f1c9b13a98a84858333bd28e34ac54140d807473695b26732fef771f1",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0aabb36f5cb2370cf7a17174ff46ec7724b90695f7a8173af15b5ee604e40795",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe42db480c24e01f2c78fa9bb563a949c3fbaae14e30a7fc3eeb54aea345ea514",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe2d5a9278ec7b223a2de02a08f49fb1e03652494afb20f3c70facd7366bd4c6a",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x87a12d413b1b1990e2ddd2319523c63a91e2d006174cb4b25c0e9c2dec7ceead",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1d6abd15fcf15f714530f540707308f5219021edb2bf4f4271550e5d3669d922",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x41be18ca06b0e76f530b87642bda5782cfad8fb81a34f192a652e82446a313fd",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x726c1196434f1d073637d896c122347ca512a55ac6570820d4a05b3b91f2f155",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x54ad2432d688e4496227104fe0e9e474d79bbbbd645da516e7255a180305b8a7",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1459d2286039f7a399450be3d71d76ed32e37b2ede714a092442d8ad98b25910",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5c5c02d71ffa6646bb4615cee364717da6d36a235fe4d9b123317b31b1d6ba6d",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5a54fbf4a98c7793404f316677ef06d53041851dc245747b61ccac1dae6c5dda",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3fe13b37eb848d6b4a04a7bdff1109041f20d0e314fcde54e0ec45c5cd1017b7",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x846510ece8ed45b137fa7127d4463b1df47d03601f87e9b037352d5cc4e98eed",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1ca1ab06db22d660b7b5595b55acf3540c491db9f5002e4e76d9bd9544b53f3",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4284cb145ef78284de8cdf20934857713eb964e7dd510dbc91f62ea248f6902b",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb43ace7c8ea5a84f437604ec55e6aa7ae0a6ae756df1ecc6e32454301cb1b086",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb7e8d5e25a10976a7133d917dfba18d07e309028aaca74473037879ecac0f19a",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1c228581f2a4f818d438e79ecceceaece79c6316945ade73c6fb66be0bf3a9e",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5feadc815b83f75c6f27819002374d67280b09c2fa4e25fc8fa59290b79dfb57",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x19d1973e3e468a5e30bcac1fdaeac294c7b5e23664623ec80af7f80f44aa0bb4",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb8a615aa45b252ee16c74c7da56cd022fc9fb535b435296a2f05997523a6b4cb",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x96c02f37d8e0f8455cba3d0205efeab1bae0044435def5971fca54183eaa8f8b",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 66,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2455612c7a48225aafd5cac5ab1bcb3f471b2c0ae64ab93914555a6f7841c6f9",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c99ae9e408d9346b5adbd25c1e20e59c7015a79e49ceee2006840de876b8e59",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x95a1c8f841cc7d563c019d8f46410ee43fba80e75385cc2a6b4d3fbefe5fe56e",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x63fe50208388aeebb7fa130937616349ee4356eed0b864093524446d39cf7ab5",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0e95c1460650c281cab7ba4a2e99f3056eca5981dfa66003e311652fa73d3392",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x533a2c09d82796491ac1381a59e1dd0af7f30c0316daadeeb448b30c0e9fa15b",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x23bdec6ead4b4df9e1c0784175d2d36a033b5f46cb3d569b5cd147c1223c2d14",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x433d8d1f0b4733d3958ec3a9a817c487378ce4e751cfd9ca282335baa424b3f9",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x815b068db259f73e400e85d916a21d22ae9dbdbee5a723749937b8ef1b5e04ad",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x90e5776492f7e4606a751b10255be634d60911624f45f29639928f5bf4896d41",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7474ad2f37baa20016a334f01c2ecb063a2cb81f2cdf651ad21c3624824893f6",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 66,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2dd3e1615823fdd09b2113b912c70fccf043d415286f20c6909246165ef8290c",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2291dfb51e7c1a7e9e06d0925456cac6234ee260ee89b7e3343ee8f03184fb5c",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5592d9e8aaff6463fc41909e18c75dd8104a9e1e9e950b324e19804ede9fd2b2",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x12c65ac8c0b998c78f426ac9d0044ae839093610a309247b932ece46045d1da5",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9c89a407cd473c77c153d852a9d38f6337f76833f9d055f092c03804833200e5",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc3f9a4fcb3268b8f620f2acd78f91d4a647c410e4afdd471ffa9195b38ed2385",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa4a11c2cba26d0ac225a04692e8aa4588180a7b98910b98267fee3cf9d42d56c",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8b1197c145bc0aeed472c3e864def938ce06a99c6d6f8cf6eef3ba8e6d713888",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x90e9e931d5c626be5b7ba8939b0059fed96d9c184d6a498adecf5a7ac79d6ead",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbceeb60aa69f94c72f8c62ada3370cdb1907a941df38095d826c0435eed4a82c",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 66,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe8bfc5bb0a2dd70c8a7a3cb28c03c15e67593a10283f317948e72840df4516b7",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa63e37854beef34ac21e1616023fe0341daa9d1b60bac466810308655a6d21d8",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2090bcafcc6d53824363a37676c49dac8563a4fc0f058d43d6f885d383eb2cbb",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1810c75472e94576f69120eba24aefda2b2cb9f628bfff819f430f1d1bb0651",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x29221b0df1b02cd522b810446206e778d5f1d4c629a4cdf70a129f5dac15562a",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x57ac11ea445e3d58d181e9a9809a0f8979a0af55f82a7a25bd7b15e2e2db7fe0",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde97369bdba8b9a3d19aee967fe769fed89369486bdc655b789a10f911977545",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2d81df889165d4fe18b5d00a067fbc37a9fc068b237b00b932c514dc07d3c7ba",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc6f579aa4b678427e4e97eef28b261f16a7369e3e99957550e03a5dacdea12c7",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcdae511a6c496016794f495a63695bc92783f36b431d793ffa3d13d141449940",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb46888161d3c2001653346ba386cc9b38c390b2aa081679b9a0106178929c1b3",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa353063c2343e7f59fc4e647beeb950e3238e31aaa741f6a0f08e4d9ddce896f",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe377a7308939317f6292ca06c05cc00ad695a9ea1fc5cab2888b01f8753ca602",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc10a794dc7aa693b523ca698dd321f051b13f6956456ba89abac31b67c32525e",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1a82ebdf6efc03e48e397a391cf9d49c405e1f55e521174176a312c23330308",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x67abef15c38a90c152674f373cc7931d74cff94afb12d2dcaab4555f64935775",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4cf8d2aae7f81827ec3c8cb1f5567443d4cdef756b74264efb2e3363f37cef96",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdae8cc33d8cee7f36145e7853f0eaa12eac346a4a61d7f29fbcb34a2be3082eb",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa9a5199ca32aaf4ea927f0f51a78e6e5a5d64bc420ac8d1365bd9386443a1b21",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc12b898b71cfb0cf44157066f1ef34c142f75a61c69615ad6c055fead7ae679f",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5e686dbbb9c6a904459147c0462e62497735f05f524dbb90aa17eed1a044700f",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9f57e69c7caf09f0fc4a78f4e6c1be1b103d442a66d32bd4d29e37d49efedd25",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x78860262e3fb028a6235eb8a96404d697428aaa181190c1fe28348f5c2d8b4c4",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x187917b0551c7ecfbdcde0a86c62c98ac6a59dc1cebf30cd40254d33b6b453ed",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4699a81cbcda613924258171a1b201f5793c8da720869589a7f3be10a522dfd5",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf5b7e6766b2d6a8abf8123d8e747fcccbc73bf24063a93a6fb23c30db8e0be16",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x23569a80ef3800bd328e740477b9e44954c9d44382a3231155b7ec7cff73cb95",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa3516e28bd93af83b272e943c3d05586c60a5a3c0ea07bd4cd3ee16ce6f0bfe9",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc0bd5f2847d2d344a5fa9924a01f1025bac20fd44eaf29d0fceb6fa488993954",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8b5c293fb4ac410d02578c13bade653e575d4f3b924267448c05cd8face7420a",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x789c10156279d5f44d930c0cc3caa23c196db0b7759d900965dbb5a5ea6cda7e",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1279d5e0da351da2f969691a95b8ff4ae86fd7aa33b1fee39a379ddd5b73d34",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1b2097aedffcfb1c487bd3ee570e1234e8a91be442103f489c52c5a0860ea86",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe56b757436d060aa633859d4862717090e1e42c5d7433cfdc2b23ac1ad32d8ae",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf78b95f099f318a614103143cc245ad4386246216e997c25cce5fe3673108f25",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x40d21fdcdbb68e088e648da910911549fcd934b492eebc23a600acb7800daac8",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeaa7f92948134289ddcef920904c121d6d8e1210e426bc3f4c1d27df9d83fcb5",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab095253086b1869c3c0f4557fa6a9a170f9e97b839d54b93880432f4969ded1",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x06f3d0f8afc5c1836f884c1e23a9eebba55e523304b4b889373eb5437b165ecd",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdbe136710175ec4c6e21b46f589a47ed338ea68dd394cc81fe1846a69e38924a",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaaa6bdb2fe2480ad810cd762687fc5b28b54803adfa3d885c4b9377df1ed2731",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x30ddcfc4a518bad26ed7d594cc3c86ede65debac054fad3344f5d75f0ab860a7",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3f2c94196d1d9dea703de29a2757e4bf1dec0a9f3d3a12ee4bd1ef5130c8abb4",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8f398576d6c83a5c0bd6dcfdba3dd4c489f841315f5316ef6e0b96dde14f36fb",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2e9cdeca54e5bbbec724136d38469bb932b0cf98488ed8c8a2143ffa21c27894",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xba3432871ec6caaf93492334e2fb49743f7f49f8e3feed0b8c0af9b1125e1007",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1ea4fc8f7c8d656a3e04722d931d44218e5aa9379de5e2ef2b16362fc449a9ef",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7eeb58f658b49fa1e1ada9191a9a8ed9026c6c7fc5933c454db631130b0d9680",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5ee64c81f01c0e212355a21d8a555b5947a834e788a8ba108b7dc8374fc9cf0f",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6b69c56c6ccc7f25d3df487d672bcd49ee7ad12d09494f4453a2cd182ee90e01",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x59b21ccae2b764cf9179ede3bcffdbb21377d862100f9fd5a425fadcf7487eaa",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x367db752f9bbe288646f327202af0be88590e588b4e9e6115df6d083482e5d86",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8e23148243f148e38e2ce1771b520df4e48d2dc21f688de8cb611b5d5a9d7b72",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 54,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7853bcd1ba540bade3ee28815af6177229b873d059d9f0253e261459f2131d36",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 60,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x809e056aae4adc1bb9aab72ee9eb9dc37afa8f708de29fe9d9a1ead00d144f52",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 66,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xeb58eb71d5bea10e2aea12cc282e928416bb5bdc719764c17d74576f2949a279",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 60,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xebb280106f5fabdfcfa8e61ec09c31ada358810fc03a17ab80c9edbfb5457c7a",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 72,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa567c4ec48c728e1346b8c2db0e3e030de2b1dadcfe5c2957672d5b7e6aa15f9",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 60,
      "size": 6,
      "price": "32772000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x66f68ad78c4968c7205e5cc26fcbe658bf69ad7607e61889c0b79a74036fc27b",
      "assetIds": []
    }
  ],
  "solcInputHash": "b42a863a795806b4ea3a8f05dfa42539",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}