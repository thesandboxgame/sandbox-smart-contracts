{
  "address": "0xb18d9868759a8Ad661D0C567eEDA16dbe31Dd5C9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3f2eb5a19b642dcda422e87c1de71075eb1e17672369bc69f5689d2eab84d184",
  "receipt": {
    "to": null,
    "from": "0xCba49d154b4Bb9a9aD7F5Dad396CB9a0a3a62ABc",
    "contractAddress": "0xb18d9868759a8Ad661D0C567eEDA16dbe31Dd5C9",
    "transactionIndex": 25,
    "gasUsed": "2668417",
    "logsBloom": "0x
    "blockHash": "0x427b6c78d51872fbe77e0e3d5b2c6e9d99845eb66b881b9c3304771b884980be",
    "transactionHash": "0x3f2eb5a19b642dcda422e87c1de71075eb1e17672369bc69f5689d2eab84d184",
    "logs": [
      {
        "transactionIndex": 25,
        "blockNumber": 62304275,
        "transactionHash": "0x3f2eb5a19b642dcda422e87c1de71075eb1e17672369bc69f5689d2eab84d184",
        "address": "0xb18d9868759a8Ad661D0C567eEDA16dbe31Dd5C9",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000bbba073c31bf03b8acf7c28ef0738decf36956830000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 176,
        "blockHash": "0x427b6c78d51872fbe77e0e3d5b2c6e9d99845eb66b881b9c3304771b884980be"
      },
      {
        "transactionIndex": 25,
        "blockNumber": 62304275,
        "transactionHash": "0x3f2eb5a19b642dcda422e87c1de71075eb1e17672369bc69f5689d2eab84d184",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000cba49d154b4bb9a9ad7f5dad396cb9a0a3a62abc",
          "0x0000000000000000000000001d25c827abd466387bda00b429fe728627d6eee6"
        ],
        "data": "0x000000000000000000000000000000000000000000000000015548ccdde87eb200000000000000000000000000000000000000000000000059c871a45fbd72a200000000000000000000000000000000000000000000097b8eb3771720eb3f6d000000000000000000000000000000000000000000000000587328d781d4f3f000000000000000000000000000000000000000000000097b9008bfe3fed3be1f",
        "logIndex": 177,
        "blockHash": "0x427b6c78d51872fbe77e0e3d5b2c6e9d99845eb66b881b9c3304771b884980be"
      }
    ],
    "blockNumber": 62304275,
    "cumulativeGasUsed": "8854931",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9d305a42A3975Ee4c1C57555BeD5919889DCE63F",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xfD30a48Bc6c56E24B0ebF1B0117d750e2CFf7531",
    "0x1b47567CBE36e63293A7A2018F79687f942aB24C",
    "0x54e42e64913a81d2c8e7ddf1f447303937484ad7fa3dd11ecedf0463bde8bc6d",
    1728907200,
    "0x3044719d139F866a44c988823513eCB93060bF1b",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xDbc52cd5b8EdA1A7BCBABb838ca927d23E3673e5",
    "0x42a4a3795446A4c070565da201c6303fC78a2569",
    "0x7804fb2AF15bB1323795A888B09913cEf629Ffda"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 180,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe01706b9a9b8e8b866a47a63a2fd267857e713738cce2376da65db44676e4f00",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x63d84b9cbbf923d1b18c9df51748890503688b98c2e46802a3c8088fe9e0d9f4",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb9e1cb0d753c62885d504924cf9c155b32e9c556b4928b492a01fe3c970bd3d1",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4dffcff1473cbfe1c97702f4c65e44dc38366ee6efcf964e93b27b46d18c1f1d",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9c1cfa75ad88102beb6dca5f74d747c5fa4128c79634792ffce1c8e2629754f0",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x47fb2e20eddc282f0b660604e5e4d15b04ab8c29fb4835a0e813e6f5d1b0d382",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x37af4c0bbd44981e59e308db9d068c4a1deda86e51c2aab8de97bd43a4ae0d74",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe500baf008182071bf2e588dc6244a9200cf5803777fc108e866ba61c0f77d7",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x62bc59365e8c6b4bafd003547241ae917790d65c15f2e272e47f12d5ece207b4",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7cc38fec68c654e7119051e4f117509a09200a812e748b6c44b5557cb4fed873",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf88f274a85923c39a9c0c7e8bf532edbc6235794dd127d6e8f917e6677ae499e",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbaacfa6a0280769f1c5cf43680c3798c05bc9a89198cd47da2e4c912b8374414",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb847bd7860f693104b5d8b79a4c0688260f7e91e6fb18e0b815bfe6864c6c2f1",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x13748dbed44cfb191c73a497a2c685b326c493a55ea1f5dbfeea00db949e92f6",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe7952c897e0983720bdea3f5a4231e435b0094387ddc91a8b0d06141260948a7",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x829c4b597c26cb939b4ec841088bb2ba0def7e252ca410f1db818dd19c0da6cb",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd762045180df0713dffd7fd080a61a27c25de2a40576df2ce22e1412ff3a9f5d",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7bf3c702bf15b843e4f9c473bcce2217683019f4fbb030a91fc7c8ed928095df",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb4afc557dc0fa70d4d8d1397613cfad40c5909ac846060eb1fb8aa44782607a9",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x33ab5bcf06406296fe7581c9aa0dcb3afe4745915d6c74f88ddc493a0b193983",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe906c71db1f706ff7a5770b41e3b015fb0ce72514abde09a240588741758019",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1ef8175a0957a9d7db541327b2d1d0f459651674f0d2d02359ee8d0b3609b628",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6af671d0696b02acd582f254d2e1d9e32eca411366f049e2aa8e1d0f143e0804",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x657b0779340f98322a340f6a665a11e394b561f90baf0f4acc8e8bfed14e0cf1",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x886b93812967823db1c489e8f2e1d3536136691bc5c10e782f771a8d2b6b3c19",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc8d049f7e242ec642277faf2a2f2b9f93612f582ddf04bc9f099407b904678e3",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0ce0e821d883c1cdb878003750bc372b52327f3742c2e4c6c5a6c70e50eee7d2",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1a1914fb89e0dd05a3c5df98d136d6fce5e03ce0ca0b82e6a87a0e3370a7b4d3",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6589ee729885a53f636b7e0341accf188bc7e754229a69f3a445507ca5c8ffac",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb5eea821c2fbe5d67b94d05df0c71c4423c025cec336bc0e016d3cf051c44aec",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb42f8f31c4bd696114b04859594f253c460debc4790d994e0450df61a53eef58",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2ba7df217468da8eeda0c077217411ecfdbb168f82edc7cef42de48c8436a597",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x47d2b9db826a412cb5d7d82c8ce73d0954337ba4c84520da6b47b7cfef39a6b4",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x59fd1c4a0fee33367fa04621c7dc6e056ebdf54fe4a9bd58eb62900ed9b9a1a4",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcf10a9096919ef948f047e5ee4ec8815552e24c7693967ea2ee8113358f03d27",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x63b60be821bb80670e0adcd8275a1b5064fa121bc9c43b651876fb6cf4fdc56b",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x78b41937dd60a051f3e8d02a72e39ad73f7a06d5a60849fe171408fedbb70fbb",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc505a6269c459053d24d8f299f51cd457f2b8b0f330806114c12bb756120c49e",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1a7e8c2362bb37e490f491817ac95ad0d7cee65b5a4697b70cfefa30e6eabead",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x170f411c8551a785fd30d1db8b1f276394f03560ae498d23a502d3cdec3e5003",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd434eca6e14dcf329bb0787b529ac9291f88c595b51430ff2a61048220398ab2",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x166904139a2d620254b131522c81683685bae2e50e1b114b6b52d14a68cb28e1",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7d1bd45fa96d8ac6a2befd7020f5d6bfd3de3f7055e2dd00d0170d19b6ae8bce",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf015ec5114b82f7252c8e805c299f451983e39b6fbbae4b53531c6568f803a1c",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x401ce0d1a47c35b2b673e084ee86b04bef4f46ce2e78431f5818d007b1927dc5",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd9b62a07015e89ab44f8edcf3368c319fa424664709ced4a0dfcbe41bca896ef",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xbce024b5028ca4f13f3d3581767539eed71aaf1507b29132461004734ed2d4a8",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x30a0de0c3ea2554d19357c110f123cd8923e25c98d93c0dc75a907eb36003181",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x140b054eb19fb26490c8881a88490fd56747d876f35876a54823a35b4cfb8c27",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdbc6cbeef1c5d99f38aabe405c1e5cb3558c28d96797e183e9dd1b63471fd3c5",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fa7f97825f6ffab1fc7b322a495756b613418b478d5ef5b5068182f06e93b72",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5f717f5b0fa2bd3b8f9594847804aebe3b9de5abd32a4ddf91e2e64c8e1a8911",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa8f49c6e37a838ed81c035b8e1499f262062003c38e54241255ab6251c330034",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdaf0e67275f0308a1257329807ecd5d2d693c22792ed7242f21a95c0b4aeb6b8",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1da7d564961893d9306f3baf1ab6d43b3e770ce8b7a3568cdfe53d5e939963f5",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x149bb9cd5cc586114fb347dd04f759729fd690155e44d005f05a435c97c32e84",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2a890a389038f9d58a693a803acfcfd9fbe3d609134b1210a67dd8e8c0e37099",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5be4bc7dd9c36ecee5e261e8aa476b6a27f426b74665d3f806c843bb8313b797",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61933af62c30f6789da72890fe6fdfb8d3fa38b677209119d5f3fc791283598c",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe3f09ddce4c04d9606f78908c118cc065f95603769ff7e0bc5fb446bccdf4b6",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbaa1fd3e9c5beebd5a44fa1bd9c06b96ef461e33037b22f3d78b1a10ccc8ba4e",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x004af730de15834d2bc8f56d7545494ecfff7818f950345fa38667c3ca2ef591",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d741bb88d3b05d908f0cecd5917994f8c603bc7af07312afaf537d2ebc07d67",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x76f2136d0b688488502fcf791291af50101f46880141ff1d9567f4ca14975fee",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaaefeb37cc566484d736a394aae8434769a32386c0a7e590bf79f0cdc1906813",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa2dc66151aa9be9c8ba8cce76e1bdcb174d7fdfee9eeac018731c4a034d7520b",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbfa7e4292e8079bc7c872db98cfc825c0a90cad29835b2c3e84cb3fa84781e38",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5cc008ec8a4b9248fa4f72b1bdd78890d0115341a29faaa6627a1bfa309f0df6",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3db995aaac3992d6807d4b50c0a0c84d69475844bcc12523143755b3a11a5450",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x43cb464f1d955417d252dc186c8dd14ef703f7d8eb0a65b3f6b0927da6990a66",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x550c31b370e407a86d188c7fe79c31ee41a41e62a8f591da6e83b8226f009aaa",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x786f443b78e69d772856910b07e225c5bc1743e74f7595eb4f7a97e01e268917",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe26f012dc61044ec50c3b4a95b08072b2d3c4873968f677c9da8d76b4f2b54c7",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x602f40d35248c1e7c214daf45624a32d716a4d0bba4fc3568da6b9d75f1dbeb2",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x58b32d3c9f0232828b41231026432e65d32a76f4e24bb2d85edf928d208ef05f",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7a74ad7e86c72bb44996c4c78deed20fbc6da2d361f4458446671e31280bb0a2",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0c73bd3adea1528ab98ed65a1f79b0b9fe09f0b1c9daac7f4379d80b9afef8d3",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8a4a2ebbc0f2f8a27371ac3c523fdf1c1da2fa537aacdccc1f6029367d18d6a6",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x73717606cbd08116698562a996844409f67331f8792be84674e2a8eeec81a4d6",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9737f5484dea8f9f9354af06f1849af9fbdf020a795b1331d956c6f29b9c2e55",
      "assetIds": []
    },
    {
      "x": 191,
      "y": 60,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc6b30cae8a8b84ac75c987781e3a586dda20fe7390ad3fbc886e4e2b37cca718",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 191,
      "y": 61,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1d7546e66f9e2b67034412ce8f5ed9a1fddde8dbfecad137259c5a61e0a2fb86",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 191,
      "y": 62,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa6a509a66609bc8e29c918a07ca22df0acae27d09663c1e9e7c4849b7bac917f",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 191,
      "y": 63,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7cea9dcbd4af2cfd4bf44616b03b13b1c3d821f96072ca6ef749364f22dc8141",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 191,
      "y": 65,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9f0294a47f936fcc3f93759d614be394ffa60444853c46c8bdfab9e4274719ed",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 192,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x113763f18ed418e0547c40b81fd1cd055f193470a61599353ecc1a6670072676",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbeccdf4819da4e3e4a7765799d7921bf7dcbebb9babd1578edb8eb3a476980f9",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb2155b2aa69cc1b39dc0f1a1700544f3c59ed5eab8f9aee719d45b2937d4d214",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x060a560a31fe519f572ea380272ac195b68ce244a9c923994f680b211a15eccf",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8e95813d9c5216c08431e77edc6bbdafb5b6a37d5fb6d8b5e0330db94b0c639c",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe0cf3281b62efe0ab1fd25d3d63e0541bdc4d36961e3569d1d4437e4ee667439",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 192,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7be2e67d9bed8aca79e235b5dd7c67c06ab993fe523562f7257dc78b7e538cd5",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaffded1430f3c5b4414464bbb89a4c6f205816013db2bca7b59fd143ebddb904",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe89092afb7368ad0d070d46ec8c5e102d30d03f69c7047615470fe995833ad20",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x63dd4c8c0bf16b9695d3a61aa3adfd735fad683946f05868815779e385d53f92",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x674e403c4d9c9ec9d7f76eb074a9cf0048546dbfd2f952a3d9b710bfbfc87f27",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x866d4fd929e1899d12ef2ce486529b33f740f278988994806f16a0a6e95de1ae",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe74b696ca574cad6a779298c55bcc1eee0ea8c21e75351d29d86958457cbdf84",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 59,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x80f3d6ddea8bec86e4f392bd3447e0d53ff35753f39499c6463a8dca5ff10a7a",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 193,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3bd75485bf5ce752117d9d89ee7371eed7cbd0b9c1e1164ced3f351ed1fb270e",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdac100f79b24e5083b29fac99400e786168ec29302b4f8cdf6db085c7b724858",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1bd0e1899404675dc302a0e24395df6eab4e3115373b7f814ac405b71d968b8",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9a4d6a0e9b463a7d33bad81b30fe7f559c7a30d533c0ed8aa6bec80d56d36a7b",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x08e6cacba69bbf931a4f22f03b3183554a69077ad2761ba8f636b4cd46eef93e",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa96a8f6e994d9417df204db78542c4150b5d738a745d1798785b94a9e2ba32e6",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xefe63e7d2a38c583e060761ec4eb402194250f172dd9b74d6827e33457729110",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 194,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3999f586820c467fd7dab8e58a0b1e85d5749d74c9c4113698148e28206cbcec",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c7fc23141bd75ddd6504b739396f39cda1e0905fa55fbff0f05728cdd6087f4",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeca55dad8ba8a5a862803004770c32bec83b7be67e7471f5fd1061fc16bd08a8",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1a8312b9a1e458cf08a72231a3cb7413d9e3b6eb3f0d4629caced3dce09a794",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x007fd58b3f36bca1a0a06595c9daf05b63cebba8e4ae06ed9088e7ac90035820",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x24f8d92f945c3f19e6b8eb09757b8342342c8be45623587a382a8d7cb50aa355",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6542600ca9c3b9bbdada27db0a7f3a45c4c515b3d51d6b9d30189f6484ccadcd",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 59,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb8d05f9ad992b5398ff2be2912e04ce441ead3bc5f964e170ebd5aeee1dafa1d",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 195,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xceeb00a558dbb3a9460b54b277e7139a665f813950351f1b4a94a52500789177",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 195,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd1699cfa3519ead06196c3a87c7b7a89a69488fa141a1c758ed5261ba2b4d496",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa564f05178f1a76b9ec311f86e1c878f95a5b4ff5125b6075949b4599d445e0",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc8d74d73e2ab56ee099eb4f91e8ad726d4f31a0947ee089a9255dc314a96c87f",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa5010b596891e85c4c605b88850c792e0d14af2283561fb7a855a431fed8268b",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6cd690b9d10577e25ebe884094c6863ee55d7760a1d7ceec38633b90274b46c9",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbbc718b594f29fcbe8f042d17cbcabc77f0a9fdd718a4c3f8a8a20914d185dde",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x43053b30a8622ebc4f0145440b564ca4a058729f4e5117e8dffba59d708dfcd4",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7c29b381a8362741b57f676deeb4e683200e2607586daa444bec70219b29cc45",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x334960ba92598a049052afdebd5f498faea6b272f6196bebafa8ad9cf1d61c3f",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb41079e1b05ecf22294c23d991ffd9565db54e2956e3c1cd6ce7ddfccf0901d0",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xee860cc9f5af177382743ac4fb42afb3467d6342027dd6e6c0a55efeafd4bfec",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5fd9d6f5379cb5ea50b3fd302f3b30a01d0ed230690fa28c796f272219abc138",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x76fb590e772ca0a54bc7e40ada8ad9fc88c6ce8034c846ddbe421bf36c019b3a",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfd152cb7b56b2fb2545d481930cb93d3a2781249305c68e9ba8d19ee2084aed4",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 59,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0408822ec4a36d4cb665fa5499377c45d7b052ecb64452ad6264f0dde9c29c95",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 197,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x03f63e01f4127de539290c090353520918c75c5a55455a292f474ad864033324",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 197,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2bfa65f712afce12d23f7446dc09069362fbdfd8550ca1ef8df3085b41c2ed48",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7a9e20d8476e3acd7ca84eaeccc457832b219f9a49493b1b01a0b69a803dc874",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 63,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x404503c48875062368f8b85a5e720b4efe30f9518d8a00bb81116057ade8a760",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 198,
      "y": 65,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x306691633401b31a34780d07839ba2f25caf8b26a26ce99b1a9e55f39163aa2f",
      "assetIds": [
        "212894720569110994491088326410924878410712409762446794",
        "213268864988267705638148469728100246863744328493448650",
        "213640086404149754979372205675610182750736935359364554",
        "214015692324943797029350552677618267486788510022909386",
        "214389836744100508176410695994793635939820428753911242",
        "24734689712014204291251186866347250509726638990557461962",
        "24735063856433361002398247009664425878179670909288463818",
        "24735438000852517713545307152981601246632702828019465674"
      ]
    },
    {
      "x": 198,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6af51716fd70eaa02b221d122d48dacfad9df836be18fd5501330dc48307c1e5",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7d9fd64e5d98168a97eb5fb59c5b9f755bb6db551fa9c3fe305762683e77c92c",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf5e754a8ca50c3a867df2d4c90a343760053ca8ca453a6f46926af218c9d20e",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6de33df89ba67ebe55f6543a8c5b64b7b721407559cd79220333b568722e5d4b",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x651665474f730e736b99f8479e81e51b81813c8b18dae0abfd7a4e6f1385726d",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7ce45b34cf4b55e14a00dc97c27755a2284a373a0f43030f74fd5d441abba8b8",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab6320936961477f1524837cfc641168d1494391b45410d8017a854abaadfbdd",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9a8172beca84b7423b9599c27a5438b550ba82cae1fa52101abb2d028552c758",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1d6742cad322f2e95f1d3a0f4dbd175a5b4cd91d763389090dde44d13ad825c",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x43e4f0de02e496558dd60fb73291a2e7dce7b5d3bd1f8fdce522f613f4f26796",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa9ba98ff3840bbe5930311de4859670f1fd92610bf9b99a8148eb313c9a53fc7",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x40a3f0dfd12212d80a2bdf90b2c76f3cb96752d4becfcd633752db533af44889",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa6745369ee98d643aaad92fc07a9911c38dc3cd712d50bd79f4dee5817e5948f",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5837dd9f9c6465f9d235366f50e7fc5e4643154bff4bc3cb65786cd9b2f58b91",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeebe9c55d0388d9aa5e6a31714d352261afe4f8bffd3b19a5a361cf4dbedcdea",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8b50f116760778a5d85e7fd69cc0ad3d0ee488e06126359da578addf798762df",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc3c74301d9aa6eab536d842e231a942a57de11cf40c7fc84a90ba0db01af5b39",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x820fad82acbda3df940db0c3b7a1d10b5928ccbe612a237c091efac17d92562c",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x47dabb8ddb6386ff50f0c2bdf0d68437086d0ccb9cc525e50ca67e040238c844",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf8930cea78f18a9ed6efebe6f31f7e4c9f2f299ee003600558e1734973adc44e",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbf8bbcf13c1452fe11d194c2a25a037a577f0cccdc87e06d8928f21b8cc3886c",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x119707b2eed7616f8d0661d4a81a6edcd630c16e272bb355e70e5ad6eee0cf23",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x499807c91d40d6c73772f2b2f89865a43e4b01a5a973a67f2dd359fbb0292834",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcc5aa1b4c1f1f16e0e9eb8cc76691050192e1e02efa44f68039cd0255c8b1991",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf2f936003ec6c08aa6dc79477d82ea343dad9cfe052f81806574046cc4f8a323",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe52bdc20c939da5a70aa056808e7f9fbe09ca85a169e797714a52fbaf70669f",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc01707e5fbc0f306323d268dd5441154dfcfbd9abbe3e8d22dea41048175a727",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0f8d13e61a153fae337ebf3e36d6c5127c22e7d8c05a741ec4f7d3b2de51d9b6",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf6020bf728621c62e9801e114261873335c61c26a53fa036a40cd9a312c64a3f",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d030411359686cbe6b6610e28efcc2ccb2a709382229bc402731f21fa190056",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd1e6cf183852b93d34cac86ff74ecdb1bb434eddf507e126fc07138b18ddc90b",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 66,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0cd861b9c6e9d4a39e939c640f70c198d4b69c7675d38c28fcf6f4a83af20732",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x92c1f105f75dbeafebe4195560ba7d7decf581cb5f3081ae88c8ea093014baf9",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb323d2566a24d522f86dbb8057e4b47fefcfc470d20dce95222dd74fcaeb8d5f",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc987c80def6a6d469d7b14a0d9f9dd2a0c1189b2053fd79e8b01b5deedc386fa",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x144bc0c60906902efc6510bb7993c7e5cf40c0e81c33ef3fc08a0294c1fdb80f",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7033b27289482802a8df93c1ff407500a9f670b268197aace71e5cc67f6be6b5",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9e6af46449e3cb33e1f4f606d78101d64198f39ed50e3b855492a24fe1766d7",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4aafac84e9189952cb269f87b04caab759a54d1e8c01bcaacb294262284baed1",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x590f3287cc5b833b3126e13a3f3ca8fff5a4d5feddc20479a0580a105df60dae",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2ce254b952ace83551441fa2c23b91c491566870371413e00bfffc98ae5fde97",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf82e8c921d935b5e4bc47daba95854a5a644cdae668ac6db8c2c1e819f05126b",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 66,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa7fcda9742887855b5ce624d2ed4fc09af7cd2e0047c38b56bec6195f5ce1456",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x25aefe24222603885f3e45e3b0e8fdffc6496c98b23554a2e96c2dc613aef52c",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xabf4509b4b3acf553011f69809011693ebf52be219f8507e2557a594f080ef2f",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7fa4f8fbfe1cb5e41bf5ef3bd52733fcc5d4da8d6487a6eb2eb118b79c025d06",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe75cdd14ce3d5f4713d10686bb20a18aa9236bec6657dcad759cbf1c4b3fdafd",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x22ba3109e658b6fd4084ded6036cd6827eb81eecd3eb86434e241c03fe8feea0",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1a6bf851967b2e34d0f2562e02d6d6d77e9d8f64ab4464853eab4d1eba2e698",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52ade1b5f63f4249a1a13dd47eead58c3f82b8df37f575901ed9390045318e7f",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x624af8e0a64f2ce71582d8434cf09547ea692a0e943a445065c86e2282907015",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2b01d703a17eb21e275be27516fc8d315c3a0e89e15d6c3397e6ae6e2f63dd37",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 66,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8c4335174743d6bf92684d5477a133e28940c068a864c378f421c35495935ad3",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5b0f7f3c0342361ce45a7888c7e3b8a1e1ab1c0f46b9d2622d8e2a3681a5509",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x462954ddb26cfff3e2a894a3f3d247a59215d6540f147635327efbf1b3f65e8f",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x95cdaa5bee30e1af7e480bef69065c546d8dee86fd280808ea9bb94876e6cbbe",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5fd5cb5f53ce4fb9bcef9937497c333bb99b1923ae02619e0fc2540ac7ea5072",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf55d7c97a2c35259583224f3e04e5ea72d41279cd9af3b7526159758ef11e42b",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x83bd511986f92ba700d4a63911a4952913916f825b8a844d1399741a9580935a",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9df55d5d4c5f10fe2a6a4854f7a6b09494fd499dd5166f2b287fd8e8c8ceefb8",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2983f93ee40d38d22704ff084556dc952ea870d21fac776ec1ac2fb086af2946",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d87f03b8856c29fd1561fb2f8395ec5f62234bd8b823faae6c6b62f4da4a964",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa6765d0b455e08037e69c5c45d53ab4f4f8bed924b0fb1fae66168442bad2eb5",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x609a3daffb9e1e8d6857a443c27b085438bd0bf010a6399ffacbad1dc07cccfc",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x305567a26f7806e3d0d8b7b89e4dad392eb35948bed7f4f03cfe700c796a920b",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x48b32fdf97557da26875dc516fa8f83e0a5bc130aad1616f8c186e9f427d3fed",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc8d04d6f15cb1f26c974428e786dc892ac09d6687ea79aa3ec465e5eaad0120b",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x43ee13cb6e10b12ddfc5bcc9c8a9ac18f9559f922c762666a440a9ffbe998668",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9af2769c5763f0d90f99d722114c2e5579661390718d81ca2eb84835bb71a4d4",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5a7b5d107f13efac5ab86a7f5455a42d067b6c58a8d3d7b9a1c160291b769403",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9175c4cf724c83664bf17e4fe24890032dfc23834b5f030e6bb48b1e5dbafd9",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x100596c91b0d8fdf9cc2d8ee75b13ebb9c16bb2cd85609e94efef5d0fc66b753",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7297294efcaf77d1fd3c696653b4fd6d0666393b01638b33322bbb3e54904d9b",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xde45ab276ec8b98d601d96700bf713be9ecbbb4132d5620f4c6392abffbdb9c9",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5ed22ccecdc6de6e18e62bbbc30cf3f9ccf815958e976713b500e18f9f2acdee",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4aa9354ab49ce4196299ca846d433f8d2212c4076726f74781fdc3273263ccc5",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x73fd35d5c79a65b4fde812d39f9e9a4a8d13b93d653557bd7fccbe7c62ce1063",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc4aec296b0a1b3720a270c29e1e7bf0e965312e5dfbc15e60b007737fdee4d06",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5ef3f6185bcf6182f1551da9442921cbd323e2e8c85c1f0c6edb2d3fc2b3e4fc",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd20bc91c3917191f8d427581c7161806106b3cadb11ba341ba73678ea1c7406b",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b4c6af3b973860bd77e652ad082c51963fda3651f8239f9a17807d8ddcd7923",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x233e8d9ff2cabb6a22afebc29435f0a24444421abcc2fde141b0388b9c27acc0",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1eb75bcf23bfa29198cc78eca393a9a06adc9a75ac34e7ee92ef6136d0aabf86",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa482e1beabfdf35cee49dd29dc3c32dcbddf2ef0156bd34cd12276a47006aecb",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9503ff58ef6ecb7a78eea6c490401ca075182675482b38ffc36b3748701c9256",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x076b8eeec1a8f8114ea4bd64fb428fc5def57c945e21b7f3f5c9791b8384cdb6",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6fcc8b6d8993b92302bb650d83829194a010abe0119f8047bff48d31d1cc5799",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcee831ee1040f1c5f3ddb57c47c2ffe5665bd0c2f05c06f4d5614f12a6c8d95c",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x64853cdc88b5502cc3a86c2ae1a652914af25e72ecd0be0ed5bc3650935d52a8",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xebe17cc1167ae1d784a6005483a517022531cd72cb21fe9ddd9f71466c48be56",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd9dce175f40eacef17b3fb8d03331ddc3dcf58da9d1228c1dfb60b8d4b7eb8eb",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6a20987ee17f5418eacd74691c2508db6605f0d16ae71c91c2ff19df910da707",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x87488892e0c060d08975ad83db500066841ad3df8f7c19beb741655694cb5391",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x975d368cd377e54add507049489bbe1697e7139b988fd4e4375414e31dd59852",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x54db26071dad7929902868bff56cc2d080523a0989b5fd9ea11701b5b05ac7d2",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd24edd75565c7c0ea0597bcee79c509f06900493845802a23eed9c739ce54ef6",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2eccfc2991497e92c764b49a12c60fae44c96faee6c2ec8ab2d9379161d9d54c",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x78db0cfaab660cbb640ff3dd1a3d527157c7eb4b92fc755d0eedce7cee6b4633",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x520b0b9eeaf04413bf403e7ff50c28f30284f515d8925bbb43a02e6eb1ecdfff",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d69449f5491e8ce4a67a6818507334b56e70714117819c5a7f5d91561a182a3",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x10d9f119c493f81fdd08922daae8c6234f1c027b48589fd30427d90fa13fc9a2",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8960482b0b28c906a18ce7941e4c57b477b674d6cefe6facce4dc19ce92eb167",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x45cae5960f35afc610e899d04792f683cb9e8e8553480a642dd19a646ab90070",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x97063bb8b8b7904ac11e4baff5256b0bce461e3c6d2d338b9dcbee30397104f2",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x649875a050de63f4a36737d6a3628feeb06dbbf1be74a1da025e03f198dfb432",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 54,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc2949dcd59638828cf29dc8df7443374ae1f203cb3dc4620cc6ce028d3dd48bf",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 60,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1ac60a1b4945788929f378a15fdc4ee0ae861d3206eb3dcaaf4ec8d14cc7cd7a",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 66,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x99aaf92f0f0121727f294c7aa5c1487eda83f5a4e904ff17b9a03c9a8314953b",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 60,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8171adc372e32d0c1d490cf672880e0e2920d022cfc35d59f152e602c6af7a68",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 72,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8fc550bdcb758db7f855ad963de6d5d43a0e0d87f9e9cd143f0ce5543accdb66",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 60,
      "size": 6,
      "price": "32772000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xfc3db90d5f29580ba2edba29b0fd4e33d9af0fde0165e7cb81fbc2cf0a7d23dd",
      "assetIds": []
    }
  ],
  "solcInputHash": "b42a863a795806b4ea3a8f05dfa42539",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}