{
  "address": "0xFb9bb804be6CF87e7432D61ED87B92025e338ca3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbdc80ebfe1540e2571933252fa1f5200a6b818eef6a7c803165b8f2b5dcdb8a0",
  "receipt": {
    "to": null,
    "from": "0x7074BB056C53ACC0b6091dd3FAe591aa3A4acC88",
    "contractAddress": "0xFb9bb804be6CF87e7432D61ED87B92025e338ca3",
    "transactionIndex": 120,
    "gasUsed": "2667591",
    "logsBloom": "0x0000000000000000000000000000000000000000000000000004000040000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000800080000000000000000100000000000000000000000000000000000000000108000000000000000080000000010000000040000000040000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000004000000000000000000001000000000000000000000000000000120008000000000000000000000000000000000000000000000800000000000000000000100000",
    "blockHash": "0x2dc017e5a1f4cb29de71e0c140dd8536eb8e60d6bdb8a99db7ff5c8b5d5af0c3",
    "transactionHash": "0xbdc80ebfe1540e2571933252fa1f5200a6b818eef6a7c803165b8f2b5dcdb8a0",
    "logs": [
      {
        "transactionIndex": 120,
        "blockNumber": 43449807,
        "transactionHash": "0xbdc80ebfe1540e2571933252fa1f5200a6b818eef6a7c803165b8f2b5dcdb8a0",
        "address": "0xFb9bb804be6CF87e7432D61ED87B92025e338ca3",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000bbba073c31bf03b8acf7c28ef0738decf36956830000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 456,
        "blockHash": "0x2dc017e5a1f4cb29de71e0c140dd8536eb8e60d6bdb8a99db7ff5c8b5d5af0c3"
      },
      {
        "transactionIndex": 120,
        "blockNumber": 43449807,
        "transactionHash": "0xbdc80ebfe1540e2571933252fa1f5200a6b818eef6a7c803165b8f2b5dcdb8a0",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000007074bb056c53acc0b6091dd3fae591aa3a4acc88",
          "0x0000000000000000000000009ead03f7136fc6b4bdb0780b00a1c14ae5a8b6d0"
        ],
        "data": "0x000000000000000000000000000000000000000000000000012ccc5f5ea0e5b50000000000000000000000000000000000000000000000018e9c4c9401cf86050000000000000000000000000000000000000000000001f54857092e06701f1d0000000000000000000000000000000000000000000000018d6f8034a32ea0500000000000000000000000000000000000000000000001f54983d58d651104d2",
        "logIndex": 457,
        "blockHash": "0x2dc017e5a1f4cb29de71e0c140dd8536eb8e60d6bdb8a99db7ff5c8b5d5af0c3"
      }
    ],
    "blockNumber": 43449807,
    "cumulativeGasUsed": "19909926",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9d305a42A3975Ee4c1C57555BeD5919889DCE63F",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xfD30a48Bc6c56E24B0ebF1B0117d750e2CFf7531",
    "0x1b47567CBE36e63293A7A2018F79687f942aB24C",
    "0xb9582ef97161a48b633e0cf8648af0fb357e8f83e5c2dced374ed78fe1d1a4ea",
    1687435200,
    "0x3044719d139F866a44c988823513eCB93060bF1b",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xd19cc137bb848d3a48ad8ad883886b67c26761dc",
    "0x42a4a3795446A4c070565da201c6303fC78a2569",
    "0x7804fb2AF15bB1323795A888B09913cEf629Ffda"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 288,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa31a321a7540ac60e65ac4770bb553d0e7e44a7ce1343484a0f9a9cc4bd360d1",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x49dcb1f3fcbfa8f0a22e245abb2c4669bf65b44b0a3da712c64f9d9d87c4be6c",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x97d434550ba1d82be59e78f3d43f0bd67dbf82191b911cdca6d3f3ce1064f014",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x510ff594d942664b57b72a744abb02d8083fcde7b40ca77a53e15e8320089067",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x88f1052a8b251288ec36a38cdec8234726fa561ecfb3439025f95bcadb42f4a4",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa9c26a064ea117a621e08cb397e7817b3de663b92d2bd5a681a43b7da83746aa",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd2d84f7786cbc6c3e97a45d6a1ea1231560fa2aae17e2bf434c887903f79a062",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf8882571500ba5d61608dc57b18a596a00672bc401ed95e5782179f1fccdabad",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x073646c6a9a4f116e7b040cd103ace61e21a15a41f90e53605515ae6506e66bc",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa7acc151da810682db00d03c57c2b7822e0255ed7f90b51dbff22bb4722d9a6a",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x73a65fd11b0187a8c90eee412eecd8a6d003c170202449ecb00673b559861d68",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3fa42d37e060dcdae221728ae0ba59d00586e0809a9f89ab8b2ffb9b7d915ab1",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9bb41099b6182873073f34999e3102457b4208abfa5fc24c2723735308032348",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe5206cb4247a881aa5fdf0a91d0fa9c97d21727435d779976132ab5d5f954585",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x211c54e00dcae5c00be8158d8b54c70e2d600f638055570aefb039d95097acaa",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5e6afef61d41e2b7ddf5033ec3828b361493de86ff72fc5fe12a2fe878f00b7c",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdf1ab43137918ef09af368efb657eb3e0f5c6f76636ded364a3830001e699177",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1d88a840e5f9792993e8f22a423d438217d0889bb272de36506e6c0ed6001ff",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6b672a8c9fcc490f530372adebef8c10bd81f4914ae5243bf88dac327e139e1",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xabba6c046752b94dceb1c5f31911765c5ad0a000f5a9c570f6f4dca01a3049b1",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d80580bd73883ed5daa0b7ab7b44cdc0bdb1701d72d4b9b1869999eb2826e53",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab293f4428d82df99ffb491a20988f6afb828306ca7c75952aa473079f0763b5",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9f5d956af6b375c633219e71cd114602c226f18757d130c5808a8ce8eba7520",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1984199fdb0e8df134de7c09ace5ae4470f1ec7db5bfa985645a9cc4ba87daa",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x05c5b99cfb497d12b03e12e49309cb212f46d028a834dcd2322c9d11b18e9347",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x79c660a2b37f8f658f89ee084103ab823652da609114934d454f00963fdbbaa1",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb32cc4210bd88988f8c98cd21fd7c38d508bf5c12d25bb753af022d79ce3d7a7",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84b5ae9ab7bcc1388bf1f35082859ccb89584b42db3e8e7fe30614961155027f",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x42ed9d8d2012c6e759bec41c388822703329f885482d8dc00d0e429cf9c58713",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xce153becb09f4fc529d145e4d1b503aabdc31f41faffdf62016fe409ee401ae6",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd790f1bfa3123cffe78ab2f4a8777e3a5ef0c60682bb002ca819e32569c54a98",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x05e0f5c91636872746e7ba62fb54720d644e4ead64b0fbb28e70c7e8654d0bc0",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7b6fe121dab62153404fbe84bab3b8ff4579d5047cfbff354d1c67d4cdfa97d9",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9961a8bf3c0a1e701fff0c6a40da2cf92c9311171cfc550cd6b7f6a64a749117",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7f65032e537e59d991d45c11eeca7f6fad3b4c938de3045d151fe252f4a2b920",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4cc7b543aca7662f314ce6959b949662208f90a8eb69ebdb2c3ba863f1b4aeb8",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1975644a4247b243321183042042d0f78f25e62799ca84f488dd88c3d5844b4",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8b5b8e9298621c9a1893a67551a1a0ad37831c48cc16d9444d2706cae1136f8e",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfb3336cf64848e7c3f32273ebd99d62184888f5f6dac64d31f70aa80024b5b5a",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7bc97bcf77e27a6ae97e0baf69ad47377b34da07bde53effddbd9c519477afde",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb44b19b808302686d07f65f169568adf40fdbe56db64eb61910aa631ab6b067d",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeef94b241faf2a7cc3e3b4f78928b7bbeadb45818c30d58240ff42857dd4e1cf",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d00276fa436897feb810bf7e731fceeac842b2ac967568c7bdd91b58fc3f03e",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x164e8b9f4d1c86f3c82fd4652ccebb39c9af34be16c6d39b70db73b42a669fea",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1bc2fb3d5bafc840748f280e09ccb46127565a724fb81f97c0a1d0ae37b6f301",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x09533593d45b9d70cfb71205226827751447ea3928ba1638c6ed0f44d9dbf86d",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe4a5419984bbdd25e566748790915869f6935a44312501a1539ee61d13df3b79",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x130c0de5af4ad149bb1305e818763f9934ded644dc03b9820ff8b42e2ba3a4b0",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2d7614339f4efe165cc4e410e742f9232a78298faa9ee660252c9586d16e3946",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 192,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa2566f155b7b2980bbfa9609cd2738744e5540352cec8be7122991d6185fd30c",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 193,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x289fbcdbe2c011e2d54d595b0fd280d594528de5834656313e94313c538b1a1c",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 194,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd9d8c79cb7c3db89c08839e9ef7f2bdb31a76137dd1601ebdd979072b51c830b",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 195,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4c5933e41cdc57d6b68126f675cc768c2282e0e38407033d7b66804ee8cfbe23",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 196,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x252a6548f98f29b83a64ca006e0e1bec42929faea45957591e15d0f0677623cb",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 197,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x19bc9bd73f867e21def158021d03db31d18e4509e79c0396c24ad2f6079517d5",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x71a6ca6bc77f6d325c9550f73645835006fff5abd835230d440b533a90b59cd1",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4a1f34e36499e5992c08f2f3185ba02db4ba41836dc820f82123a9bb4dc73559",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc352314b9052979ae109edcf250521f97c0c87a3d00da08aac963a18967d6a8c",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x295cfd0e4a2ef21d892eb99f22f2248017be7601a85cf34e90c8a4f782c477d2",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe376eda67f4b0eb3676733bbf810966ff2af332a23c3430e510a17547e47952",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5d93fc29be6566dfd49fcde6bb18ae9a6178282f969e56ee1d9a24fe8097e384",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9bb7be6faf916ca3ed88bea390ed8d0c8449d4ee1c5fa42815b1533dd856786a",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 204,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x630dfc12bd9e3770fbc51a0713e39bd1c71e502f645dbe6407cab2b06b53e74a",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde221f4bee1a271d14b96bb19c63a9ebac661f8eed695a76e46d17cbc0236b8d",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 206,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3b973ada1fdcddecb022b013a04205fc29d7666b146cc7f2a32239e19b635d43",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9eb77080862b4ef3523eafee0fc232341bd76653fbd154db12b832d820486c87",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17924ad0728f4881cdd6c6b6085f07566c43bffd428ad44693e337259ab69c58",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa797ed8f0a1c64ee5cf5b576222caa37dc5fceefe52e5f3978c3fa3fcd0534f6",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d67256da00da8c70462cb7f03cd2df09fab05b26c73236886088565907438f7",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1867b879684268adf3b61b3199daff670274d20489d4da12189afd79299e5974",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd117d7143ffbd97f1659d4b748da0422d29e0ab70b8d090961c9a1c4d56a5684",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fdc05374d1c3cf8bb42213f8fb723185e2d18e3a297ac58c3ff6cc769d1cee7",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6955fe3a42c570dd4982eb3d99c6a8f961974ca7eec778def21c2115dee3836e",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xae24f9876e69f0494df3da52a9c2c4ed20366ed6409a1f64063602c885a78f31",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2c8a2f7dfa68e17e6aa04bf65fd32dd356ec9e0ec6d3054566e36c60904bbcfa",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 204,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeeeef95fe393c2822a78c0c62503c1bfe7ce41b8fe646ee912baba3f292700c0",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x655b552227430478c816ce616ce641ac32fea4dc642d146eabfc72b68e399079",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 206,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d69ecc71a3b16e1586c713ba1999eab9a0d0cb0b5a14ce3d293cb2aee3066c7",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc2d7f37c9734a6764104e1974fe1402bc860b40325fbdf86b01a35ee73d93971",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe46a12aafe98be809503f707fa62633f2f0271070936b8d50ed7eb05474f7da1",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3ac8d6cdbf12f9a4236e43a94c4c3b99bf7030ab022e88dc19ed342cf5c8196c",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa3858f44b83a6667918b02eb1a69e7b859b701fc3e3c42e688be93ddcc4fab38",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x83ebaef64173cefdb44a03dab5c3a834f70d7513809ca57ae4a71af78de85b93",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x81ed754ec901d5ee109c9e28c22951d25eef06f3a635436eb80bfb0f983ea0ce",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xde6e07a4a8a4c34b6b138f21bdcf8b4992baaeb4cda780166fc905fcde19126a",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7126274197c5cfaa4a4cc88fdefac0305866b9c9b501243fdbf30d14bdfa3f3c",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc78b2a8f84283c598afa4bddd4e5b9e5753be82632b584789756275f7935670b",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9caec92f467e39f533bb5346d891072cd8cd0fd4dfdf449385b4c8226d036f11",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 204,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1b0a2ff22a0bc595e48b81923752f54df620b65e9474d4208391abe361e8eeac",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2bcd1c73afcc0e71ac1fc4faa192538ed232b89543e53625d54bd7e634e1e97c",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 206,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf805cfb76c489d8f8c30fc50c156b0c19e10471c8b894b963bc93cdfbc3971ae",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc3cd3ec1ce51256f3a1236ddef7edc0c8510ae45af6d60494d33a2d496cf2189",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeec65873e1edd1eeb58ca66cc832ea34c772af88e40aad7d41077faed2f68174",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9a9eeb78d6528ca7f39151bb17c991b2dd666c0b4a36088c08234683c9f4620",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0be997e389b1cb08626dcda6fdae7523f2c5be1c915f6620dfa857c9d3df3837",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3dffc521df53279a9c21578aa6797f19ca62b7ea21c5abed703fdd8a00d8ee84",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x12b883b388069230a7c827aa511c0e72466c22057e655da8b3a1b1d466eaca6c",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 191,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xac117e2e0912b35719f1ac1697dd8a4bccb76b37c1cdab258ba0440bf3fe2fe7",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7be29ef561f21592d266806ee0dc8dd0e7fd0abaa56684cea3e8eef9e3e98a6f",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x896001584d94877005389dcfccf3e1efc1746e8d3214b80f16edbbf1e6d04d9d",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfda5b5deb62525595a01da725e739096ea86acc57dcde051f2ea929d2ca6ad6d",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfa26753a1eb8bbb17a0fe9ea773a24871324f80b45165406de87e74b9e5b01aa",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9a06ffc44aa6ec016ffb3a03bc7492805fe8d0bfbf79ac1c212f8ad791283883",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 203,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x761cc7cf8c3e32ec212d575d00ccf70499ed2451965e299db4a4f4923f5ea510",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 207,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe9bf1d7fd18d6d64768c426d0c630cdf186ff1e2b3f5ca963b8a837c8bfe102e",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x306cfae50f0de0a7b9ce6375e2487026baba8d30e61664c75ce4575e2ea5c5cf",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xca2809598536754ca601d5e05d8378ff2c6afdb851f184d2559e3bebcf7f2c80",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7db6ad3a5d26f1ed8d06778868994e7a6dbbc6f035c249f18c8f9a21313b4277",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x099a07de0d1aa89793e4815943d1266441f4181a198da8c0cc8f38399ad79d71",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb657c5e8cf1cce0ae633a689cb50f8de604443912d5bce4a6cba09923a30c4c5",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x23132b03297e03a6f6bd4f90628b8fa1b57ccc64b6d6b2bb8d6a7bbb81034a94",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x302efe90387646ac9f52d438d1c83fa5f351ce4d70aae858504d45997ad1ec4e",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x05e6c2cf06c3136a4eab64598faa7f0bbb09beada036b88aa772015a89341fb7",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8ef15c695172320373decf5e00f594ba6fd0ca5a408983a13e32406a57356bed",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x014f4b041aae26cfc11f342834e4e7742e89c81acf4e802a8071151161c7d065",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc4689d068e116ecb9e72a501b5b3db40a285ef6956f42a5c20ec0a2770682ec7",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa8b1369de23d2351dcee9f59addf20825e390e1d553b1888f621338f9007661c",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb9bda704b68fa8003bfb33c599cd5619b240e1553e3cb4ab0555244fb0403ea4",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x634fbaf9a18cb7e30cc850079577c2d968765b7d845e96227635a1a38d4ba3ac",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb959411a89c5eec4b3719412ec8aae7d8eaaea81d4dc764651c6bff28b7cd80f",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x417cd278fd2f217f8b95184cb744f3aefb4e24a381cac6ee8a0b889fa2c44cb0",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8298dcccc178d204ab664d17b8d31c430d1be6641c38310350e76f584fdec764",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 203,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x64c3ecdc944ae23a4dc5184b99523f6299734b33a45f1b2b5bcb7494ae2363d8",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 207,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x17d0bd85814995e9c5e387def01254aceaea16fa698758b9cc56a00b797087d2",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8c41a341ec4c28b4733e7b8565f99dcdcec6fec05acb3277823522c97d74fede",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc54622cee175119bcd678cda2b5af137c604ceb671fb06eebfab07d91e332613",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa9fd91a05dfbbf47599dc87204905a78723d213650e1eedad0a9cbaa96304b68",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x430b7420eb88f7318d4257cfa614e90299930b2acfedf77af8f8644265fda687",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde994e9ff3c2c07acf1487423ee311d0c2408865630297f42f760f182aa03b28",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0cb3e3ec34a552b9c7bcc0f49d55fd7e0f08dd337c02272ec20bde575b6c428f",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8a0635d27774fa2b3618fac20dd6aa419ad0dbade1bcc7111230561d4d5ba0d7",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x332d442273d1a77b2cf9336212aa294a8735a7ac7b32f7921800583bc0c9d584",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdc2a2ad2ced871dacdf8358dff1c7eaa0a6531ed54ded5c7aa39328ce07732fe",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe3aa654883f9508e960cbd7755e345493b3ab1b7f068811ce6f79870a47f90f",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 191,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x791f3c341fa2032c5881d5a842e7f7bc32504f28a9528448953194d0f2eedf5e",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x775bbbe6e8e3dbb35392c1662114fed843db16762ea09cc471866b9e29689ed8",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x86688c1538985515a830272d9a0bdc5846b1cd76616a12c5c89bf7aa80f233b7",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x12c21d4e869d62f5fde5cec70d7bb35a7728f235a3bc1b0b9cad8eaf34d5be3f",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x67e82d439ed9808086c5e26b4fc024426ae714c402a116d5eb26a8b137cadc71",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe3717dd16fb0e1491e6935c87e93eacb55111f158a2f24c1187d666502e6b654",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 203,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x2b58ecf9524a44cb7ed4509347c2cca236401ee1e55c040f165a4ab9f7dc46c9",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 207,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf1e1418310a228780f9f9e407a32e21390e6bdd610322d962fb9ee9bc7a9bb6f",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x91a05a52fffd66072fba2940419e67822a8888ea1595d03abae8e7e6418be164",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x684d65934f17293ef5788941a9b702a061ed0b653c6e50668e26f8416d18eeb0",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x74c238b876723e73ed9fe71cd196fabd851df323864352283678cd3a14e5f72e",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3276bda195d08242e539d600c469e4b758fecb03d7c93a412a20d7ded03e24fd",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9e9c90ab24720a8d9557e8e7708230d96e709e0bc95db75c048bae6287926fd",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1517d7ac1c09db66758b62335b572e999b6cda89076e851e172b70fa91deef8b",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x951544578ecb8768239a8d8db3c1c3d544a86459caae85ac1d518b5dfec94c7c",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5637fd30096fe2c3a28b550282b939e368b22ac9de675ca2d2c630a9e00a9e1f",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x977411ea7eef7b5f8f270469aee3de0e023f00a5ecfe8d283b50d7aab55607cc",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2ff5270e1f06bfb855fdee39a8a32348f1b3f59147c60b60cbc671a2da1552a0",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9299d0457bd2278bbade833670acf0a17f48f15e9a945307e9cb8d5eac2ea9c7",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 195,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8c9d1481ea72108cfd10f239194ef3f1fa45a9ff6e9f89a633c5be2a475e0526",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe0e5d6d264900bb2845bb58a310d819de7cc2a9b34f79da61ec989e3efbeff80",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 197,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x42a669ae96076a26c9a26b452ba857f8e4b73ae7fc305410d354e120257a4d3c",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 198,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x86a53fac0f28ae78ab6eb7b574806bb5f39ddd54099e22081c766405b9a5f64e",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xddfb5125d231b7dc8a4b1b541f8c4323c640d1c402beb0239cae2bbf57c2e9a2",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x51876af1ead29e7a600e5f65f7230541c87af4c9ca3ab5b534a80f3aa5cf38e7",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x27dadcdfc9c481799553e1bb0699d7aed0991e5550383734e9ffea995d44b5c8",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61c3ef32135e3f0e6444afce343e5a73f494f902344d1520861be3a54d07de7e",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x95c25034c97ec0f4e140875309180b7773fa7f0eba61333d9c1e054a03a8713b",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 204,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe819b12928cdffa8d4acd4cb0c5880473125c4fea0a235532a65200e2fc66d85",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf8d6615bb15c191c050ab5168a30e2bce48984a2a5100c95da3b4110aec3e1b2",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 206,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd06eea829f514eef56cf01e7b90275ac8059fe4086fffc5fa54151b6fd7f31ec",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa6ea9b13e80bd6fa8d9ae8a5ae27e1793f007ce2e7f650a6cacdd1546a2df350",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x26beb0d9784e34b45efbe547297a9d8b881f085185ef4e0ed5019296ff653094",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 209,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe80b1e070cdd96213efa126ad2e242ff447bc09bb75cac16c1814552a74e8a96",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x37b7f938f84820f11b2fcc67452ea8a350b48129ef9efe43b3c2ea1f47134180",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8251b00d8cb437a9a478717b6ae5f372f955684a08d684e31f195149db6a27e6",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf6b12772e24299572f96d795513e2b13a7be63b8843d3c3fa3bcb2d7212b5d61",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x82fbbf7513a042abb4239b87cbf1337fb8750a76dae246741328aea263ea4aa2",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc170c66d4e8c1e6b6b1a8aca2a6b1e17f71d747f704039cd965cd6550ecf6c05",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x56bc173d951d675fdb67bc9c492d735d00a72a6dbe0f0c49a636ee580414fdf7",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x537be33b3c4d8f955b800aa698872a311c3a0c143307d94bc6e9e11764e951c8",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x556a0568953f362eba565fa6b24c9eae2b8e24bab1be40e72b19ea101b8edfa9",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa9446305afd6bd5b7419cd254521c8b0ba164e2905332c4d0690e09f4ce093d",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x39030d4e1a80145c2768ca67852c07d5350c9d1dccf5da9cd3158d2a025afdb4",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x44ed543603a293033a0712a198a58ee728ef25a03f9378c8c315cca84bcf0841",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x12f7a2c9b116e37b2017040b1e4bb8d191526ce964389b6e4a775239db755c05",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 198,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd7e2ec0791cf60707f5fbf7ba26735e9c007d3e1246a758b345919eaf934c125",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5ec198ca023016034301b46f234deb046400119f6b5ea2b87835684e876772d7",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x80053212f31cbc273f1c4e597c97ee6a7d8fc8d6289d7994bdde84b2bc5c48c0",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7022016ca105d427ff297abbe1d1b41cbcfac399a7a95c1cd55d937a0d756542",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2a3f3b62d873d661a18c23d784e0bc7285059bbdd01eb81c669a2d6ff43fcb4f",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x166b110836df4dd9de1327f2ae35d3305e5bfb65e9024384eb37d0bf1de1bab0",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 204,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa77327d6b4b48cc2de2444de5577b13ced2aa4478079a230f4565f90786bc6eb",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5b1003033f69b8d4441206c5c40f91e632d7c09145e88df99542610a44e597c3",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 206,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbd8d55a2538f77c180793e0985f4a086b7ca9c18b1fe594d8ec880b8b0575f25",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x417aeae39438c712d730d208549357c3e4ffb2cb8b95b77a827d67f47904ff06",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa332669c567997bfecd7dabe636bda0c3f5d1612dc8991074d74391afb018609",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 209,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x627a596e8a27dad54b7bed60c66756d51de9eb0e2337601aa0934d603f27572a",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd85e2ce6a77e763f9ae506c73dc8b10618fc9505848afab96e9b5265c0b8787f",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x83f3daddcfbd5c6e9642c74e196c2150a8a9930f0a4f41b944a88b8ebef1df96",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1f2a1cd88e330aabadb995c6ebbc95cab7a76ab17c7f1e76ecc5aac9e00be73",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xed0756f01bd2e2b0d21f9c5f2537256de3d63d611ea2543397d240f09dfbe76d",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8ab82782f315961feece7c9dfb25f45b1fdbb4db011a7056b2ca807adc76bbe5",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2406bb211ab3f6ce49fe20c0bdcfd8ce6d4338081ee00b50c99e3c37aa2ff6aa",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x990d799da1a4fae0e22e088496f892595df2615df54539f4d48a075e73124416",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3c0b0dab673573ddc31304de53f8d421db52c0cfe8205d8c7ed9a55e1b67dec8",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5f283e1f0b88a9a40f2ce2c351a91d6238bfebb65bcca15bd9670d4294ac50c6",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdec3a4e4e36f994804b758e457ddc67ed849ef8bddbc5982cfde5cdac9e516b7",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x478bd2653735e96c6ab091b701d4ad8dc0ff44da05689a1d4a8bd23e64b357e0",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xae315b3c4f9ee41083d89fd6fe56fad80fba5bbc98da4628ec91500e2c8be19b",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 198,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0fa56a667360a3ccfbc728b730c4676f819c4ad55b5579098bdc0ea5560fa94e",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x83a735cb32ebd37073c32b8dc1277389b4070d7db9301f27ecb9aae68caa393f",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4e318460ab5b1cbc802ca243764cc9c5229dc7eeb222f0139856d252f8e8c5f5",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c72fa60e039278bc4e9b92331c8d98c206f488a83d7b5e105d5ff483693fca4",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa8f1f013d700cbdb7f351c4b5730d9f09cec6143f74b454dd49608152fb8e561",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x55054a3b8b36e550b787162da56ff575212a5a79cc184a94bd0dbbcb61392c39",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 204,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x57d0459b9764ea0d38d5bbab6730fbf65de8ffad1e22f0a712dcd91fe121480d",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7719c3979bfc6e3dbd51ccf26dbdd390096612c8e9f1ea425a6732d14060520f",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 206,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0bd6a95c6e3e30e8158a1223ea82018d56cd75b3c9133c6a41c193cb743c6268",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd99b77dabeb95713db64de6d781487220126c7a03cb12bbf5161489fce7f9858",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x09c51cdcdd8387ff086140be80eac89a98df28fbbdabc6d712733b2473ab7495",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 209,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1ac45fa0fbb7f3028b106c2d07bd85ae00acdd0463fda69f1706111aa3391f4c",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa2565b469e50491229edfe7e16fe0e3827a644d3c126e4630f202d72a6c2729c",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c28393a0f5429377e2084fadabd15d9fa3940ce2adea64d69cbc6e6588028c3",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x50ed85695c70c12da855dc75e406788e89e2450e4ac907467f8d65e5b8ea554a",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0cac5c73e27c7922b158ad9118e1fd538392f46a410410ae2f3ccd91d797873f",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x91c3c5633a07cbde6e54845597573edb19ca2d1d3fcb3492f1fe7f28eec38b3d",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x27cbae9dcdf8d4c9b8016a0ca8eaad07314e17a2ce46a377b82ee74440be9887",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x50a5d39cd2b6752b79dc71db612a89a3fd8e2bc418928d090f430805f9ae5540",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x399dc7c96cce89c939453a077445cba55f0bab7b93ab94e95ba8d1045768e1ce",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcc3ba371b459ebffeda636a5d59eaaa265bd68ca4a7d126134ebf6fdc8b1e93a",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x397af23a20739d5c365d0e85f9f27052a5cb92b01b8a12ac96f71300b3605704",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d9a3ba3d2bad382a44d407acb050f4724216b652ce624f084d4c1813b6b32e1",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1677dafe5ea35ad4ca82336fa9cce1ecaf6d80e32b23e210185096a7a88f7415",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7a9f71db8c39a9c71e89591480d6493dda0a458bf7800d766c3c85e4e3067330",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x259fbf5b9456a96bbb4bb30c0c16556f0e8a52650abfad03c356af9330544a88",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1d62f8e91276b89ffd417eb98e70f898ba4d5539449a4101f5410f75bd1b1c59",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9fb6e58a11ec266664d8116151858b17f0e7d3196fe3a7db83ef271fbea482e4",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d0ad202da6cfb94da4cd5a0b533d2e142fcb5854c73ef83b845b70490eb7702",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7446d44c0a8bd46a86c34dabec1d9614a1df9c6c0eb348a1ebd2bf15cdbc7378",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x99d9c2193c0e266eff26a40971fe96b88733d5492cac1ab128da8a37ea2efce0",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcb4fcd9f8734a32decc6dd1b5a7ad9658355601d7fca6b021f05c528a62bb864",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b8b619ab02c8656b5297b9a5685928e927cef3b87e1175450fe6ca374688dad",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x843f17f83248418d57ecddbad824bd8d233c87e8642278eaf5aacdd44658da49",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1f10361e84c9560d73ff118560d8b2d9528a16940766234da76c90e78f51dcb2",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x855d938b183467c922d26b71e482198fbd4bf8483f8f624e0be8ef0bafb8fd5d",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb8e1dae912c18d2d36478fc88cd9acd08c3b14c5e0c66ebe9c7545ae6edbf96b",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xed725e7d22bf984301016ba766c59fabe19f51065330f18fa1372f295cce1074",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf693b2006010913dadf092c5a0ab930ea57795ae71fe9118b80f9f15f9081471",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9f3d286918d6e3f9750975165d4f743717c814f791a6f2c426080542834f921e",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfd88442407d4d3c2c03f9b4b71355a79a285f89648097efa678b5c81a4d9ef90",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x889bde16f813f217854856ba7b835610f3539786f91b33e731c6a1a69c05beac",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x09890b716c290462b67dd68e553317bc8340ac477ec20534ae6f68dcc44d7f71",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x45b6d57483c9348bcca6aab9223789a1ffe1f24b176b8cccd8e5c4ecb9ded39c",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x90d48fd12e74bc75b965661097bbc13721369a97589c5be2308e241de4a21c3c",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf006d3e26b4a992039369834a568b56ac0dd51da55ce60a5a2a85b74f7cfbec1",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x51edb6dadfe215908c12f37d84d78bcc391b8b9445c2d69e7b69091172c12796",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x208e85df833af7687f3a3935ab8812adaf65f6ea2301ba26b691774be9d1d2f9",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x2faa27b9fa9bc1108c1c57733a90751aad22a50244d86ed787029341270318d4",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x09ce1e4339295d43980d57619911d9e9087cef33941477f927185a6e5aebc778",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x762c241b5fa5c88dde910424750c358a0746844c2db4c9c6515dd94fb0ec6c47",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfc35fc87991b96eb2e5808990fc5ef7399fba0eacafbd59e8c0ec07829f523ae",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x41fc72b0ee5edaab19773c649048a43e69e81d63b86166ab20858023b89a6be2",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb7050e9c313f1da8f112a8eff9bf91973027d6c85e5d8d39932b6e17b202ee81",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe4a9637734c3f96b2a3a1b59752f7fc7c6ad077fb9c22f74e7f12010b09f99e2",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x160ea9a1a4622166be28b4d3c12db676f048a7c0d990814f4bbff7bde62c19ab",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x69058e8df1e6aeb8b2b5288c6dc3d5d6e23e7d90e7f5077094451a59c6b706ba",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0e4966892b870384df7593494a5819821a61c4d74f0583d7a091058d6921a011",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a749ad554aca3dc5a71b73314d0da12e6f412e0647c81549edbf22d5b7e3cef",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x606715c569deca794168244694189376d7c61fed4afd2ee5ed8dc6b762425ae7",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 210,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5bad3e3bc9b16862f62f519baea0de9f07dddd6e421bf2d598d6c0af38d275d4",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 211,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x76b2725a570465a871d1d36f07491ab955292e9b07c9fd8eb10bc10ce53e75b8",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 212,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x13dc2bf4e24891b9e7cf6593266335f0248ea611ff2959636765b9b7295480a7",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 213,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x72e94b017d18dc5739120141a8254ca3e52763fb206aa513b916d0116b52c284",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 214,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdae92f284aa12aa7eab4604d35478d5a3d2876e27da2d05f08039a93e70bcbf1",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 215,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4c362ae5d28309a4f413d3c175baa59d52806809a7b3a820aedabdf26bef00f9",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xebce072f5a05539a445a5a1d89a8703ffd8d167c81c9af8ad92e7b83bcc5208f",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x39148443810cad96c09fca775abe13d68de3acc64493d00cf23413320564afe1",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb08ca86c21f9893e1e442c410b1d5807ab355e8236072a5059320d5f16544efc",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x686b29933bce4455c3d273c24ab89b78d12a646a940dcef55a8d8e917c6265f8",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd9059257175ee0367bca0d929784fc7a9913be827359b62c0b7bb0b0cbb397ad",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6be07aaff95a4cef4e810f9102d6b24d8dba212f4e843e2c82193f6758f3676",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x36e676452783b3fbff68108fe2cfc6d9b5b71dff495f06e4b91eadddbbb92d38",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x15ac116ff03bd7889e09d596824c1dda7b1537392d268b15babc4f6dea739782",
      "assetIds": []
    }
  ],
  "solcInputHash": "b42a863a795806b4ea3a8f05dfa42539",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}