{
  "address": "0xac531Eb26Ca1d21b85126De8FB87E80E09002DcF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4e8b4229420e4be43296c601b44028a2724c3eb45c95b8fd826631e2ba367b04",
  "receipt": {
    "to": null,
    "from": "0xCba49d154b4Bb9a9aD7F5Dad396CB9a0a3a62ABc",
    "contractAddress": "0xac531Eb26Ca1d21b85126De8FB87E80E09002DcF",
    "transactionIndex": 76,
    "gasUsed": "2668417",
    "logsBloom": "0x
    "blockHash": "0xbf7418f763ad3cf88268a7f60e7ddfbdb57d5d15e8675b05fd6d67f1baa831a0",
    "transactionHash": "0x4e8b4229420e4be43296c601b44028a2724c3eb45c95b8fd826631e2ba367b04",
    "logs": [
      {
        "transactionIndex": 76,
        "blockNumber": 50855135,
        "transactionHash": "0x4e8b4229420e4be43296c601b44028a2724c3eb45c95b8fd826631e2ba367b04",
        "address": "0xac531Eb26Ca1d21b85126De8FB87E80E09002DcF",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000bbba073c31bf03b8acf7c28ef0738decf36956830000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 115,
        "blockHash": "0xbf7418f763ad3cf88268a7f60e7ddfbdb57d5d15e8675b05fd6d67f1baa831a0"
      },
      {
        "transactionIndex": 76,
        "blockNumber": 50855135,
        "transactionHash": "0x4e8b4229420e4be43296c601b44028a2724c3eb45c95b8fd826631e2ba367b04",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000cba49d154b4bb9a9ad7f5dad396cb9a0a3a62abc",
          "0x00000000000000000000000069f5c4d08f6bc8cd29fe5f004d46fb566270868d"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001c83b98447bcda70000000000000000000000000000000000000000000000008ac7230489e80000000000000000000000000000000000000000000000000327c35fe669e4e47c5600000000000000000000000000000000000000000000000088fee76c456c3259000000000000000000000000000000000000000000000327c5282202296049fd",
        "logIndex": 116,
        "blockHash": "0xbf7418f763ad3cf88268a7f60e7ddfbdb57d5d15e8675b05fd6d67f1baa831a0"
      }
    ],
    "blockNumber": 50855135,
    "cumulativeGasUsed": "6004502",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9d305a42A3975Ee4c1C57555BeD5919889DCE63F",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xfD30a48Bc6c56E24B0ebF1B0117d750e2CFf7531",
    "0x1b47567CBE36e63293A7A2018F79687f942aB24C",
    "0x93d09e57ee3c7012364b385ec2c9b5443da8e43080e2b9d5fc6232c0b66904a3",
    1703851200,
    "0x3044719d139F866a44c988823513eCB93060bF1b",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xd19cc137bb848d3a48ad8ad883886b67c26761dc",
    "0x42a4a3795446A4c070565da201c6303fC78a2569",
    "0x7804fb2AF15bB1323795A888B09913cEf629Ffda"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 288,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x21362adc148766c37075c7da0b282e619a1bca95cc8aa810601e06c0a18ce8f4",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8983b03aa150d57e0207d90f314ebce1b59c9004d56b72a1e296d567bbe6cbda",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6d57ccf88d80a61d1129710bacf28c7a3b9c56a1b84358460207fa38c6c0616",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9635bf741d1ed0a0976f1a69ae23cddefff7f8fd2afc27387f3487574d4a650",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb59c7bd8a2c65c73b722f28b9942ad1b4fc592813b089d59a1ee258150d370dc",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x48a799ebe533f4f8bda59824bea371a504b63b3e5e4db9862d063dc7fb55ff89",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfbb7984d4414a59d1ecc584d677aa6d82d01737b2aa9cbc6c495967a7267af72",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf7ef379206143d2aa6fb5fa53f53919a5adbc57efd1de02d0939bf53d3d3ac8a",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x46f04211245965497d7a83a5a4d062e70d1c8ea2e0aa4825d7504f3cd2f6f92e",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb74a92f367df2c8844903684dc7610f73e652a5a547426db2d8c8b1b406b2cd1",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x54c26f74a8e9049060a4fdc30b678f40cfc32df4d912b2cfff4903e514a6aac6",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe3889c10f66ef686e8be5e517d53a0c7b1b37ec0a336021a06693f0a8ae06318",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x859d66657f6c3f65a054662e6072b8c9bda3ac9d4ae6d673c1f32a16f9e99cb4",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x36cd92b17bed387b7d3744627bff14526aba0fbf9c02a1a4bc9bf118d06d50b3",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc34c356b4f4373bff31be396d406e5c7c6cee25f62d345b7f3fcd84cf0ecd142",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe99b1141be0276eff43443604237798ecbece685b846070bb73835ef71a64658",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa7389316de70d82b58a90bf4bf88ab5f9b028c2e14e486a5ca8bcb82c46d0b7",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x909dc2204264d9585e45b7ad6aaaead36ae1632a1efec0a63ac59d68d0529559",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf603658b3b6344c8411cc7e6bacbf41cce8d9d9a52044a8fa5a342a5113ce34e",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4eb86d7137b60e95357e83786336fcc18a5ffa80cbab07cc7f48da0e607845e4",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe0042919ab14b566fa25be001d15aa990c9413e7c4639ec9dcfe0927dedfa13f",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x462588cb503d496c6c7953c9913e7e387ab7b0a90f9dcaf34d697cd7b6cd9c38",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x631857d3c7d311ba398e32e96d81e568da47b686bb24d79b16feb54dce907afc",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x60b54e0b3e331997be598001ea021609ce7d3850f28ce49e37dcfe8643c7e795",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x93fade6402360f40829a5d04430dfc08021453c4891166bc442232aeeb2c4dca",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x151fa445cc7608ecfd52cb85acec194d7ed745523fb23f85514d00bdd915fb9d",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcf7f4ad269914b4e937c112ef430e176fb063c41f5b6e1c43b20e2ec00facef8",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5c46216b259ae7d47d2ddae0f7dcb589fe3ae2367e9d57c0791c435f722fd039",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4df6030194277422237d79b3ca173ad04b99ac21aee83232a92ece73c344cd63",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x829550335803c6d53dceb2ed71c4f5868d78fc63a0a3015cabb8ad7bd438909e",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6d4dc6b3203db285df25a9dac0a99e3da1130de6c39a4fc7acac6988f4d58b4e",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6d5cbbc7776400c1262b77b67fe51220692e56c9b7b1c7dfdcaf157d6260cf17",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52131cf512e132fa6bc5ca75a26c1302ab2bac9db56aef19b60cf1dbce32bccf",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xca44a906089b9e1ac418931cda15471cea526e9857985a4675ff170c0b80afce",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x99b1327d339714e0bb745463e84b687e61f9bcdb656cf14d2e9b2bd152445894",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x157426dfe23d81376bb6064ef921b377427936ad034994091558ce1625d61486",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe705dbabd0f60faa305d580d0aeb6f65ab7569401d8a3af2171fbb4fd06d9a37",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x99a47b2a61589707f03f8408dfb5e0ef50a19ac3557eb365cfd55ab72860c98e",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d04b35b3b3e00ade43692db55677dfa5e500c24d0fac3583c874b127623e28b",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1865ad36ca0618f0e1fdc7715700dbc8ed75768ef9ddff1232c5db66e732f176",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xad933b912a8502ffbe9e7448be85f828a91d598d5e1a64eaa0f9d8e1fc7f7781",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x877262f1d1d97c277a238ffcdb77a4bfaadd3dc6dd3e66245eaf825a20b2fc7a",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde2164f4d4f3b625679da6c872973e629ba53b90fc2a3d484fecee482b8f91ca",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf848b811ec4bafdafe9a9a3e874f9d21ead5e51794cfa73fcb996374014b4f7",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x99e019899aa7dddb264a324b476b5911694e89a3b10a6fe5f6145d7ea563efb0",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6e902df63095efb9f6c96b1cda1b8576d3e33cec93e26ca8725185734c6ba46f",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x54e0c696a8bd7bcbf88bd6450265c5cde59a7f560b965c2161e943582bd9e5e0",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0878860684e0024314a06328895b8ea5a6328019ca25c3a4770308450cbff2a2",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6d7e927911d001315d527c29d0ab223b6f1e9eaa6ef34afd6b2d649f3e47d22c",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc8a1213460f86dd06ae6d2ad8dc8edb7ab45997c302608fa19a36bcda62ce9e5",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe02c4f15644820481a3db7ad31c524bdda16a8d2719ab6b87f47c12f4650f0b6",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x237b4a38747dad8d9ded2f48a8179bb200c0672196377fb36d55d7fa610875ee",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcd5a7ae740eef9b3de8125025bd856a35f6c019025ef004bd34cb05e35fcf0c8",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x37039ee31d689f67ebb028b833a40ee6924584556ae06e3883284357e8ecc60e",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc8012e0ea843d29f42687656ffd638605afa6bc99123a90e2b732da49a7cc120",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x15f0d04a8b320ef079ed6c356d86a1bf0b438b7df24c7e35051dedda5bcb4662",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8ffe4c12d1c38a1eb122dc9adf5af2d3983965feaf13e6096b9ea02c16f7685e",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb2d8454970e5ae07e9b737717ab5cd5d15a4d52b0ecded613ef1592b5487504e",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb464e7d354f9460928faa03a1d59f9407bef35bff5ab02b05f524256a766b9a8",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1027608a0286d78cb7deb87a346b49b902d9ca2749731a8c50e0cfd7205cc18",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x17e27e33f445130d61f3e9cb02103945944e5b12000b8b7ae964a3ebe12d2a90",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xfaf4e122c7f4f2c2bfb4915d469d4c15d50b1d6c9f3fca276078c9f522261821",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab97820aa74ef1bfeb5cae90c732bcb8f0eb1bb0d6e91dbf7ed2b08b81b1e0a4",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7a01a6c8d6fe5ec0e6832e0fb4ff52bc114678fa9a885708498923ffe49277bd",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8a4d588a6adda912749fff55cec6749a3eb72ed60dd9085f91ed2f80fd435239",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3b0d279f661b7a07339e2cffc98a522b51e73dfbe5cf1db3570b5f0f78362db5",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0d566cb38133253c5fe7641fd9477765a25948b189715a76bee5d34411bff3b6",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x484d6a4f9d2299f41753d2615b23c4a7fda71956d4609a61f0f8a9459a47cb1d",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5cb081db148554f98c64730602faf905c419ccf72a327ff147529b5652614ad5",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc811b98600503d842d83549b4154fbe2474f7ca4735cad845bdcdf0edd03620c",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd3bdc6cec664ba68c9496326abd70f4847f3562489b226383a8fd5db03008dc",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1ae0157a957f473a586264a9e86e582a9c41cb2847a85f5f839472afda33742",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa8b79f1efde32d34eda04721b52666b12f5b1d1f0df13e73ffb7866d8dd27242",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9743e16c92e36f9137b45ab13ce62a81c280761f800222cc34942bd27827b231",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x46c8603279688cc44899c0588b40ae7268a14878af8440eaf7637f5aceb3a47c",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbf3b9405765a941036895dd6e97942ce4c75daa244dc7e06c886d85666edd3bc",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x08bab06073130cdfe8e1423772a9ad378018cae70c9121a5c468a1a92f4f107a",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x02cfd916db76d27f3ea65c662176adac2ca4d56da03673d224ae3f2240deed74",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e0f9a54d124ee26962f505f0a66436b5e840335f6b26fc2dd2c03271fe9541b",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x69654bf9287211b68be1f8293bd482f39b132477afee69a50d4a65b7d5293180",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b67f2694843d67a5b8036114135469da5c9904bc6d0c5394c1ef7960ab49f6f",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0237f0b6c9a642bd7872c3877793b9a5d30153d008b649e7e1e0fe2bf840a660",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1ad88fd3bdf588f84c76e9ae63beecbf65f73341556bce6620372a5eed89242f",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaaab20cdfaa80d158cb850e3a47bb513835a28dfed0b0fb8e7e43beb5c64e666",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x27b79253078d0ca7a0e8868d120add98235ba365da295525da8b2d82b05e7726",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1e77c5283153056601207ba3f620ecc76bac2abf812d76fa24b3a8e38a27a7e1",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcdd257a3330e72512c1217b7dcc3803dd659e56b200ad9b293be6bc32dc7f6e9",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbe4706f7ca639e4e651e28465006e9e07d56fb37d4e8df2a31627f7d29e52a91",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x845ff3e41f4eb26125c9bcf6744a64ee239acd8c2135621c7ad773db67d28f4a",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1ab6c35699c7e6f09578b0a9e5d817bef919f1b4a34f8871ff1cb548f3812506",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3144109e30128d3f12aa16be6309d08273c9dd8943ae7e3e408260598a359bde",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x28b4694c230aad2432e25f5ea197d59a53defa479d435d9220c7f42ecb3b3ef3",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9e678de81f8a7fdb9fe73e586ed4a19ca2c3a627f1d269ec9dc6f4b5c3f08235",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x94605e5c743b0f8b60155c594554e370016bc7c0efa407a92b13350845871202",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x661598dbb76e6262f363c361e17b35a0a30a9e785baa18ae665f01b3a3d7eaff",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x516a3468ce43ac22675dc49404e0f6932e2a8ed13a899eaebd70e5d8f2cbcf5b",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fe9e955e39452c70b8e3f0b1b4fbd2770bd98bf9227f6398c725cc4145e0c1b",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xba0facc9493660894e0820683aa6154f67dab6282c7e652b4ec9f28d7cd6bc97",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3fa1c3ea4c199de532faac1b377118d628c94f501bb50bc9cf3e991d575edb8d",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xffe7e297b834137ee31553b1d770e9f15d6cc9402a338751d8ff0b79dfbafa42",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ddd0aad67392893d54221ec93d60a9928101a01aa811868133db550cedd75e3",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3bd41c6ed2c05f1988570ce498552fc20ba6ecc840325706dcfe647f38441241",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5e1d2009af0d959e8a74ffc83a2f557fad44e55e8b1ff74c83ebf91c6b24a41b",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe26c9b945b733fa0c925ce1a1f66b105db4777141e2f136296442937fd9b525b",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x49b7d93e255f53258f100c5f00f8a9e44d2ad00128ba07fbc03afc6c4e6fe618",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb5db4fa72fcbcb2248edfae14ba005bdb4b0db3448f9291dcc44351469d6a131",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc29aafbc5cd50e0898b4f511a190e27a9be432c5eccf3b5b0d5e99ead4d5fb39",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa4e57f9926c3e635c30e4deeff29da87ccb7aa7564ce05b8c293511080784acb",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa65f6dc32d1e5050ec57cd4c3efeb56ee542e3ddebfce650995a59743c84229c",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1ab20cbf9f7b00ca3e04d00f5835c40a8633037cdd01385d0a220ec6eb11c656",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3208361e25a8678efbe7dd2c9720c92c786849b5ace9c08d11c5ff088d426ea9",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7040049c36c73f90b53801e3264f2a371a78a07573959c9dad48beb84fdd84e6",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5c6f15ee6dd2e7c63c7365bd0dfd1bc810e202773558bf85d8e58d6147305105",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b94ef483c6ae0f3eed118da8f456d019bd7edf205c2139802f088a427140acc",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2a7a08f13638e9afbd93ff77f78a42595a46f5b9d04eb222eec46db079d1515b",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb155ffb34432873a3b8b4e34cf5e5483fb987fb9e388a9490cf5729f978bdbdd",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcc0230d01c5cefeff58d65afa663d0af9d6b04abb1e5b6c294961142b3ff73eb",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9767ae871aebe0459b950a384c4f322f5babb49e20520aace0bed0a633ea6e61",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0308b31839897ce018d1fbc916e65b59886dc75f1cad92dc60e5a5fb22a148b3",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x214e434810ab283e89da22e1853d4a3de8d4c00b512bb032977daba29bb4aad8",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x640364f2a0f0600ccba9f5a2bff0556944abff38405192d1f190e793470d9182",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7afdbc312be0f083558f97f875ff7b3c24c339627de9a917cb6b38d244a495ff",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x732e97a87619e3ffebf970b98473dac63eae90560d478f8709c80fa37de64166",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x27659734fd6ced20ff1b4d63a370960527ebfec71e7a107047f3c2037f6f468d",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x42a98fbcc25bff6aa8aa2adc1bac8d9ddcbe220443accff011b9c4e501a04f11",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x718439727bd5c635fa56d6cf837ea47bbf0972d2abba238a8ca84465a085e3b7",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x373f5c250b14c11b2f9fc3034ef088d02aeaa54ee80b990289558b7aeb5ff7f9",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6b2c79b8435e87d9f2a53dc1d8f949102e1504db5de1e9dcd45126122cd66f8",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x736e6d498523c31944989f96b64a04e4b0246e9af1089a415c142e68c12a6ca7",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1695720ed979485e0578f7cde505c6312848e80955f3f10111678d058c23b3c3",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf88373a742fc46cc75d867e21bc568823161b6b9bb1f7f83ab3087b6f018beb3",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc68791339ea7e6585caa1d4fcfa6030d3abf5e2d0a03dc20519bc3e0338a2bb5",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x66be5c90fb792216679f804eb7f51ba8e1b669768167b38dcc8728dac9d2e17a",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61f6b55b09cf34d65ccb1ac4414221ecb6712c82389bf4ebf87a371864c56972",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xad8d75092d52231f5ef68da70bdd3d6c8518af88e3fae214708b193cfacebe0f",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb0dc3cf83651af800217d66043bdc482d0aa1117bbe79b2d1af7fccaf32c4c8d",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8559e097bb5a1689ee8f394705dd8b710e1ad5b23a34b70ebd4dadb8521597b0",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaeeca944d07fe84fe8eb8aeb2f80573e2cfd6b9456600e3ce77ab70cbe46fa89",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf60fc16ec3455f6cbc75e56fec475de8babef8ddcd061c1f1579b4f8db772846",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17e832cd047ff52864922093ebeee0a088fd4889a1a51354603c7d73c92d1bc8",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x29de1488f053bad99fa943d541e61ff686055dac3ceb0dd48dcf50f505747c9e",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1586734d1b158b0056f6917bc7c24a9d0e1a7e4746a6d8cc3ba4ecbf0bbacc8c",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcc49923bfd61e1ce3b39f621360cd5efda0c7a2348b109bb9781ae2eae359b74",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0ac14e9e092b533b23783e04ada62b7e36a646bf2d6573f68c21d985a6fce4f9",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x53126174f2d0be3977a621dea923909e62177578bf1e68e2782a3242d295a7e5",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3039c6797f49fac830ad86e712425d382f35bf03d4c4cf7b81654797b0dc9c30",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x69eae630075d67fcdba529f48c8d33ecf17edfd8df72c4189c50c5a3e35064ed",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7f084130b9b5171b3b1b263ea9233cc11d9aa987b5dd1e234276cd169f5114a4",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x06d1fb48b9912a53374875c1f4ca2bec54c8e6c2b2062646fd025ef7eb155ffb",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x07ea5440b5202db7188e274b1b740e23695208f97358aa1bcebf21ea8dbf13eb",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9ccd5ffb0f5604b8042201df522e3f889a4a622ac40aa12edb535761b443efd",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6090e1bf384f7d2357865ac4026789662025d5eb7ac20ebe7b57af777f6a5626",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x15e92e2eed47f7ac71a32ef26eab30da8c35da8cc81900790f89e0d8554693a1",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x79491b3516ba696b106b414663974eca68475bccc8d0c43864c0dafc902acc43",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9f4b453962ac9d2540ae042e8fef52030fc7cefeee5459a43a383e05483e7303",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x528f6faea4c9f52c99d0b2395c5e443dcfb745c8ec829b0be9f5de56bc4e6827",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x12ea842bea3d2f1dbcfd23019d37c49f2c68ddb4f4e9e38b489e2df36b10d78a",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb4519ead8d97eb9eb8b41516afd3c6331c86cc7eea4f8c62cae69c15ed6fc900",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1b0283b2952cd367a48ca08dabacdd019f4d712beaf5d08d585a969488e656b",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf920a2476e4f1b22411abcbffb6589b471a900bdfdcda67f240d5b126de9f0e5",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xecb68398486d1584958a33074f60c70bef1a3fe5f6526c84240ab540a3506197",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1f85d881090eb8757d36e34b29e5d9f99c39572b7a37d97d5f618de68dc25b58",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x00b8ef5efa26e65d6c30f0f4b7e7449cee069ab6aa4d0c04584c8ca5e994c575",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6c1666cf06f4d2af9cc108d2ea64853c5603f7406f8e97681d675827ada92067",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9bd33d35d6d845eef8eba6db299943067ccda9d74f6bfba811179b1536152d08",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2f7f6afdcf91e1dabe99ffda88dc20e6956a62c28fb8e9c9616cb4da4c3365a4",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x545fe8803d85cc3af3f94ddb24beea414703d02d376a10f827ed5d670b3ce690",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb4e41dc612c1a0bce247f24cbb5a9dfa853df359246886b690c21938f2225bc4",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x60a48d557d19dd4ab495afa3188eeeb1a84791d3499f55858cca3808b518eaba",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1c037c2a3d9a12135574b6813bbd67da7b9c63db6e0f52378fbb1d34f4eb38ad",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2fa267986ffc889847e663bf25a603ac33c82078bf455f3002c14a62866e731b",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9f48ed2ccedb1997b43d704cedd805aaff5141c9f1b2648d0751bcf79022daaa",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x70ea3a7c554fdc724b84a06400733d315288268dbb87ad265eddb7a385dbb84e",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5908b4c2713dc2e0f9d9c5f3db71d90b672e737627f77899dfedaf18b21050e7",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbae0c23c8bacb5e0f3f35520d20293b9cdce5041618239a6867db354ba64c0bc",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52a30c4dc517ab36ed6431fe844a2ca7009bd18ad5ef8871a581be8d2233c46c",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb964cb4e727a8825edc45aca80b00e677d58e6ae6a44832103c55d48208b4c97",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x60a83b2cbf48353d02626ea3a276995b7237492d641fdc51b37d8fee0f6102dc",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x11949198ef16b40275dfe9f25e7b41de6390a55ea529c55016bc529dd7f0935d",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6b17bea4988650bf674065a5fe6dbad45f6edd7114f421885f3e4ab2ae1edf85",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x87390a6f70ff42de98ddc2ddbe1ff6a19f03065d3b719fb189a849e80c53558a",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8c24472bbe00ddc3b1347ca8a18993d4773337f1f1e998b8294d1c2d5ff34e03",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x805c994ed470a255303a6053a2a6c29a1dd2e5c0ffd6ef6769ad2cd87ab57430",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0fd1717f96c02251847b3a710240bab2f07bcdc0ce2c486c948bf2ebf40e769d",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4b966e6926e53a61d6944052849ea182a33ba6a44261c069af5c92272236c9ee",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xea0661c0c376511e61b940add055c293dd4317a4632c247a592a17d045c4c396",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9cbdc38878a16e242210cdefdb77f289dd46d6586afdc7912d97bb363308bb1",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf3f2f988f4fd558663f774e179188115bc256e4f6d14a5b4db1030e2522cef2c",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x334b38e9e7457d68bbaa6e2118b49207e8dfd435feb5d2043d7e5ba06357c632",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x498c1227ad1db8976c75ba8f84a323bef55a847b3e6aa88a61cc84abd063e7f8",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x678489676280682eadeaecbaff2865563a311f1bce20a2c2701a586d1b0fee70",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd137a343980bce6713ec54b97b755e6781efe19a1e21823c97531c74df55ceb3",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x745d77407ea132416376ca60e4d8953f5750ccaecb732cdfb1588b22d0017b3a",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1f7f68b95bd047afc847998262bb417f4249d2560cf6f60a19b0d9f6a5701b29",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x11e4a95a9c8401e638df26be6c52a23bdda746a90dc7ff23c7a298da39ae7f7a",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9da0967387a6736572e419a4074a76905b5241b926bf2ede436061479f12c67d",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x878fbeeb03e118cf1bd5ba42652f1a7f341e701a4b69a617ae22bc313d59964d",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1ba0c7ec8308f40a8aedf227442a2ffa5603c357d2ea31c744def7dced76a1fe",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeb26ef6f55816ac2c1d4eb5f0a975a0456536466ee793c603bb986fa55733772",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb5fad44e5636b9102a77699502633c16a0584e6dc3ed2ab8b2f8c76b63c23694",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd8782bae0de757635062437d2abda13cb8e2a9b19a5c567c5b909c36dde2c93c",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x356e67407f4c48294870d425f0cda6eb8396e1d59e2dfe4474468cce5a13a14b",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd3e331ab7643accab8464510d6c19c7efe4af6892e8ae95cf78c25ab5ed94cc1",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ae8ce270e828184819158fe7b9573884b4903dbf0166932bd6aae872ac7079e",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xace62b220487762120447658b4b95818dd06852b8d6223a52706a3e80392e976",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9a91a6305dc3b053b726b59b61b47052ec1fb96882f8fdca81a32943e50ad808",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdfde2e097a6d4615041c04f8bfaf942596d61c97f423976a512accd1130a60f3",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd33a65656de2cbd3879789b3a4143dcd7856aa494bfdead5786beb396f2de0e4",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7ed034cc7dcce6315634518d6fa3848cf56828950b3e21b86fe6c7ba0705afc2",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x80ad42f91a3fdd05bd08d78edc0e8c1d6f11ffe4ba5ebe99ca864e9a8c4a6902",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1fc5924c38860d967b08453b1ea25c61f700d0d660610680d040a4182d687a9d",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf4c0952d0651def8485c71e7c91e9931836e51d1e1182739fbffab4e590ee9e4",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x11225a3415d3bd5f82a430ddb131bb2f848b685f445e60f4872b2aef145654c7",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9c49ffbae7fea730249f34c67952b9bc0027466c869ffc1429dc2e9492f6f20",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xebc60c9a9a2aecbf3fb7f8542dea2bc4d6547e46229d1ed4edb5635c73dd7040",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7ceb79cdda3a9584d148e49b0a402a01f4f8179ca47271ad6fb7a13e76841c11",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcd72c126b1a27778f41d522614177cca6ab801ea81be62fd4266a3ac31175874",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8720c13f4b477c9b781e0f73cb1f8d7cfccbaa3b142f959d0c441510f4166f7d",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3bbda068067a5187cb790f78e8345e648b8fe944334bc0d8ac9118b98560f2d3",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4924ede6776fc3dcade996f10aed01c8a8067a50743a5408b889736372f1dab9",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7f964afc508451551375b3d39c6d44714bbe0fccb7c9eac5faf4eff75c6a7678",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4dd8953c25f878704dd714509c3476fc9337d2dc04bf921adf6e0597ec055381",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf0ca22c8f25081ffc34e5eedc499f9eb68201060550631025225cdb02905c711",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3e216f7facc2505621fa9afdf092ea67b1ec7855271358b073c442c6d56f1d87",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb5ab4b1e06cc6dde3689fba3e6745def2e5fcec2f352001c2cc2f8db60979226",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 315,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6f0be81769d6a82f3a78cc71b3a404af085f63cc08120840e9c9d92b92b17696",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 324,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4d7136d8092cb631fffb47de0ce5a434c6200d2ea9615f9d659ceadb793478e5",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 321,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x15b86ba231b575467c1fdae6206c19ac6d5a0fcf569249eac61eb1636c7c2f16",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 324,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x64645e93edc9286b452441a648077d65f4c11aad362e42803b35da3b39918479",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 327,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xcecc70e3f61114dfdbdbabd1891c7f5451bb5c0231541cd7472ce1235a21cbb4",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 330,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8f9def428965fa25936477ad67f8b0da857f584ab724bb036e48555ba14e338a",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 312,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x504be1c3b6ddfbc1f2227a6e63382d3a68f943b7bf86d918d1f68ebf968deddf",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 315,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x177aeedf4232ab6a475c7ebf540aaf9ce05555b18172762de98cfb9f89d24c30",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 321,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0b84810cd48c378c47e3eb81e66e004a36f99f0c89f71a3313fd6a101c87ec8a",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 333,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd799e826c9377704a5d8760ae7e57128ec019a8f1c37efdd5022e4b1f070f453",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 315,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1046191772786d483bd466b3c8558a3cb6d474c6c4fa6fe7bec53cfe8f9d20d9",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 318,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x374fbf5a771d98ed7272b7b9709556dc8d8515728eac2efd40031cee3fc57add",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 324,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xae48e1916b41449d98ff94fcd6b70d98bf84c1b578165b48c1a76a82cc9b81ee",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 327,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc3da5c871158dc60cd959bc72ef7cdd6627635e4626fda4d0e3830988dc76a94",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 330,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3927fe45e2931237deaa1987919e2924bc3c6fd338efdba0a307f06f2c241bd7",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 321,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8473c925412b01a7df6a9cfa6ef8735b8a2813531c8084fb1a2bcd735db89ab7",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 330,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa0101088b8a1d9b3db5befcba5662abeda793aad52789e9ca16facc88ac533e2",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 333,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xec601d8ab0dcd9cc838f40734603d0c816678e3815708b46b75ee76de3519160",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 330,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8b6aa85be843733f482e9797ab2f041291c7302c0c4c789fa15ed95c271b9f7f",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 324,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb2b590287b6e8c44847916baab7c8993454982ba749e80193874739e0f38096d",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 333,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe23f3b7c60b02ef7c52a5d53318fdf13e0df23504f0089079a9f57506f3fa897",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 324,
      "size": 6,
      "price": "32772000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x564d1e47203be64762eaa19949d6c791fd9ef28fd0cf098e407eaa4a2068382d",
      "assetIds": []
    }
  ],
  "solcInputHash": "b42a863a795806b4ea3a8f05dfa42539",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c63430006050033",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}