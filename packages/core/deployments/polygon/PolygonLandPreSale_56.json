{
  "address": "0xbe6B7c27a673b92296017be98b3E84d93EAC57F4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x411175c5cd06525eebfea4124d7d628c515b9c12e0b85229b6a20bc40b87bd30",
  "receipt": {
    "to": null,
    "from": "0xCba49d154b4Bb9a9aD7F5Dad396CB9a0a3a62ABc",
    "contractAddress": "0xbe6B7c27a673b92296017be98b3E84d93EAC57F4",
    "transactionIndex": 69,
    "gasUsed": "2668417",
    "logsBloom": "0x
    "blockHash": "0xe487b492a8205ee940265680612dd310e9884728b130c6f51bb3f8d8dcac64b5",
    "transactionHash": "0x411175c5cd06525eebfea4124d7d628c515b9c12e0b85229b6a20bc40b87bd30",
    "logs": [
      {
        "transactionIndex": 69,
        "blockNumber": 55396198,
        "transactionHash": "0x411175c5cd06525eebfea4124d7d628c515b9c12e0b85229b6a20bc40b87bd30",
        "address": "0xbe6B7c27a673b92296017be98b3E84d93EAC57F4",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000bbba073c31bf03b8acf7c28ef0738decf36956830000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 544,
        "blockHash": "0xe487b492a8205ee940265680612dd310e9884728b130c6f51bb3f8d8dcac64b5"
      },
      {
        "transactionIndex": 69,
        "blockNumber": 55396198,
        "transactionHash": "0x411175c5cd06525eebfea4124d7d628c515b9c12e0b85229b6a20bc40b87bd30",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000cba49d154b4bb9a9ad7f5dad396cb9a0a3a62abc",
          "0x000000000000000000000000a8b52f02108aa5f4b675bdcc973760022d7c6020"
        ],
        "data": "0x000000000000000000000000000000000000000000000000011d891e929aa16a0000000000000000000000000000000000000000000000006360a0b7c111d3050000000000000000000000000000000000000000000000e913aed73924a103da000000000000000000000000000000000000000000000000624317992e77319b0000000000000000000000000000000000000000000000e914cc6057b73ba544",
        "logIndex": 545,
        "blockHash": "0xe487b492a8205ee940265680612dd310e9884728b130c6f51bb3f8d8dcac64b5"
      }
    ],
    "blockNumber": 55396198,
    "cumulativeGasUsed": "15765828",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9d305a42A3975Ee4c1C57555BeD5919889DCE63F",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xfD30a48Bc6c56E24B0ebF1B0117d750e2CFf7531",
    "0x1b47567CBE36e63293A7A2018F79687f942aB24C",
    "0xb7bab309ed78f8bbe73da6ccafda210b50c2d6f4d21093c263adc275b3147731",
    1713528000,
    "0x3044719d139F866a44c988823513eCB93060bF1b",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xDbc52cd5b8EdA1A7BCBABb838ca927d23E3673e5",
    "0x42a4a3795446A4c070565da201c6303fC78a2569",
    "0x7804fb2AF15bB1323795A888B09913cEf629Ffda"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 297,
      "y": 228,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x87c42de910160e24ae73c089cfcad9998d9759781c3210879599161df5023be4",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x13ab584ffda2311ef552a194a9fa5c24f7e769b379083e9e5fe748a555c7122e",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 230,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf3743e596c052041ade03da8ce2301c99e927125c12992f2542c5f1379bd724c",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0fb1081937b086959a5c2d3b8e41c6c7fca329572a6ff14d2648132de1a9bc90",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb8cf470dbaa74cc48f27769e99ec0d18730b9ec94386af530831d87571fc2dec",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x78d01a86f59f0f66d305c283aae80b08fe31d79696b027a993ef8d8d1218ea11",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 228,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbfb413223cabeee111e361279cb8f29bc2500517a9422e1319a829dd2a467449",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x326aaf6849f932c1c25adcc78fae5dedfebe8df8cbb2542536ac90fc1d07388c",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 230,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x25a0e83731a999fdff28f078aa23d092719ca03d0d36abab9bc9b33fe51e255f",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa954efc8277aa8683803b71d23eb392bda2da220c59209e82c6217bc9293a64b",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd1ff80ccc719d3c94121c3709b46f1e6bbf1134c9157cd3630cbc8cf72660e77",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8fec0e0d3e2ba126e12785add4c09b47525324d4de5fe58b586b5819866eb500",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 228,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe35af5956804a92287416f3dcdbcca05d4c3e79644de6bfcd54f46c7adb17bb",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc41e1c707aaa55e0f9435728dff5fe31a06320f0c22945536cbe0e223acbab8d",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 230,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xedc95deec85ed297f996fcf9bcfb2f0f03d84608a927b95cae8bac11acec88d2",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb0582e0da03987c24a2e12d53498bb6d56db5818862a42df58a6d3010742baba",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a3589cc5f709286dcab12e9b7bfa9e50014b74aee576e9caf297a774650104a",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x29c1f25e8f773c9416bdf383027e0311ce61c572ca85715054402082741f0951",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 228,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8a62a01fe62d279ad92db09946aa4715c40b9483cf64eba29c909067b4f8b066",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x90fd44c87b75cbdb8f253f4ee1cc092bc9fead9e8ee6c5631ac4397a7f4b6bc2",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 230,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd3aa5a892e3c603454a20e6fe88fc65767b2d1f54ba0649e52d94e07deb05d55",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 228,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3a12ebd369a27fbfc14e28126d6c5c5047cdf7c51c7d3828c9b2d994135615de",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1d4b9923701587034ce48291bfbc14e896497cdc468fedb6eb5978e7c115d899",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 230,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x06e1e2140047ef255365cfce3634e2b0236719ff83f6f246bf65085eda038791",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 228,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3b2983508aab70eec9890b8768ce6ecd62d7214ac1d9ebf02cac341ed9d85099",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xcdc268cc503581f0ec122b3c93d36a78c22f532a88719552fba0b5c4112da70e",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 230,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ea42ed511d056b39ea6562d0d54d794b100efe80b2f3848e27b796f1bdee836",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb8dd9357f7c392864b8d3f9512b95cf149e7116e443a59fc608641246e5d676d",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1f6da8daed705f78921090a644011d0cd2c2430130972d00a6f49ffc5e51a19b",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5921ee1b83607911d3aafec1051d084d0d0e0f7856ac78825e5b369ba1c1c9c7",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84711679df6cca045ea681f25dd55e6cab3af0c295d2a363472556790d7cb51e",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x45f187db2416c465a0502735bfe5150b10596a6bc0fef2c4a8abdbcbf4d1243d",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7be1607bd5b6feb3ec5207c0ecaedab8d4543fe0102d8b47eda787aa94903935",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdad18e104b4dad0a6fb34c9e933ca02c57032b70e5cf1ca6b6c2e0fd67aa7502",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 232,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x182568f64f348c7d303b30bb5cffd4ba203f408a56230cf8b7d7cca1a93970ee",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 305,
      "y": 233,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf488c23988879153f98dd95a7c49e64e6525020543953ea5411c7bc21ff22412",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 306,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe9341a259c149a572df7caffdb54a810c457612a149ed545f6654e6e20e2b31",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x28851cac4f6d13285dabae0096dfe6de30562e623ad2e93abe459d0982db0370",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2406efdac566eae426c6a046cf6f1a18254ea60fab905f5096b95f8e36a80367",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe35e7813cd2aa630d839f0ccffaed20514db6eae2013ff704daeeaf6f64f700",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c40375bf939840d581a10967b3cf85d3f7361f96b2ef622868364f4dea6b7b9",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0c153d9e6102ea39cb01639df43939ab658755ec9253835c24c1fe77d9f68e21",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 227,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf22b1e654f371d1e014c30c9696d7835291ce4e8b74bf03edd2579097170fffe",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 306,
      "y": 234,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x60d1f6bb130831d14c8fbeac6688ee6b812ebce27e212109071dfcc32c2f2d9f",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 306,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5f3e7884b46db33ef957a04c9400804acfda6384279cd4534361fa7732a312ed",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6919d9738b2efc1927995c20db546d54bfb5fae7912386e66ebe165e11f547fd",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xffd5d06c9324776a32e00e39a709b539d8c7ac2feeab63cebcc6a75423573c43",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbb396cc5456d9fffd5019faf3597b15b8733ca71e85b000cdd212361347cfe43",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa23b8ac5ea76f812d5cd4d316e783940e48576a9030baf8151a4998635df1f2d",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 210,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x78dbb41238c10ab858fba8dde4792ea484f5a2e86811e153ad70e5be3dcadce1",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 211,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd35418f99b9216aba3db21d223fe1f2a2d0d29e80b1f95231bdcfded569c4bc5",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 212,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x499e4fa0138924782debf45372eaa3ee7e4fb642490c307044ae9c43dadcd332",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 213,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x886399c6daf518a377aa7de59e23357a614db5c139eedfb8f6a542ab26f37365",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 214,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6662e342b5a774fc071289cf86da265c8a8cdc880a3335259015fd305ab8037e",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 215,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe900fe2031eb509ecc914c14e3c4993927c148cfc95c560bbcfe91c6b7857955",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x877032aa573b325e17eff658bf0a4d3b915eb61d12d3997a315f2c5d8a48afd0",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc0c612134aefdd1d8348eb1226fdde333131f643ea1e01db8c8f7ab79a2f561a",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8fd5dcb651b0b347a76048c7efeb0f609aff58479bbeee5fc63ff35e5aa8d244",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2410aa1772fcda0e5f6dba44259a99180ed364db6781e8328c90fc91383732ca",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x131783402876a05f436bbd3a71587959040a942fa20fd7a872562a2a33df0480",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x20ab0396aa7b1c6578dffa4d2ecb2901951d7a6dc88c18aedd38c3a4278acafb",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6ab61a01ed1de4f9ee98d57b012d2982fb7e937ad6deb9b472b757fc8bf4cfe3",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6e2dea381817dd224a55b3fc4f1d3166407a9eb009310c31b7463210e1d39004",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 227,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x72a2db6cf784764878e853849eef0ddf37ec39fa2a60cda08b59baebda62af2f",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 307,
      "y": 234,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0ae5e35244f1c6b4b13ace16450bb7b9924f4330adbeddf433ce23704f5cfbdb",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 307,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdcbb259f33639c9731ac1382c0f31cfa6d47304a2b0fb58a41e2e3e7c0f15579",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x42a4bd27f1a52613f3bef61dca36c910507f6bf82952fb923b25af7c5a00e9ef",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x20137e93086380b5078e96efaf29e7c5535585c8281dbba909290d553035f570",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5d1ed746f27a97f979379258f6d60dd30fb47d3a60e2ba2644e24afc3a76dd96",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc0c21a95260fab30a1a091b730954cb6178312a195a84cc311d2602b6b34ba74",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 210,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61c0f89d5a1694f276a6d2a5ad6721496e2bc0c87ccc93a7264a91e507db3847",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 211,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xadae7721f91640b8273ccd792e19835602ac4bf4f154fb44ca988560a5da83f9",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 212,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c79c20b9046f3a3ca4fbf3613bfa71a09dad049a6fbf81d36f35fb7fe9d35cd",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 213,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xfd01d97e36fa78a862c091e62c1c17a60c5766df9b67bb5dba67f0b6a71dcd81",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 308,
      "y": 214,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x382e01d86dc7bb0a54ea3bbe6d270b5f869605737451fbf3a0847583e46a1584",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 308,
      "y": 215,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x590f1a5f35eb7dbcf704ec69d650e2a4d14ee36cfd065e902bb8064f844e3e9a",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 308,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6a0da625f57857235e969f61edc31eacdec8b6cbade8d2dbfbc277c544574dfc",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x22eaa626dbecbbceaa5be0f54c79b5d8d3ae55ac5892b531fa9c256e389cdc10",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe5a8a002fec59d672845112b402f643184c66e41998f59f77f1e5b027a30f168",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 222,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe98512a6b750f700d6aee69f3416fc7554a475ebbb1398355181fabb54f35e82",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 308,
      "y": 223,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd7f22461909b02184303239ac1d6034dd018649484c92271c2e10844c5309b74",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 308,
      "y": 224,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb046fc733d920b1bbb4fb91254709022a85508173940f1e05facd4f4f916d5cd",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 308,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3ccbb29fb73429fee1ece204e556d7e7dc98479d17b67fd835c3589ef6c124f4",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x88de6250665526c4a28f75a65686cae01bde04593ae49e1b1b41d09dc79f2f9e",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 227,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x84a950cdc8150dd4c8895ad163568ed329501556d013a4f31062167cc1b8e38d",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 308,
      "y": 234,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xbe6d1f2ed8d5f08c92517108c52ec31435fb5ebbb9e8f17432e9358d73990bc4",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 308,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x726ae02c044a278546209c991d1d3d571f14cd01280cde098a9e7fb5c12e6897",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5b63d40af0ee8ca71a4fd55391e22b0eea4f509f3a400a58917eabaaf49c7ac",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 210,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x96ef114135b7f61705722aa305383074f7fabe3a75b35f472dc71a67826e3c90",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 211,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9a36043fed1a68635743205550801d5ffbaa4372b05638210d23d5ead8afad9d",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 212,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x639a68b50cbf9a6003026f84a4f362b54d5524902bf00ecdef73dac905f558e4",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 309,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9c0b29ac3d1b5ca49836c7f93fad9c5718d3c0319a7c0052a6a33ae85da2cc19",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 309,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb5aa4032101154c65cf7a2889a2c38086837a290e0fbb4f9252eb23bea00b7bf",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcfbeb5f6e15b9ef449de47d0cbf157f109281fe5c3ce807a6f7aef371bcc6933",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x477911be309f0a311f793b9e56314dc38115189ff832e3918e6ab44236704e0f",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1b763f8bdb96516f0ee19006921a3aa05f4a65e4b21e20ebf05feba681018f03",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 221,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x699e1479b3d1f44d96a17af977f84e3baa3da9bc35c876fd018d75b6d5f5b571",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 309,
      "y": 225,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb65e1056275f421b591d64ec31356320e999f05c20d742cdddb43247f30bd593",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 309,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xafa053d95b97dd0da25b75519c710f32df597890bd2c06053c8952b967218f27",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 227,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x57200c1381adfef4f3775805fefd761358c6f0dfb9e4eaf260438e5b76b4662d",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 309,
      "y": 234,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe055e238f2d3f4c7d64573be1486b1973bca5629ab918b34604598603ddc03d9",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 309,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7995c3bfddc2767f3088f3e037074e607a5c94945e21ad2f90cc0df3b3163da9",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x80d2b17b5d8de0af950e0775553e8b44fd2d3e6fdf0d90500ae098fadf2f228b",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 210,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x70139feeb193894bd9ac7672fe8c8890cae7ffd9aae76fd0e5bd408204e9ce23",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 211,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xffd7f822509102ee9c8160518485c3b4e4f03ec5e79c974e65848726cb3a1231",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 212,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3dccc096058a37bd298c61c94095c66bc1c9a2c5686601d33505dbb5b9963609",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x299e55ce98d4113aa5661f6bbedf2cf2634f2615636ff6386903a8d0e19e49e6",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2560f94a893b80bd7d1080e08ee7975b72c8c935b4706d0ab832dbf3a0513229",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0ca03373648c8881544cb2928dd4359a3339681fb8b5e20219dab9ed56cd8ff1",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x225d56c183807f6b4339d3fe62029480dd937ee6908985993963235ddc66539b",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x661cc3c2976fd9039643430b839251e459f73624967d341d0057b1ce469be0d1",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc6912dcd75bb5acaf8454a74accc9817a9aecc4f44013c9c755c68d7054300c8",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd21ce288410dff372d00ab81c37d52fea4386e24b438e6c15b4bdda320e4a9f1",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a1709da905d60af0fb5f07f02435d73c3c61dcd2aecdbed1f062aaffd2cfe3a",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 227,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x77e06484ca732fc324a69410477423d45c28b9ed14814f1acf481fdf04ebb46e",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 310,
      "y": 234,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb62a3c43bb996e2fca78b472f6e2ec6f5aec4ce5ea183a37289150cf857b08c4",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 310,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf5a15b1f3de551c111faa8c7f7f0ef1f12bb6069bc464e9e97ad0af6faa4b90f",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x92cfcd0cd9dba28b20639b76a52d004c8c13c07fa55e7668220a738f8e2510e9",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 210,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2e73406d8a58ad335b82961b183284328dcb5d1f5966cd6c37e28ce444ae4b76",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 211,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x295e05d04a54fc1a1341b97c928cae48acd353252842f5c1593c392d26923bff",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 212,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5659a73a6c7909822e6f672307b2a04daaf3bd8166da1657769f55680a3c8a30",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 311,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa5427c98082aa3f4a3d18efdcf43a8ae1300f5577e7287667495d7ff08f79610",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 311,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc0578aff38f2247b465b17ca7f416496d2b196ea82d1dc0ddf7a728e7265fa0b",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x146ad2f51c47ce528e1dc61c2bb34d7b34b6ace2b4e06cfe103787ea6096d5ec",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xba5985d0392bca90c3b8fa690247cd77ae7fa0004abb00b0335e1d8fed15c178",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xced16b8183471c05573967bb7356ab601f682ab6401fdb2558e38be4a09efdb6",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 221,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x3f6ec64b78db23a5e76624d3546872c26589aed57a6197ab0206bd94c47deb37",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 311,
      "y": 225,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xee1daf588cb721168004fa73c52bdeaf6c533e07c9bb944ef5e6cb9b7c1527ea",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 311,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3267dde9ad165164cadfa8a9df523007654d81d533bd8d9587f86c8f300b804a",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 227,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4c0cb12aca2db31a567762a08e29bf935392f1aa64f003d2c749be39a1534b7f",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 311,
      "y": 234,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x73d95525bc7a2e1b5be435dd4393febe6943d9215252a4f6ab75424936e7a138",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 311,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x813ee85ab3ba72aefc3bc5961105ccf1fee667a6cbe1758ecca3ee8562a3050b",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0d132df82fa9b59427ae8d302af5514918e11e3d1d07a02de1d499a5377c738a",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 213,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x10aee00fd4c9af7873b78d03894a1b47fb5c0b34f2abf3d6a594004622d878ef",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 312,
      "y": 214,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0a997bba5344b448e81ee4fbfdaeed33328ae6cb08930e60489e667c02603e6e",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 312,
      "y": 215,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x26681c907292f93a6dfd0522f37662c2b6a5e5bf194dff51fb438d1f48983944",
      "assetIds": [
        "24622070780346396905083165524192631889081011796593360330",
        "24623193213603867038524345954144157994440107552786365898"
      ]
    },
    {
      "x": 312,
      "y": 222,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf28c04116f35b32bb3e0eaa493e11a1211aa10074c7e3925ce381ef1d8625fb5",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 312,
      "y": 223,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x44465f76a1df6abf0a9ae4e3978964cd74d40c455cf39425089ca663fa0c70ff",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 312,
      "y": 224,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8851d2f5597d1c8381831455b4d3a3090d8ed0c53fa15ca64ff05ffed6066cd2",
      "assetIds": [
        "24622444924765553616230225667509807257534043715324362186",
        "24622819069184710327377285810826982625987075634055364042"
      ]
    },
    {
      "x": 312,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd0246e2d5498ddcdca2ed0ae8ff6f0140fe334ce3d9baef60bb986869423163b",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc95be26564b169882182520a69d7c6788cffac26c3882fdb38f969342d95290b",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 227,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbf6c7f2248a7faf0f892a9a63067d9f5fbf0580bebd6364883317eabd472916f",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 228,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb38d87a5a639fa250d6d1361f8f2cfd3ff5a4494a9abcd7562d1b7912c6d7ec0",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 312,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc1a1523f2b8f2fb429907f1b6d8877109df80481531d8f0a57a2ea0e202918c5",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 230,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb9f138685acd066a20e03fc7c0ee08208d577b40e4a2f1934e807db0b098272d",
      "assetIds": [
        "24624315646861337171965526384095684099799203308979371466",
        "24621696635927240193936105380875456520627979877862358474"
      ]
    },
    {
      "x": 312,
      "y": 234,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4a8e7d4aa07c1b44e31e401bc75fa2c15bfc31b712e7d268b7ab5037eda92bc8",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0f0b4a4af91583fc839678c71eb5f050b62588fc88eb6b0ac320f023e723a2c6",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x83cbff96d3f6a2c29949974f6d253b0f4e7a26306beb54ba24a0a6444c2e124b",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 213,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x79608acfad26b6213c87b02a75b9dfacba85a0e6b9f86f33d9d2ac68ff0e11d1",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 214,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x77dfb436b9bb919b151526eaa6240113cb697eb75db81752311e8e22f9e68f4b",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 215,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3c325fef5dc0c34f99fa16697273082b18797183164f2745fd25583615e552de",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8ca50772e07c6f9e2ea67a7c40fc4ae26a41b2421e1f9d34325b1b9882b9b96d",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1068ca278694cb59e987d33150706f23c4e9dd2c7940f229f0dd812bc5cabc5c",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xddf4d60446d202ca3c999f3dd4f1cc54b62041b4a0d7d3d252ba88065ea042e2",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x30f493de9ce1e713736630ab76f09bda2c7b3e1b2e80b3c916e50ecf0e403ea3",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbd5a959454e816934323b6d773c3435674104b7015bfada94f15d2d8f5dc114a",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 227,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x78979b74ef1d36151384d63aefbd3f96babfcae136d3a37c89fafe113fe5c23e",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 228,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x43e2078cb69cbdb073d1bfe02c78ef920ab7f7d9c1466c436003d14bc61b2921",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x74904b9daec1c4d4c345919ae4238c92fd2b457188a75a85eb1f2041d7dd322a",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 230,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3a050e091640f901e6cdf2058591432733322dce48ff606bc4dee0238dc42e68",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 234,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfa30a0d9ab2daa773a25af50e8b07b4e2cf21c014d8d1ccbf2c82debcdb9f710",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2d0ea95fbc9eeef3ed58944c476df087e29b18002f1074a7f72d60849d2b2430",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb2582f27f84536937c92262a06ecd90c6611bdf07427a80f6c9b8baacac3ae2a",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 213,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x97a05ace7035581b3486f1640203b571fe6f61937c30feea4b1f191b043e5e06",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 214,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd39540d0115b47178ed8c672ed7511bf4226d739a97931720d25b99a53dbf204",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 215,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5700e94a95b44216e6cd44d2e0f1784956c0b863c941c646567c474dc032fdfc",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d4dfef3f2b5427ba1d5745b6d81a2e279419da461d60c46779256caf473817e",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x29b8d7c303b213af03749c90ed8c31d59ecacba17b97450d2fdf468f3c4883b6",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3dc1984fe78c846a3b5264ab7d21d0e9704e4122596b3f1eda802615ac00bc9d",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc40f5bf6e1bab86dcd774776426016390314c748f4e4c0610b2bdc02bb3a3440",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7eb7f315902e9634610e9df715459874c64e117098a67059d8211704dc033305",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 227,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc640242b084d0fee4cdbeda0c8454e3f2ee07dcb492ae6e251533582bdd08a3d",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 228,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdcb3ab676f8b1b01e9df36e1ee2b9588d69117dee3966e6354d9650e7d3e3a69",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 314,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0ba61462ca10b5de64259551c0aa4e924607b6196b1accfb781ddef03f9303ff",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 230,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x03e74e547ed74817ce69a8bcaa745379305b7eff351aa6d790ac5a686c26410c",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 314,
      "y": 234,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd0d153a5b2f441ea61eb30de889911a0509649e0f2f0de243e7d08e0d5d166a2",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x07956fc284e8eaa28e350521bd7a702e14ad3a12c8814a76d66edb6adb1a2d49",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeb3d06c0a53535536abb3a9880b9267be8c5852ffd5ff23ea041b26feeee0c70",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 213,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0bd14d3ca43cf8a4943806b28231f9b869105677752d67b5e016d2f33d61d88c",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 214,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x15a0e30b36ad4387df0e987352b622acee0bb35df30330adc601743ebc1d440e",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 215,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf840f004b58ab6b11baa86868a75019faf9a9a97129ffecbd0daccacf8d4de5a",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2a319eba940c824831bb1bd6c4ded2cd81eee28e56c081207350dedbf04793bf",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf8db84660315194f3292a5d907d1266f8b9ce11eea497bc6f6e1f794710d0dbe",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 227,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x120db39ee30d24ff75ad7a2e71a7b92c28682f4ee58b712c8db12f45af5046cd",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 315,
      "y": 231,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9fb801c4926db8d6122e05b4a3e2d786023c037d1ffc5116bfeff8280c794e63",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 315,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd46e08a89daafc091242192499c967e2ea7d2f8aeaf5e1b68043a07ee5a33814",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9822562d522769a5e9a6487bdbd0945f212f4879698f714d4022223e6bf949ea",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 213,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9048d740c5b067d0a49b74028a582a91bf831c335546c97a1d480f5895914f6e",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 214,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x187c0d5504857ed84d7c65b15d2ba1b59ac38fb44878d3c29cb474fb21d9a110",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 215,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9cf6ba0144dcb1ec162032af0f747041863b3a2c2521f75158b40c5117b30cc",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa5c931d7ca198fd5c77852133e344f56ca9616e710cb58b650b64fd284c54650",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ff69918df1c869102cc21056655dda542891086fec491c3e69f5457090432ac",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 227,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xede666c04d8ef58cc8d715447e2b3d4bb5c124a5981be2c7be961fda620a392f",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 316,
      "y": 231,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x45e2b1f223b9493b5732a4dcd3c64512e282d5a06c0cfe2da3100da79f3991f0",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 316,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3a2b3770f4606499cb88bf69ba5659fd258f0a78708dedb721766437ab372dd3",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x100b5f0061d2ff1dcb63b4b952e27cab02424e54363c9f22b5ad122317cbbba2",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 213,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3c11644f8890f668e7b773c4cea9fde75e0760396d7cba0b143dcb2dea4b06b5",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 214,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x77b68adbfc888fd272bff7bf0c934a7993a6b26d99c0bd0ed115831cc943f2ed",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 215,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6cab67f2685a8413cfba24f1bdec4389c465e66f6ab53ac2bc594be81e997200",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x793f8569a953afc3327ad85885374115e646126fc4d73a0c96e29fcac02b170d",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1e45c1909f2f5d90420a56a23d83ed53243d226631ee63f3e6f8f957ef72d51",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 227,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x6d93f330591409c5102b2c2c3b9a83a7c6e6d0852158a58692df77d073795d79",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 317,
      "y": 231,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xbf2651f14d50fe92e7d4d6e5f52b7c5554b495064de44170d8a651c74af03ee1",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 317,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x19da64ba2f0f9efc9ad3cdd51b91bc0f2a3101f9c4d0c7de72a853761a5f7504",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7ce2653faf5357750d4f75a9013523d433bfd4d91aac54a87f352288dac1d8bc",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8cac43b30a69b8fe174f10b907f6708f330428974387ac0a063af7d795a2f5f1",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xca31b451c278eaff2efc586605c9b5d45877494238fefb57f4e9ae4e8691a6ec",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x663149412e9c90d9a6f8871a52d148a8afd2a6245d8ea7219fa6a5784eb42002",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfc6b42611b5cba08c861fab35afd27977afda7231688329e5d77058445b4adf6",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5b328adb58fa91a0294115bf4389e6ac4d6df90e42daa80569d0735a0de2b8cb",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x408b68956209791e42b6f2c3423bcc193194a356ec769dbd1166fb728bd675c8",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x28e82ad85a8a27bd1e795b4b6cb469b2a869e310a48253ae337ffa6f348a4692",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe166db20898165b2032c1ad54dff0845e523f98c89149f8fa71e4fffcf378ea1",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x594a712e62544539282cc2a75702040a9fa6f2b439d22cf92789d93d7075035d",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 228,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc5a714d6659aaab33868c1a96317a71c0e01ab0a09731044be24418665aaa4a9",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 318,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x038100b93543ffd2b3f47533884be76f9b599096cf68773eff9f8401a8ac9b33",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 230,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0ecfc8afda3dc81c2c9f6a3aa814c7ff01e71d478c000e02031c0e7148710123",
      "assetIds": [
        "24623941502442180460818466240778508731346171390248369610",
        "24623567358023023749671406097461333362893139471517367754"
      ]
    },
    {
      "x": 318,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x551cf388eb3c1d0e7e0247a2beba30349df689caaf4a79946836aa9d7a1a7414",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4564ab4bdee505e12f225f1d84eeacbf0f3f2a0518720af8664f534366dcf88d",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x502b59c878e6777f8fe40b8bc9a73e9c4298ba096a0d53362dcd1e5d39d9e16c",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 234,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x10034f267897e284b1cb27c378ceda738f617fe920356ad1f97d35f1179d647a",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab125bdb07626a74a29bb45ea0b9e44f9c0f899449713555043338ed82ed8371",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdbd28a2ac2435f523302161196b5747c296e608363d7869543719cc2934eb87e",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84c0538ff3a9728e5fec62db66f98889338f2aa186e5eb447eb63161d75e58f2",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x35e1ef630ca0df73cf830ec59b5fc3584a5bf2815a4294cece5e4fda7bf628b8",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a4c26cd2221dfc0d966bc8e4b667b4c7bfc80008efdbb70fae4d78b01e7c954",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfb669c406037dc90eb66f9952bc86b1452c63c29f5f63337ce1728a14b93da55",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x097f3d6b16d184102a075d839bd8d83d89b301b476fa269b9cee977ac211cdef",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xecee131801cf5f83b6c712e0db4975969cc3d4b36d10b666951a54f723f21c28",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb3572b3cc381f44e49ff1eabfae894991b3db3c96f8c7ad9a26ce2cdb82c3bf0",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf1b2179149eb2442c9064fd64c0c763baaf05e4f2bb74af170ff70f668a2d563",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x28b698f4b758f5ec13daa1ec60200cee3cc4b4e967fe4a38970dd9c9be234587",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 228,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0f15b1224a3ccef556ac1e9f7f2eef15e817de7aa036b00a5e8793c13c24b251",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa4c00dc8ddeea95702cfdaf9ab2aca53b4a84a66e3cbea956b5a601854939f77",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 230,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9e95406be8bebdf28bab7637030f10aae2e5c40748cb6f3e684e7a1e6c56c05",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8c7e505d9f8d811db142b508b870ed9937d120c151640e2eecab50c777ee5819",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc0e0d68348d7ab1d9c889af18eee1bdfd0d4ce95d14e034f8f08e28bcb297654",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x27b8b3e4396b1bc3d654fc8058a14240dd4eab5f7ca5e0f855f7eb08ea98decc",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 234,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2e07731add9ff9116cc662499e77b462002b649962ef1fc8a5d2cb3e097cf480",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x08daf75f6a6e33b95f6f294efc133c1e8443207c00935710aaef34315e7ceae6",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa7908b7a584b008b23edb6c2a4d9aa106f19319bf95811d6670499211d7e41fc",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1b77dc595f6f5fadaa9c95dc7d94e7936519d4e4ed97c003725c59d768d67e8b",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2028d76c10ffedb7beb4d899e108990b2862e48f190381394011dae2ab7db785",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x91c794cb9097b8ff550d580ce1cafe380ac9fcdce3b2d57635f350ba279eb2fd",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x759540003d70461f14112b2c39188dc9f918bca29852673c9084236393339f3f",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbeadc6ece8d23a1bf75f80702069cfb974cc2b76ea28e718ac7d40f83baee9bb",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbc3a2cb6d50015a33a1e577071ea13f851addf01c49eb14b9d904c81daedd018",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x42a73e2ac4b3c2e61a70384f25e56538f4c004d2a3c8a35cf92273799218067f",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1e51e67dabc10eb21fc8887d23b97df41a1bd327cae559ca45d7a25384edf9e",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xff26643e5ea3ccb338b85ee4f626f675be74ed086fddfe1e2e83a7af31ddec27",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 228,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe51c0590a3e2c1a5f680c17d75f8edc61c964e0d4829cdad43d78651171f6170",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 229,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa27ada5ea5db1e73021e6186369288b81995791953066c618100c1f9c80a22f4",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 230,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5dbb9f63214d380f36ef0b5cfaca6062ecb866dd31cefbd32800659ec916ab32",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0f1c8848b8e7de7ca15598da74e2ff2ab141a33764a3bba6c6055b9b82dbd8cd",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdea767dc33d6a70dfbc8ef02ce1e10890889225d7367282ac26cda3a35a80812",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x29edfbc06968f8af4a75fe05846001f006289a3bbea070e33540f4c2caa5d3ab",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 234,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd53d66fd586e68a813aa7acbb1111da3d49afd9e211c3687b937430acb2be07b",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 235,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcc3c7810c1161b5ce8210a22b7c010a71fd52d72daf866289f8b5f69eaa49ed3",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 236,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xadc719a580d43c02de2c149ce48fd61ae1f22cfa50603fc6ddaee02c70c0a0a5",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 213,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x48c73480f040e45931ab200886bfdab5240ceadb211b8618aaa110a8887b78c2",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 214,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1d9995339c2e69c80e58583464db592abc9ab4997e164b8b886ff9809d4fa6a",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 215,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8e8b8ee58a568fa0943b8a3219fcd13a724dfd07160a4d1aea306d74e1fbe525",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc4118fe58aafd3ee4130eb15c77b52cc49532d74970a8cdc194536f065b4dd72",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x40ae25b6cff6580d8132d041f7b82edec32eb3a2089830b1191f8f4d06aaa1be",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x83bd0dd2bf7cd31cf123114c4b977850f29c6510ae0e08a42ab353e13a8551af",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b2b3a43491d77a2b5b568b7b50c3c19c54b8b1957e8a423da6aabdf768a9208",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8b6b7813ba7702526db3d99478a12407d57018be063a6fa4b5086b74f654c18a",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 227,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfdc6c073462309a24bc1a4da86b22671aa3b753011bdaf197a390e5ea5c7823b",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9de10b77a1ce607b0b5dec3cb0a2ab3e07d591db6c0b24ea46627ac6072189b0",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1a4da7d4cf134aff4edb18e22c7bd8c85708082a037edb163abb2edbbf3c3f15",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0e350e16de403efe4aaeb0afad27f2ca50a7e73f839f27f1ca29d2fe8b845f06",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 213,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7cd8f1e70db0657dc836e5ced31a92aa76e5ff690abc09fed49983d7358bbfd2",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 214,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xff2994568c19af9e4c83b37111aa6045a36950e688e0755fed35d6033ee3e425",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 215,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x83d3b4dbb750a34c47e5c89aa55619905393ac1eb32dcd2ca83eb3f722c0a820",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb5298ca3b58b36e2c3623b9af5f93b95061a3d3f5d3c72c3310f5c10f54ebdaf",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd5410758795c1042bd78eb157fd7ba72cca28d9d9b5b44ba929f18ebfa5af4bd",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0413cad685beae2697fd16af3b841f87bd8784027586c828199473056ba16e8d",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x991d8b693e26ee4513ada290af4936f84499eb35924f3aa11031eac4085c4292",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5800b3986b25258c0c3dbead1de1c7ede5faa74f8fb060a84380dc637ebcaee3",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 227,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xecb4ba8c48b5bdb7755f28b86d6cfbb15c9631dcb6264b965e400f67ae5f49df",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf01d678886b77bd3c542c39e65feae6912a2253dd448bb5b68c5110d2f0ebdc7",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x55d42ee8c8d62766ab56e5c36ee9230e86b4d1c6cf90e97759b613f2ef54fb89",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x75f06d13702d1b69273b3ab086caafea9fc2d77b80f29067d862f4b859e8e752",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 213,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e80935511cc82d60a85c3397b1ab6f0cebe23be26a40271a973f3298b5be86c",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 214,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x48def0a1d391b53afc488ef413b0ab7ce2e42d00b20fbf2fa9a90e982a22b6be",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 215,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa0b4c39a91a25d0be80c56c657502f6d92d9de2525eb48f489ad5ee14e4faa2",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e96814103e56e875ea4cd6c2d2618705cdf3ab188bc06cda34a1bb2db784eee",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3e2793d6d8439350490946a640e776720584094bc01d381e60eadb18376ab996",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xefb16613e6233996b79d529b198ebf8122b2b48a8f066598b66f6f240ac758bb",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 225,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5b1e94cdae499cff9768a359a21dca5736b69d4fdb8d08bdcfe96641f6676806",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 226,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1e0f43780f09cd456384bf04e8f2ac4222c921faab7a1612e6505c107eb1709",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 227,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf57b7497848bb27ec6c22d4b1343d4a71f756ba0d4d0b4cb6fafc1656ea1bf13",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 231,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x76ec6155f9e23b3a1d82a5dc58f70be07236100c89eb73f75edb3bc2443fe564",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 232,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9187a1cf085cb73ba62c9fde2178afbe9c637d309f70a7935bebbef7f43ddcc6",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 233,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab4d1afdae9df3247df47b8e19cc8be2b28c84a13ad0a2a4734dd1a2bf56757e",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 225,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x511aa08d1fa618c209c127757d6b4d8bc7638bb2ea3577cb3870aa67353d98cf",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 231,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8a666c9398ed1ef77683392502df8d352dc0100646f6d591786eacbff30741d0",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 228,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x82c7ce7382ca64e47cd0802f01d537b32ee65b768b9af3d7bd1f9cad196611ec",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 219,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xad9ecea8f4487e76ca9d38e64211d15a6ed585e120b1b724a85fdb34e18c1539",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 213,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x483788a5497385525df50c1325d0d1d8cd8582b41ff3d2b3366f5c6b60bc8564",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 222,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4ffd30bc00ab818dfb44aff0019ddc310a8e280357e2210a8feff1f962bf5a6a",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 210,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x64b1a0173ba0cf727f18e8f292597660cd58275ef755293afe4033d66869574f",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 231,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb677033a015586ae5acb0682cb6478a23b5685e4a82f066f443cd1605e3fc58f",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 228,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe8cbb4793fcb8c1afc8e4696d765df9f9668b227a5a2a2c0d52b0070138507a5",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 234,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xce65f8a5b65d0f7bfa5f184f67601d03052eae4e597797c23fbf50da366bf3a3",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 213,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x01bd8df2403993ec5060e8a195bbb62e287d556672fe8e22d164e8ce44575a62",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 225,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x513621c6205a20b4791068f93cb9d56f9ae305b7b9f2a7cb4bb70bd151f57f64",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 210,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6e2a702ffcf5e26826e0b76215f11b878735600b1451976519141253f15323c6",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 216,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x125bf512e5b5082c88935efe3cd4d887bab619cd76fcf6e5403a6e4097008b26",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 222,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0cc9ecc7860b4bfd9556e18b67835e2a6bafa49c85a90ba3ae2f08ca3de76446",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 234,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1a3cb6733f3b5bd703c9a73b41eb7bece1042c75bf389f49cdc5c744e844e63a",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 228,
      "size": 6,
      "price": "32772000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe9af231f8264f9b244d7bdbbba8100e9056613c25d8e314d7290408d78e1a9d9",
      "assetIds": []
    }
  ],
  "solcInputHash": "b42a863a795806b4ea3a8f05dfa42539",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c63430006050033",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}