{
  "address": "0x8d0B4bEEDcE8A545F5D88c7456c076De329b6391",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9442c66c6e93fcfc1895e7085b0b8b211aa55e03b2abaf9dc27dc594e1731a0",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0x8d0B4bEEDcE8A545F5D88c7456c076De329b6391",
    "transactionIndex": 3,
    "gasUsed": "2667567",
    "logsBloom": "0x
    "blockHash": "0x1c9f4c976c40deb7023341716f62a37331c9ecc6c39d846bd8c95d2e0df62ca1",
    "transactionHash": "0xb9442c66c6e93fcfc1895e7085b0b8b211aa55e03b2abaf9dc27dc594e1731a0",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 35910541,
        "transactionHash": "0xb9442c66c6e93fcfc1895e7085b0b8b211aa55e03b2abaf9dc27dc594e1731a0",
        "address": "0x8d0B4bEEDcE8A545F5D88c7456c076De329b6391",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000592daadc9ea7f56a81de1fd27a723bd407709c460000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 5,
        "blockHash": "0x1c9f4c976c40deb7023341716f62a37331c9ecc6c39d846bd8c95d2e0df62ca1"
      },
      {
        "transactionIndex": 3,
        "blockNumber": 35910541,
        "transactionHash": "0xb9442c66c6e93fcfc1895e7085b0b8b211aa55e03b2abaf9dc27dc594e1731a0",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000127af81b2ec190000000000000000000000000000000000000000000000011d31387a187d2d4160000000000000000000000000000000000000000000031820cb4652e2ae7a21d000000000000000000000000000000000000000000000011d3010ca96ca412860000000000000000000000000000000000000000000031820cc6e026461663ad",
        "logIndex": 6,
        "blockHash": "0x1c9f4c976c40deb7023341716f62a37331c9ecc6c39d846bd8c95d2e0df62ca1"
      }
    ],
    "blockNumber": 35910541,
    "cumulativeGasUsed": "3053283",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x525129b95bA89B9800e47ef3dc7d23fBAd27b1a3",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x49c4D4C94829B9c44052C5f5Cb164Fc612181165",
    "0xa5Eb9C9Eb4F4c35B9Be8cFaAA7909F9ebe6Cb609",
    "0x2a860a147abeefec5fea6b3a609a6b7ecc337dce561d9eea8b0b9f1015859c4f",
    2002795200,
    "0xB7060D3FeCAC3AE1F0A0AA416E3e8E472257950e",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xB766Af2EfCB61bd5a261E007D8866f005E305D5d",
    "0xAc3ff31f526Af7f386ea43649e3fa67e329AeF93",
    "0x1d3CE3489a064aEFc9928fe08F9d2Dd968F5c969"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 288,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1dcb6c6356d72409c7d147d1fb043443aa47b3c776894fe7844aaebef1d9fae",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3f4800d21c2bd025ebd8d93fb075dfc357283953f9e6b2b0e45b536fdbbde38a",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x571c6a441afbf8befeb2cf0908e0e29e988455890032c32a04dd47f419f60b07",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x18463f22ee55cf34e11570766743b32bd64f03a59e63bdb26eb3723275842638",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc145ea182f193010593e776bbf609d2b949cf6ed74a25e42c86fdd0f350f1ed0",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe367f33bc67aad21ff7b2bfe439d0c12a5b3eac3e4ed3dc7865f7c35b5b8daa4",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc4c6f159124219a91194d4397302433301d2ab464aa490a4981d0b2b5bfe415a",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x21df25747f72c38fe176704a38c0554bca1ef0a6320841c2435a4dcfae3ae0ac",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84b55a8b3f7e086b563c1bea55ed62d80e39f6cdba7879629afb437b8f1c55f4",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf23b6d42e5c93dbaed4310f45d7476446fc88a263b550db9fcb9200a8287240a",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2c8501a92a0079fa90b274b326a79811aa64d92f1b01320e7e93754b08d0c2e2",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x74a130a1d80af2a3d89ba089fca883a11ca921e9b828270414164636e17479c3",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e891e61f87c0ab749449225cc977c052415bab25253e4b76bb36f42616d39a0",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x390ee56af3aedffb6300e2fcb46670f5c2bebd833e2133aee4a9436a1076f413",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8b36132c1a248fdce4c460e19ded15d2f2f9ae5d7115be7c9817388290e97620",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x89f50f7dd3c4ad8f5106ebc7349deb6d229bc74b74ea558c11c4a7f84dd25a13",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3ddb5762783d6daf484c0215db240b0175e61e2afb1ea82f6e6ed7471cf12730",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7dbb3dfb9c7a8041e8e7b5307d22a921b95436d7bd3cf0721aa46449df7c10f1",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9741749b8fa20c056cad644af1cd3a19adf6af6ebac13d5fde9da357d4470d34",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa521bc4eb36357652ad6e374c778b5a6a743f03d52eaa5d869c68d329d98c0a0",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd2dde5da1572aa754e41625b66d80f808b2118ef9356973437b5bbcc69dc893a",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x22f42e2da5bca04b907f608b8ea3de720970030b35092252147844809e18d07e",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa13b1e366e810560cc44e85a771620e043280206e26610eaf33bcad5bedc8528",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84b91a873c4b7d6c11f097a6be976b6e8c8dbce17889510f1796d90855828880",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x021f0fd9db8d87725dfe83717a828dfc2ca4a0b46e54198e0573c304668f0067",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ad4822e15aa04b69c31d6936e0c27eec9e38b01a6a1ae1236ba622b5b2c6c12",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbe95f897b280dcf3965c71dc95e9a29421100daa3ea2e8fc7729d36ee1d6e500",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5d734833a4107edb9dd973c3a8eed4ca3000f08ae94373b6fd3080edb87f85ab",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd359d5c4bfa4b815d6314344541d70e3dfb12ae025c446c315fd424d5d3d9f9b",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9f6536a1a40d4b22310967832e74f362e5c0ac30c4cda5fc50eceb4b5e13e283",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb08091ef3334b01058e034093c141b6f1a25d621fc606865b69f083786caeb04",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd36f3d85697d1b4754a3429d2e1b4cacc3480da653ac5b6c9667419859efcce9",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x75e95c07517884cce26f31e356cd8a03daaa56a04126f5419021e76115973a08",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4e615585f7a87d0afa1f235a61efb8aed72dd579da1c6235c1acd1dfecbc5fa0",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5e277d6cbb24acf939edc718f43852bfd7d6978c5e02c862854647a4f8fe77ab",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xffaeb839a22a8f02f4b6a52366d5bd35bd4d61b94b72644b996fba3ab29448d2",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9f65d085bfe7694cbe2394c42cedcbba17f67a063d2b4aded478a8fe9e5136fa",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf3e949bd55caa3ebdc6afecde7d9bdc5ce7efdbe1bfd296103e5f6fc2eb6c91c",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe47058bdadf9158b61000b7deddb8a7c28d8edc9c03f8b01f3833e0ca249535e",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xccc40d8bdd205dc0ea3bb9d472a7a5c22a050347a86a5170fc178b1f9630a3b6",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x542dcef12f72eb86c350d4fded51129a6e91893c46388888732e623ad888b098",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6d68ee1a51fc55cac09e0930c29cb97355728b27402347bd402cfed2bd508b0e",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x904cf764bdf070c749079de3617262e1362b3c7c131cef3cf6bd86d402d4628e",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1c42e2fb5d8994a44c6c01587385a7af273e5c6313a7ffdb08b0ef7e1675648",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x345e0c3ccde342e4707168cfede6d4c7f6a97bae9a1d9c020e19b19640a14101",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9ce837758d6ca1e93a02bb97fcacdab8f1a9e00e8747a5ffb3cbb6879629081a",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb9f5cf88d5ba13ee49460f82cfc11ca10ef48d73e5da54b3b95ce220066a58e5",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6ce88fc765388cd7c969df753f7da39174d572fd2a462f9c69011a2297df8e65",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xebaed87b5ff7356d903b2b193ba0f005e7ab8e996b16250329c1eb73f84982bb",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 192,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x605b4e3c7684f4a3c9410e4a338601d72051ec5db587c2d58728fdb7da9a921b",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 193,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa8e088b6331cbdea637715bde6804a1128c6708e7330d2b8c49a27a3acdd22df",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 194,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xcd8a0d6c1bd3ec6fd75b0f093a42b6dc8a3ef67a0db392f566f30c384f52e504",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 195,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x31d9692b750f4e682e1b138fef7e73d02e183056b32a702637599b5536a74b5b",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 196,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xcef1c6845161f800f96c53a28ab1340155364d67329a73f730a858fadf1ec1cb",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 197,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x24f723c97048ec3617902fb5ecadf87547b033a00ed34cb86ed78959f5cb9eec",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x912bfff8d0aab0ab4bdb35dfe633a81e5e40f492d06b1c61129cdd3ea8dd83af",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa39e8c1e1ad6f1ccbeeecb50c395c8cba211710c523fefcfc975f4de55ffbe81",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x28374e61bdad10af1b991c26a8413eb327a2018461c28a7e1061eaeac8ef51b5",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdcf9be1a8b4602b198e279e06cb18e5824546e01e1494ff2d91b92abafb25525",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x28f4a6414600050083e01c4325ff79174d53d93664c324a3eb97948c723c05d3",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x542d9291ed5839316649bca6070a700043245cabaabef285a35600a150272866",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5107b7f40cbafb2264894dea4d758c3bc13812abe7373a7b5d249fda4f1e6b0e",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 204,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8ea8248c9d61b4d72810d8279b5f70325555df4dcc6d8c85cef44b00b6589323",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x39e46883f219bc114508368e496f1b2376144df682bae74a4e77f0b558001841",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 206,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x00472779abd2fac34b180d8d0603e81853ce4ee72bbb477644611d0a477253a9",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf83836124bd6a9b4a4e031fd04a0c6ea50a0b2b7b1d04d096be92a8df2577a3e",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x07db842246a7813cc15225749ef5b0a63df586e7a98b108d12447b98c4eccda8",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1872b227074b017b75a68fd1587aaac90203fb98eadefb9c4f5bb767992b2f64",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xce53b11525dea6d424e876e69a8109e17d8aa98101c6c5cc69fa1ce1facfb948",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x37b7e425bb2987234973810a38a438954d7d101182b4207b5669e19e3d263f79",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x71ea89363a99ffd6c52c0dda89627d48c8bce1fe1051faa1ced60160d301d96a",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf91e27456abd400b3fb5358dfacd100b6a325108c20c36e7f8f5c3788a0cdf15",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc5befb23a03079d4a7298fc98fe4287dd8faae5140d8de2059dff5bfa659557b",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x98443c5cfb3d22c6f89dd422fdb6c1fa2c247f09298e9dfe90a55a29892cab0f",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x248624899e308d3e67f9d29fce842d5715f1c5726f08c191cce8b9f27da905c4",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 204,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0036b1431e3828c09c5b02da784da87823615c642e0ffe7e851ddef6ef80a549",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x89ac15e7bf03a0041d777aa8c795288891a8084b95c0f774efa85dca2393d4d8",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 206,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x207a99d54f21e4964f5c3fd4c9f0c44d4936ca1b3338bfdac335a469a04ee2ad",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x912370f536cc1b20302bdec2ea75a231813676b407ce1180b19b64da24a1f91f",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x665057d9939e145216a6cc5b560a61054d9953feb9062bdfd1c91d1a7f83dbc6",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbaef84c8cee207ee16e0203f2e4742566a4f06b8d56df6b069fbb692a0adb80d",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe729ab96485165f469adc78a51eb0d999bc3c9860cd9cf0b21b5ef2e707e05df",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9ea57d47d9b153be6c050e94b1f44b3894bf1359e05d7f7ad2b9269560404be5",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x64aa2ecadbedc4fbc2cd39e78d9d25d0086d1e4166e67fbb8f84ba3ec49b6e2f",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb87c54b9e1a0331039b740ca0fcc7b8f8376f5b67e4d7f95a91b7c898e79b1a6",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfbbc3a2446ccb4fb65d4f394a929e0565a11b52fc8bea4d790acee250ec6af97",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9aaa09586b3511d74a381c3d9cef9a88051286af834c47cd6772dfe8dfa00747",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x434dd9f7e60f468663072ec49dfceccfebddc6feac7a59b72b80c7352e42b862",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 204,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8ea71968c318c83b406e3a978ed45ff78714fc64d934222f82e8f0f5fe772c84",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x47f4852a953fbe226712a257458109635698a47363f079665a8ab9b219585300",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 206,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x468bd538a25947fc0b17e31027a1a82b2ca89faf4f8803d21de4ca70253aa18a",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 216,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8fd7e6ab372ee7096c9cd11916da4f58b81cf477327a7513c03068989e39a5c3",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe7666ac9db98dc93361e3f7452ae69005c2c86859749811585b72af83d4cce26",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x392acc8745103ff53dbeced8e7db9ce899a8db14f3021a8ad4be19e1c13ae6cd",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb8bb5fba073baa2b448d9c6e0124b2a581c54678e9418223144b6db9a6fb4d5a",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3825ccbeb2510fe10e42f4ec2586326177ee5f4c2abb296c4e04247f9ed84132",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe087bfa0eecfcbc28ddab582f666c6b8921f366001338164d5766147823e330c",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 191,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe0fd588761910fb4241a4f942930e7ae8544c6c77f73f90f58c31290cfbe2104",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0db1d6f8004056cf6bf729a3acb85d5de160f5152fb9c75b668616c1ddb5b979",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x417d8fc7a25bb6349315658f8e35df4deab5967b8bda79e6261d52df1782a9cf",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0710acc8b517845dc405343eafeb8d48be2b8a1c79061bcd93ed2c70e1b6b73d",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0aa3a92387065066744e03cd57477c4db162f692b63d6ae6f7d180dc0d2985dd",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd3aa5ac4687927ab2cbc76cb8cb24f76af8cf1709222af732d530afda4db6a38",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 203,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1addf8ff761499fd0c794608e0593fd3e5c0e0ca3d71135708d1c5e7a347aebb",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 207,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0634b1ab82ad45f1c4c66bdb559a27c72629fb8dd467673b95d07abc85451f92",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17a9a4a0e2eddfef2f6b33a2609a0bb8d901748596584ef7f488063112bf4278",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x61150598c35c3c63160a9333a28a3c65091063dac5b8a8f60c7f986b3118afcf",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe43949bfc4761ab8a9a6f2ac580b4ce8a6d55470fa87e31f6ca3fa83d21ad30",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x77d9aa1a518ea7337786146517b0850a988fb7fc51b070acf19cfda05b2ac6ed",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x28703b87fb9a9171f5a1de1f8ea54503d348c2767dd91a9a0a6e3c1e2bb89b2d",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x91bb72551e92d101d876eba795c1880d34673f66c8af7f9144d93dd586fd5ea2",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6eb694cac32a8f83df2c9eb33e83ed18de2faceb0f105b923281fd4895fa471",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ef91d2c8ae42cd69a867578f7990c7b3bf092bb369329c2add57c421b57c1bd",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 188,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf5f15605c92045779b080f76c13fd3f9d89f9d667a775c1df5b03210fc3cc8ee",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2f0a387636794e9a45741e5bf9de178a72d3971787ec31cf367de2c32a51e229",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x575d5094e1d33309cc741428a74e14e26eddd8fa75f9fd856f374222a400683d",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd47676a1f99daef812917dfe8da6c5956b92bd9ea26e49e8e483feb914d4b5ac",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd127e5434690ee8c51a450be48f995903006331ab1c17ca46659b8f8f4f8ede1",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7bbb4bee4c4cad4101eedf1c60f65db3e560e2d85c96f0a8182f30685046d9c9",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x68119e499a0d3c07e7ec3ac93c22f7a16677de60704a2219837b896d48e7ec05",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x021de119c3c08e0f8ceb55f01a5adfabccf71b56d938d3f8271f45eaa2b40dae",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6d8bca181a59b58570382e1fa8bce3d14a2ee6adc14ef90f8199d18f6f02306",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 203,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd98fb668f40312618e18a23723b3cfb216d7158fe4dbac3b3f986d2c34df53f9",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 207,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xcfc700c3609812d712e16435ada28ab60c3c96fa124231175e4685603af26da6",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6302829787cf365e46955b183e3124a21ea284f4ec1ba88bbc058a1aa6d7a5b7",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x85083af9f568f7b85741c916ca054bd6f8f0420b1ea8eac32d9b6395d1fbfd5e",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf7f492241edfa3fa1dd094ddadebdafd518a1adbead4cd959adfb943c6dc44ee",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb58799e26c5d92ad2b06fed8f95a4c2fa54739929d98ca91be7fffae2b524154",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3e877c65adf914f5ddd004eb99a783233f29aea26788a47e68c6269760ae72ef",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc73cb72facc4cd999df4b1b518e68d949fe2e159da3cb231b8cbcb3817293cf5",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d763384f28b97f3f07ec79bb4e421a54a95a4633087b0f0a355de2b749ab82e",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7d3ebdf3f75750f6ced5d645650ead9a0e63028db4bb006c9ba49c85278fa394",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6093e527a1b36edf6c2296a0fc0435ee68e1c36d2aaacc49ce245be454a6d974",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5ea8be3c9c7cf67fa11bcb6ca6c162c76ef1bf65af6e919aa9af392cea974e7f",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 191,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1f29d5118e9c1e8c23f7d90f1afac889d532c9d631731b7627d72b130d62d0a8",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 198,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb819d59a26dbbc71529a5618d8a167f4f69e45cc7db9984d349c82a2325291e3",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaadb085b2c1431b1342fd648e4d5b2fc0ba21de721e6cc07f5e0c786399c1fe8",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcbe1efa9dc4aaf2376505cbb3ce274af9d63d88c6bcc150b61fcff46e2f5374e",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa6a336ee95b583365588531963757b253bc199f0563441aa7c736d97a4a0f765",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x55ca851a976ec2aaaa7e102a6d37658ef6f8586e9d10e3d551e2ca0671b6d1c9",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 203,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd0400cb5f9b8e4dd703fd0f68eed7d1754c478aa5797542508ecce8ad6da71c7",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 207,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x6768bc3601fda45c018b104f34e31342acd4b22cee1fb43ea28f855d85b537e6",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1aba1b4cad29b7200136066c3936001b49acfa30c78fd58bdda0c9bfcdd6b668",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x737274ae8fc56dc765b9d2f3a40b0448b0f41d7235fe03c4a3a46bad0a4a4f97",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x49f47c8480c8e7529b4c9aa66cdb39e990bc91dca0c5bd036a406fbd0fc02760",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd752ca3472a1d9e3e4a11233ac845540a63eed4e9f7fd90d9887767b782cf199",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1bf98f3371385e40497430345c89b34fff55777ed17997866d77fba1b9a31d1",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 222,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8091481197332ade2997fdd4acebd7cb73419ad9856326009808a9154e9c0338",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 223,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fa930f7ea846930aa673ab92d4a5dea3323940e608868ac9c7081cf645dd90c",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 224,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x501205b72d8cbb0292ffbb7a300288061a71126f505970f70fa2548933474b60",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x24cfd1a25d87604c40ba2f4f1ac9e53b8cc9d2cad727f82197ca44b32f8ff2bd",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6338e254ede2f8fef8fbd58cd9595df29b3de039719f0d7f72b9c1562468a3de",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb6b134a213391f056fa42759466aa4b66a15c64aa5301067c62642386ff87a0a",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 195,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1cb0b9c7e7a13718284ee56069342322236632501e562c0b51076ecc35200b04",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfd5d7ef1c92c13b8096101ee336c3f04b35bb9c60b6a0f1261ab040d003ac131",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 197,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x42c035df5b386a3325f2baae8b4e177dac53fb87b755c408eab2bfd6d7c2f45a",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 198,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf768d31b105b6a19fd5c7ee6c9955573fcb04363d33d901395e0a28239757639",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b9a458024ee0c5a0ecf59ce421dc0890b638e7b5cc31361f052edd7c4d6034f",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x00ee82167afbe6130859474ca5604224f9f3e4b2b48a1643db7a367a9c900f8b",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x46bdb2354706d9286063293f358c27fcb380fc63121140d9755fad32c7f71077",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x79893d022bfb295faead181dfcc56a7a2eabdd487a715be09559de8499c02a4c",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9fe5d6d6bb4192fcc1b082ad62f28e9eb93f3faf43ae61a28a8eff881146e460",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 204,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4acdc38be6b92d2ffffd279a6d90a6f76e8dd89ecf84d5bee3af6ba73d67ecdf",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaedba739b29ab21f51eee2766c9a3d4bc7c87a38926a39fb8b7e301e7a1e3901",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 206,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x22ead87381d4e40fe40d950d40378bbdb0a89059d238610ac892d86991a4ea8a",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x807dd7e8b69017371dba3f2cae9baee7483d92940692a56d0d0ff23f10cec0c8",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6cfbea3ca12799eef72c054f07e52ce1ee0e74fb5c5beb63d9647728c41b46b0",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 209,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0de7a320b5bbcc061a2f0794d875494b47d9cb0170ee86e1b2ed06d0cbce7f48",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x18500d2e4c7058383442ca8199645d19635493b4436419bdfdd741e98ee4876a",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x515467b8d65a60864ae28dda1f85581978349478b65a7f7700aa1ea077a37e70",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ce01a2f7d7e6cc8a612dab1fec37068545acbbdbe00e97171927506eddbe5d7",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf29e4f0c5b052773dcc3fc13e29fd30de97b2feb9894c09134c78b5063487e08",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8ebb4f653dd843a0d9ed8bb88ec55f3f3f81a929993df841fa80901b8dadb152",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb10971a335cd21c2e9310e9e33394b96a72c18c317ad068db84683c04d51e441",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbc07704d86efe917197c2e7e71bc1de695d14585f4a0c242b8c69216ea885bbf",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7196c935f7ffedfdeba94cac50e73ef7a57d88e9fc16ca16e23f2a00d2f67b16",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x009899d7ac2c84d8d35bf369ac12fad3c18b28cd0211bd4a12787197a57c7112",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x065dbb1d81873cf5e9a5f8d1db28572d8ce16322edf21a5e5e872c100b16ecf3",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3cbeb01fa44410b50b5cf400e57ebc8879a17a0e610392f4493fd310ee49ea5d",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x71e6cc19999784a73f2ac58fedbae4f6dacb95c261f133067162c88c2ac384c1",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 198,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbf584e0572e370364af3b240bf3708a5ae176ece1beeed55d2b1afd91413317d",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x21aff71705455803e552509f74df5eaeeb491aeb4f4c4f337d8554405b499a86",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe8969daf2cc62f2e322b72cf5e7e633d025d3786eed7bec41c235700eb459417",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x18fc517c9d623edd880333620e1a9eec6a23519169391c24b1e5fa6280c926fe",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x744c8460670cb1cab3f3229c18a3c45583602a86da9686c7fae0e025845e0b2a",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7b192df120e5538082f5470c8d574eabd277f344b2bc8d4f189875310127eb4b",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 204,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x88ec3f5e2dc6ca623729ffa8a3546eea144f1df4529a90304f1f54946d9d5702",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x77dbe28527e32f61171495c7845fd4467857528a0972970aca1d364a49fb42a0",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 206,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x807083ffc7ab941734511f2e76876c232029f2db195b7962b9c8956b5f9d642f",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x821970f677064699bcdff33ccd2e363fa1809398732b7965e23da8eba1151e7c",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc00cfe86bfb1d46bed45e67f693d73e8446b39cc0083ea23f02b6e9f97cb0951",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 209,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x22b52959a440935e4d7804fb28a2e8f850e15b46e9a252e00f786518bdb675c9",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa89cd949775ea841c4cb75ade81be63a65cf3bca3fa553743a764eba57ae7188",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2f93e7fdea0407b8e9d9170c912448f79a1acb6c6c84e7775b49ca01df6fbaa9",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf64466ef8fc05f3f72cb2f3a7c13c9a5627625cd19f0e87b32668d61659bc836",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xddf29a70d537afa03680a06eaef4d3a74e6b54455451b9527ff25720899e51c9",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7d5bc1400997aa6027de343b8b9ccde4885c90b684e2fc494eec5e103d87e077",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1560bddc42024e55ff7a687716cf86dd1143a2d22532f5dcbc9aafcc7415aea",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x367309269e7525a9e497e1f34745b474a9e1f4220ce9e147b14b79ca244a9d31",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x429f20acf08ee2194cc755fc9f4144966bdbc9a2f176b22f70a85fe57d220e25",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2c1acf3f0ebd6a54a1c41b99f296fec39c78cae8367c0b9bbf1028c4446be3c0",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9ee432f6c091b7198d78bc2fc7ca8d06d6c7117a744f55cce0d5046f59ffe0bc",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9709eb47ff4acf88ae72e47473c8714976ac434ce79230404ad2786e46aa49e5",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x067f6a2789302b34fa8900dc6d0d08fd1b465fefb7ec1fd598cceba0be994b4c",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 198,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc51b5c85007b253aaee479e4b73bec56b07066b93a81b317159f247e937634e8",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 199,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9c23d9f942445f609f2d34c8167e3bddfc6ca90cb2a48d75fab286ca05c61a62",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 200,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc34b6cb4182790f20ab9a267b9e00ed3a05aee53763575df04db9666f0b3ad1b",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 201,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x02d75fef7ec216b5ecb68103948d1707c716fee36f71a98efb1d94125ba6c9c9",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 202,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x68de68954d5c90f01c18bcdfa14cc6037ca842abc07ec7d915dda1fe5271971d",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 203,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x95ee62c1233eb9b593859575c4754deb327532d404fc0fd7b5002a09dc376d31",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 204,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xed42a1a5984862c14f40f90cc20f223313aca653a483a97cc5e1ba254112076c",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 205,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x49748bd52a04db9c55498fab20aeeab57b4b47ef7053ae741d44a0a457362ce6",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 206,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd7567b65eb15603de9c55795666e5eb510b5694a6c0594cd1b5d63d6ccae2666",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x50422a261def1fb14dfe9423f9ae4733da461f2940f7b6a10a148c63d37e3c55",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x00c2c3b00f46a1c963ea21f18bfeb38f79cebb0454c0a32f46c4f567baf7e41a",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 209,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0af65a2a0014f2171b54e3677a220aa10566479e64dce7a8762e2ef40bbc454f",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5e29ed3474152ba48d4fcdcd9d950a418147f8096e77e6ecaa60c1d104d7fad1",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b61b1ab26c2b51b839784c06c0ca590ae0c83109e9963c65935d5bef4e3c617",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf394c93a6586fab2d218f23048eb0872428b76973fec4c5d3e8f4be6e33105dd",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1a81e6198ea812cf683d324a88dc7509ccb7896018d17000137ec8ece7b46ce",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeb5663be6d3ea0a8ab939a9e480b601db596d5f465968191b5c4cb3514507aa8",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1d2e14ba3b3af7b0b3e06770431553abd5bcc57b5bdeaf128d6b6f5e4bd5f86",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6a5860f80de2c784f3604871fb4e37a71d04a96608721a74a18aaf5350d1f9db",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa8e1819accba6ae245e3dd57a168fa1ade0754f1f5d349ce09f27699c988ba9f",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa0cfe73e2d52ebc6ce7cac04a93d67bb5f59446d1aa7dbee55cf2d3772f711be",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xadcbbff71911a7ab21185ca642c8ad8ddb3077f4b8a65d49b4b309aa1a6e7ac2",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfd25b47514493fe64804b8ea3cb8f3dade4ed21405810f3b873930a6ae1a7df4",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc707cbe5a8988f46d0290cea0d36459c8d88ebd5dc2aa4322ee139aab99013fe",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5213ecdaf7417419c12f572bb9a010d5539e50421c39d1e255ab667b433cea63",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x784393224ac1f754946cc15ef9209acf593caf7e0ba6177bda0335fa7c6d73e3",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc886ab5b16f6f03e67637395ac1dfd70fd02d041db4eca0bc68f43f623d7faf0",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e508dacb5c0db70395e2f232841e542556938af8177a26eac413b6e973dd34a",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4f3e01f9aedee226a49acb0c8db6893968b29d6d2cfd62163391ee5e3b73fc8b",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb931091af6a0b4e8e01113fc0b498152fccd3e3d015fa9da3d03e80b037c81d8",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbe341723b200820cb921d83ce3a1cd52554a7e9265cba29c120aca8c9c7b145b",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd76f6ab20081552a77896988a0d2e829575b24a94c9dca720bf447580ab8bd79",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x715872a77acc96af0b1fea8130677150e4a2131f2722739c485810340d0e2d51",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xec44b3939ca4e4721aa0c47221d595afd53b8cf78db4ce139fe8b64a1c4538d7",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3298b3a7b03583eb472d1006312bf691b9f522f016f3b4323a3e20cb2babbbd5",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6dc4291dc787d0d81c4f71c548664eb81e45105c75fe34bee221c3d2183a04d4",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xeed9f5e6ec5a31a250864c0856026433c05bdad3db6a5eb600db8f54d7da60ba",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x81b4feba9d2482f06713e1a221558a274544bfb82cd911252ad7f54a9d07e5f3",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0782a2b53013a1ab9e60dcd6b653846db7176425acad29fc4bcf9052be7f50ae",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x911d078635fe7e72c3df892b299d6079b9ca6a055d17cda6c1131e4548dfceb9",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe5b3e05b87738e1d9ab390d8288b97b27351e69d18b457a421b524d42e1957f2",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x434ac7dc8a6b8209d17ab10957bb9ad276ef9c73258f6e0b41267e0ec2bcfc6e",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 189,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x69ae425336ffa8f75a895508bb2e83db7289713fadfe72344899f8ccc591019a",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 190,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x86e267bd12fd42a59b058c5589b257bd51dc295d9cf2bfe67d310c343850d3ed",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 191,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3a7f8a5a4c1bd564726fd229da72adad63528d7552018247e5c647c34d091c24",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 192,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0345a5ed6d00ed77b8a875aad9afe74f9da1b8ff82a499fa59dcafd6617aff97",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 193,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7011ab3b074a143523030003cf568044d9b3090253976ed205946ae35e52c260",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 194,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9166c406c5af52f932f55cfc45dd9bb58b6659b5d2ffee1c9ef8254fedf0b914",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x65d762e3f53ab62a2a834fb43483b3759a59269f41096c265f9cee2640458c56",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2037c59848907c288bad246078a954393557556a8efef5e49bb52fd30ee3cec2",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 218,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x408e8007f21d231fed17da3af0dc6a813243eff7c29e946994111907509ab663",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 219,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x87b8217d2e844f8c4d2bd020d714c4c6c6bb6ac2b6567dd781651ce6a5b93b2d",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 220,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xef85c5a0acd8eac4e177ae3cb72f703778c63243d981a083152d0890f26c071f",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 221,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf02957d55df3fb729f367b250f32fbad1011fab461fde870de5692a0a424e6c1",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x039914c0549c950ee738ef7bf3be1c05a699fcbbf50a7a20e48f30d8182a1843",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc4fc040aeaf971f795ccffd64f097d2543723b4d8636ebfd30529ee3e8eeb8d9",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9455253fd607a33f9c7ba2c4553639b34ad2db88960969d35712589b2e8878d6",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 207,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe349dfb6c36ecfad47ba62b907f76051b0c82617b1e50eb3c0e6030cb804fc6b",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 208,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeb55c903a748b152d6d6413e0dee14eb3e18cea1ba033379fb11ddffd0d4f21d",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 209,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4a06068ffe84b3693fadfb81d7ba035de44765e5497d1200deb6d9dff7a6e6e1",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 210,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xbd45dae60102bd258f8bcb0f88dbbd3121108f6eb795373d423701b09f87fb96",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 211,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x6f51f453e95ad4e43aa4f3f527d08bbb89bd80bf3fa0bcd7026a671846b2ddc2",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 212,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7df11bb5de80d69ef87aa1d39088556f54254e16748773165771f2d741ac3c25",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 213,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa1a4bd120429e237c588d3449160fe1692450093c42c02c61029dc63d2012c57",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 214,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x42e4dcfb4a9d8e9f3e3655a107725d3196ce66f5d8e1fd17d093f830d3be0aed",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 215,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x877dcdf23e4739cd624ba7d1d04cf31ffdcd5373e38c8f914872900a921a4791",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 216,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd001b60a4cd376c1f7d3fbccb48868bcc28b7399714cfee724ff78f278cbcfc8",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 217,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbd1e5c08ccb97f69ccedb149cea5b81f4019ce6c1fc4b895c0fe48bccd588ef6",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xba7ddf0c8202e4ca34df5a5d4049f0c902c75f2df406b3e32326f2ad5e7b7c7d",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe8b7a0a1bf8f734209166ae94faa9b5906665c5de8ae6a33b8e61ed3f9243ffb",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9df0bd52b7fffddbad4c7fe31f21ffb61bc8547d0b7795f9f5653a5ae5da68c0",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 195,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd95fe9b3a5572a54bd62e917e04ef450957670b3264abdf6059088497cbd1f9a",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 196,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3f7fab1375cc15247d8aeabfd53e802321ceb4dbc79647a6b1fec5eb030ead6b",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 197,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x933956ed5cc6863ad8eb0af3363cbaf084eb58495f4fafb6908d69a64eca4323",
      "assetIds": []
    }
  ],
  "solcInputHash": "b42a863a795806b4ea3a8f05dfa42539",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}