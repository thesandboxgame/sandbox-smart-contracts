{
  "address": "0x5A9fe5A9E3180f0f04a06f1AD36754dcA937A34C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x47980b146ff68ed3b933b50d13e047e26976f316202e8db6ee7b09324bbb543c",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0x5A9fe5A9E3180f0f04a06f1AD36754dcA937A34C",
    "transactionIndex": 8,
    "gasUsed": "2668393",
    "logsBloom": "0x
    "blockHash": "0x02f61c6554e61e43b8bb9cce5e7e1ad5f8c37e790fcbf256b8b4c752f18e4ecb",
    "transactionHash": "0x47980b146ff68ed3b933b50d13e047e26976f316202e8db6ee7b09324bbb543c",
    "logs": [
      {
        "transactionIndex": 8,
        "blockNumber": 43011831,
        "transactionHash": "0x47980b146ff68ed3b933b50d13e047e26976f316202e8db6ee7b09324bbb543c",
        "address": "0x5A9fe5A9E3180f0f04a06f1AD36754dcA937A34C",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000592daadc9ea7f56a81de1fd27a723bd407709c460000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 26,
        "blockHash": "0x02f61c6554e61e43b8bb9cce5e7e1ad5f8c37e790fcbf256b8b4c752f18e4ecb"
      },
      {
        "transactionIndex": 8,
        "blockNumber": 43011831,
        "transactionHash": "0x47980b146ff68ed3b933b50d13e047e26976f316202e8db6ee7b09324bbb543c",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000029d4baae16f88f00000000000000000000000000000000000000000000000f2cdeb0b32b9bb42200000000000000000000000000000000000000000000355e761ae8e5f1cbf28900000000000000000000000000000000000000000000000f2cb4dbf87d84bb9300000000000000000000000000000000000000000000355e7644bda09fe2eb18",
        "logIndex": 27,
        "blockHash": "0x02f61c6554e61e43b8bb9cce5e7e1ad5f8c37e790fcbf256b8b4c752f18e4ecb"
      }
    ],
    "blockNumber": 43011831,
    "cumulativeGasUsed": "9794590",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x525129b95bA89B9800e47ef3dc7d23fBAd27b1a3",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x49c4D4C94829B9c44052C5f5Cb164Fc612181165",
    "0xa5Eb9C9Eb4F4c35B9Be8cFaAA7909F9ebe6Cb609",
    "0x3458fd9ca6e6657338018e6be25057e6edebe9a5cc4a73f35f323b0f06dc35b1",
    2017915200,
    "0xB7060D3FeCAC3AE1F0A0AA416E3e8E472257950e",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xB766Af2EfCB61bd5a261E007D8866f005E305D5d",
    "0xAc3ff31f526Af7f386ea43649e3fa67e329AeF93",
    "0x1d3CE3489a064aEFc9928fe08F9d2Dd968F5c969"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 288,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x988554e7d9c55e6c30ad78ab9b41a85d996bad6084622e6eec3ca7a4c225702a",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc43e763fe73dce94e6bde102684323ac0fdbe29b397cd3bc1f61202142debcfe",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d5b8e698f0cb49711592a45b93ae5d44ca84307c0f6f6519ac0ad4f4264286e",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x140e5773c0a2e0f14119deabb803cce51dd1cb91309d33b6887170142eed9486",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6f7033b71631b2ef1cea250acf2e6794f3e9c8cc5bd27ce5de4ff57751ccd88f",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdf3b3bf78c34b44c7d36e8d819777a9069b733e5927eb1097e6410f1c59d71cd",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x19b1a9e0b77f416808d95d0f05f6fb03337c5fdff7ef3fa48a3228026f948109",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x132f1db9f55feb8b1c1e2d4f1afd85c26af2baa01b15542845f271129e7da0c3",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x60e5df81a79cf1791eea5b4b85b3d6e75f86b1f0b6b069fa6581daba460255e6",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xffe966fc0cedc61ad58b471aa6176beee003a22b38433e0c9fae1866cee14b62",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x13485943bd30760f9c55e40e94b86caf021e23cdd39d4e72ceaaa617f9999fc1",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4cbd7a194918cc456d24c1e94863ea51291aeb8c209c90498b477615ec58a7d2",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6d930c73ebac25360fa93daa57809e29880046fea9628268b1dd1ee417c15ac",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa5ec7e6f5da72108171a0804870b02176d56841a2d254432e0af31bb574eaf69",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x76ba069841c48319df8fba979755191c966cfa2ebba1c417e57aeca468a34bbb",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd214751489ad5da2e62e1a008fcd84eeef612e28695df642e9c31cc54be058a7",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x62522615a466a7927b91a8cf7260bdd39dfd16b40826ffc2abe036e952ccbb0d",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8772e0f07ad1a0789f214b9a72b174f5f06076b7467ed028c760666ec0a9230d",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ac182f992647e3406680857fc32491ac4a5f7d0466ea23bc1fce12747d15c27",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc31908eef9603b00945d02419475156fdd4ab955785aea53725b60f79c54fea8",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2fd845a2fce83784542e4ae2e742b382f1af6ca78c2bddbabde38f06f941d593",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ff6b8b0bc1628d6b9c82848995a073ddf3cb11f35d18703e9c796235142ff13",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d94b8622122b9d9e033b003052990502de182af456b9bda343527f137f6a27b",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0effcfae9b915cb15d64d89ffdc5af330c68a6e1a0aba8948e7bb11a6d3e973a",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xbd1f4d07a5b42df0ff4819958868934d032ed2b468bd991bd7e16907bcfc8b8d",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x96c624b888eb868973a58f379427f6595505d31d84cafe1ad5ea3ace69ce4f9f",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc5a499810e0a0d11ae6a7f50356ab929687b82db57e8aebacbce436bd196399f",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x38aadd83460cb1256257ee7382f22918d3f49f94fb643f912ae6b5e5a059caa6",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61699c063110e9f0a3bd5eb38658ff8a3853d5d43674f0db8790689755f22ddc",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x64f1c18b3296627f4dd0bf624500dea0d4550ed56100ad19069782beffc10d6f",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x41e892fc8c3f033062c6cda0fce5129f32e734e00ff240090280356545a728d5",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab6aadf0d61c582cb6bfae95bd7d6ff07ccccba5463ca61365471085816c0840",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x828f0708e29c86bf9d72994149f748276709f5446a5aa06b380163d3c4d0e3b4",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8bc20b8f3b72310f595185386325f86e8f055d9fb2f2c14472c63308e98a4efb",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x10b97e54b52efc65ff9b0aa2cc9a37ada5c43f06719f95967cdbf40182303059",
      "assetIds": []
    },
    {
      "x": 289,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x76cdb966c3b8b6d0cae5443788bf048f3554e0e31df5e2ca0f7307da9e8df43f",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3762e62c461b27df83e9e05bcdf579c7e5150db4d4b17c867f6d68cdfd1b8a99",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x68ea974938d11a6b4925016e40b4bab57b56a0736e8c4dd1278d53754bbd3210",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdacc887b41355095a7928a67f413f792aaae3a609d637e392994cf7cd065d8ef",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa26747430b9d4dc06bd8f365be19e6adc7bc9e95b7ad949878a7cadc6a38effe",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe19c8ce36c777bee74332aace35fa5f1810e2f8cc5c5dfe82864c2a08b9f8627",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe65d757c7b9a623c7d9985d107d1e4b4351b178f60cf5ee71da44dfd749eff06",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d615ac10e6298b38b711113742f159d1f3e4ec76cd10376f8a84fc8adefdedd",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3f34be385f99106d602ca44b501ed5db30d7eb0221e6e773257268dfd4979139",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe4f3c9f666074ff4e8ffb0f3d10cf93e002ffd65c004f317db6bfcf4e938fe7c",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb481e1d12dabc80e230b5042b0c150d25506a3fe7541733aa0b24a183a8c01bc",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x975d7cfaf9a0f414304440dc9760090cf41560b39a187129e5baa36cc5c5da13",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9eaf838bc27a8528f679e7745eb36c5520696cc4cee2b86269fb6b9c0927281b",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5daaf77d7da1955d220826a341488a01990ba4cab6698b35fad6c84603768677",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ba418cba12dd04e273d1920d5cb5179dc0ce02e0702767f3998ebd3190797bf",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x21c4a21b3eafa6b40296291358cc3608f7212f0c1764a5e5f49af702958c8805",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x150941497de6be2dc8c7daba131a078cacc2fc2866baa558af2d34c453f26575",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa7d4c1e005617f022f4bf6e977f351dceff4a62312e3c35d95cbd454ef2171d2",
      "assetIds": []
    },
    {
      "x": 290,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xabed674351c2f1f385ee406657b033111853c2362d137a579a4be25ea8f7abd6",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0d83ca781f64582df86cb3ad06669cea689c9531b9b5e89b1dac80c022df30dc",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0ff655e7ea1c462f1ea6f1f782c30955b35f2f5116cf6b75ab57a11b3a56767d",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xedd06b1c1e07a8fdbe40f9fb3f5386d408af4fb75029d298d05efd3f65e2ca91",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3eb5e9846e56697ec8cffbdfe6d917b17fd84d05fc720753654eebef6239e042",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1ec98f69b7ed15ab3e26e91bab595d98ae055ff55f59d241b9e033f79a08d37",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe7d44291ffe782db8c0112460ad96f4ddbaf3707f1d6cd30f756b21577497a50",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x959a9cfd7292b5500f2cc839596bfa10ceb5b30eba7f4f052b8e2cea18f15199",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1631cead22567618627b85861099796ba3ad649d0d246e1dab4e15bfe2d4b7bd",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x99cd04e12b37b1a62f6d3821b95d1463ea8c2a20f9ca71591d0ffd1198803e89",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8671e4f1160cdc1df6a2319dee2b6d3c0fa7190c77f06e16a91d61d869c779cc",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xbd63cbdc6606dd55073b3b5b92c187b485a6dfe7b8af0fc4ffd1e13ee35db392",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0c42d13ec7ab66836493d2f99fe68d48dfd8cc867de72027ef2e1b2540ca81e8",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4e90f47c7bba319557c5fcb2467594932278c383d3945d342deabd52907a74f4",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d0f33bd3866e1f5aaaf7fd03bbfe42d292ae804828e12547e3346f93037fc5b",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x59e9dd72b22ea9421d395cd8bc952a3e0762c1e161e442fc410a4dda3ccbdd20",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4f80ec656be2cf7ef2668248e09402f4a5efc4cd49d094abbe5ae270efad2e63",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x671d05758e41203168e0145cb39fb3046c3dc4b44161cd23d058df4a0673e406",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6bd78b1aa1a531ead87b2d0e0e06caed262b8ba59fc23cd25b5a66a84fb490d2",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x800f827eae444766925fb299d92543f9c54187bd8544315ddd01bc78713428fc",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x31ef6f0640b26cb04b6f8a34cdb6100d48d7d7de506df397f169cc16369012c3",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x509bd1b969845b4cd096221b16474e5e33dfe7cabdd89f58e724abd49a7ee1ae",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1aa9e7a52261119147cfe9ed2e2b596cdce7bd593181d7f7196491e024c9db8",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8bc01e60203af56d7d87ba885a4e8f379d56cd64eafb72a0dd054467755cafd8",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6cbd0e2455123fd7044e4aa99539d5f10b8f2920d45bef6fbd35c2bff165c8e7",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61b74a230042e97bb7d17ea17f4b7b94fb14b104d793131da880c27a9d3ea8dc",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d16890a20ea7da4ab46f936c9b4999ae664e33d31442e5b4ce1f772018112f0",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe8d8e9222472cd987addf54be15ba2430a6604d43065d35baad5f1995a4428e4",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0124e933f83151872334f86b55c84d63a1820f1bcdd5cfe12849ea030edd3c67",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1ade90c1039b635e9ea4a2579417caa574cb5e0f3511d3e716ce99506b0ab18d",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcd251ecb69aece768125a7e9dfbc0abfe540782299e3f877cd9e1b1b1f5decf5",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x563cef9cc09486b9314afbb0307a5fbb207ebc13c3eeff14f282bf9a5587623d",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x279528516d0cfda8d12a8fc93375d60326bbc305aceee72a025a370efcad6e82",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9aae23749fc378ec3779f778397a55187dfde4afe6a8ea1ed413867467b9c417",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x92d26c4e651bbb9b436bed2c11956de59c347ed606d715da5f0e4e447f9858c0",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8bda461be04b3ec46082af3cc194eb749fcbb9ec31128336e1d4d93886f74792",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x452f1d41adb6bcf445cb70467c28be52b446554cf72b49647ec3e17f62df5a6b",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa642bfe46f71c5b1b137c1de325a828697b653866fdb94e87b917e302e7a793f",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d254ee616d03d85283192c3fb0258571eafd62639fc4b81e818b46feb946cf4",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab3d7b77a3e804e65fe2dab6477655533e4a0221248ea8bab7b61ba5493f55c3",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb6d3fc623276a8432045f07f304070960b084ecdda14d01ad9863929f2c15bbb",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbf390d4b9c701031046459d090e10de62245c3e1309197c634bf4c78284270b5",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe59c8c903dc92954dd3342bb3c0fcf4e7b6953db05015b5b0991f39b840fbf1e",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdc79cc2501e05985043f1afbc6123bb71d8a70e448a43c1d69e22e026db96afc",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d6c723b84af5af171bacb846715755dc550ac49343ff445e408663a6d36a90c",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6e69e10465a5735cfe8c7b79261b17fd358b2ffa214d1032805fab0a6a48620b",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xee0e916f7444ec6f3f39693c36ec4451187cbad3a5f8a035b89cb5c374f0b654",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac567e354753966361b7871a157c1d5cee56c21428915d15641c5f36e7b2fc92",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf750c3047a3f4db58a9127bc8dc2e0a10989677b1c93d1932409db49c0dfc934",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x671ac65bef473339debfefd07bffaa326abbbe65128076e8f5e014b6915869a4",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1e893a59eb5d3143b39a689e69ea85d00d016e58684ed9222ff4abd22e03311",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fcfdb51351bc824cbca626f0dd999dbb033e75d5aa9424177b1a97673d39c69",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x79955b0fa43cf821c00e74f50d3e3c3f04610925860a325059a9479538b9a086",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc8421ee9d887600b6674e30e5833cad4a007bf0011817f1bec8e1fe4b32b3790",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3c48a958e0df17f8009b436865fabc635bbac38532e829fddf038d5c4c86ccb8",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6362f83e876af1d52a0a0593ee7e6cc89dd8500c6d364ad720e64cea203d2f79",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x812337a96e2891edfcc4b3ebd75c65afd3e8842e29c7229d85ebde14eeca78af",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6d3ffce1a2055ce6ad941b1734986325d6a7b1eb3db527bd5a1d2a4bd9cb38d6",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x41a1bf5582006051016da905a0025b1640a3493bd23960b0843bce0681e4b11a",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9eadd2df17b08b82d470722bff2e51a7e439c2c9562ee8ffc4be4b3a26ce2b7",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd8ffd34186cff990af78497a159d9902b1f35aec5a62d438e14b2fc685ed0e9c",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x564bd40ebb8e27ab964d7479aabaacf9010d79beba1b913ea56311bc565f7490",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1f5efeae6b2c90251847d850d447ac373787125ed74f4f58cc3a82d2305b3f2",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb0dfd314f3771bba3c42d0f374248aaf22184a223808cf45df43a0380d8a380c",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x72f55a6c78cbe2f78db3d2acf84941fb8279f30c5c9774081602e03221489abe",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x968a91e3fa42c92bdfe5dfc39e4d4741e76b3e5f9bf764a5e4334d0dfcefbc83",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3994b54549467abac8fe69ffb624edc860ab32b220926f369466603ee89a6439",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5cbf32248c12467461b378332ea293f39ebc1e6a090f9c07de24340ae045efb6",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc776590a564376709addbe3c4d8e4bb74a60d2186467d51fdef3fbc85ac3792f",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x12ee7eb494308653bb4382a1ea3144d0b9bd90a1fd940bbc007ceb2abceb9f02",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x548074de6a5fc49a1511883cf5ee01b3348101870ec29a1feaea9f550b05e28b",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7f24033c019122ac1108f9afdc76ea4098dbff3d7bbf29870661aac133e6d653",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x97bbe549a0efd98a95138a35597c8bbdf734c755ab041c193dbe17139f0eded8",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xccd8f67f577a9c7e8e74ebd992ecc1986122b2cbd5ebe4000b270ceac04f6ff3",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xae9c2c248879e3331e1a81c1e1a39b4e9481e60025919307f4962697843d7791",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9140497d07397eec013db8c5181c4b5283e4b65fd175d9a15981c0ab7f8c0020",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5dae6821a2dbd5acb3cb50061c5c64807ce71b3581f0edccbd29eceb73c65b8",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x446b14bf72d02fec01c83880e91cc5e7c648374da2cef818e4739fe5476871f7",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa2babf5de48b634e836f00519b17ba129d1826ba42d7427224e16e8826aabbda",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa877b407ab5df4304e97a9cf015d7ebcf6097f5719132fff1b66fc4bf8f293a",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf921740a25b5387b4dc9e8815a7be0d6509e6d87cb0aa944ce8529be6df4ded4",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9f10ecea583bc8b2401fb6bcf208def57f48c37d5bf9b4ebc4e9bdfdf5fd08a7",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2e32abbd74d0e973b9a607d2fd7b60592475dbbb35a7ddc363871ee550133f30",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe5ebfcc3b0f429e6b4e86f244a0fee3e3b6fa954ffec813f42bfa1439c4dcb15",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8f7d6926aa0a5997d567ab132a186bf6caa3da4a07a85ea22c2a5a4394b19e79",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab767398c0e7ffadcecf47b58693432a9f1ca4e99cdab2b2b2aa3ca1ff8921d3",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5afd822d2958c565c54783b6c78322357c4189c24082b591be830c7653332a09",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x88cf6ac2de06b0399d48cac195a2f4d63b1def8d4a1903f6fd21af6a01ca8644",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x88c651f23405ce8c2da5a15bcd27ee78860d61820d780f8df7021001991a1424",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa7992e8e5ab93ca1a2aa8e874e28ca1e608527ba173021083f001c827d4445d8",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5746eaba34fcaa218d7d42ad467a6cbf085bd4740ae6972046e6d3fc9cf0831d",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfc8b936f32faabf0e7a63bb129998952b02df6fd1827ca49aa74af588d6e82e4",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x13875f5b783bc8509fc9a761bbcccdad81bda3845faec14ff7575efbd2ea354d",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x42e6f0b628f75b302464a8c61cc2c07b075e0af76efdd450e5b991e0f7c4c2fd",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9338400b664e6aae07a834b80c2725df3500bafb17cb108590b4a7c99ebd2704",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf615c2d1ff0de79e423bbae02d856d431bc5a4421eba88720e35cade79f127b",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x37c1af779e005ad8ba70faeda6e6d0eba42493c5633a1453deef6809059fa9b0",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x94510b6bb81a8a0c675fd3536f42decf7d2e6ff6a433ddad505d17a9b44e9051",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa36386688ea52a94a4b1f901b60d6e48c19c19f790cf99e000cae4c4be3fe1bf",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x64cc76d0e6ef78ee3f257601dfb410a90ffd25ed7f6a936488d84510976735ee",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3fa39a42eabe3c56f00c9b2ac63c9a46cc99c9f130e3e7ffb75fd2714bf211e6",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcd8b4f47e17e4b1a4e90ba54e8bda4c0f69bd6fa50540ba4ff239e10ef0010b8",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x534f48b6cd744490cf13f0fd4b0c410d025a80f4e44da707d252dd6a21f8eee9",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1b6fba595fa6b8d6061234529d4694160c6674eff3b82e2a37e89c8fe1c81188",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x32d13b61f2744bb0a5a9f452fbc379fad96159beaa884999db7455782fa0a94f",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17539d22c7c600b16e1f9624240d7103896f7a1e8b93d1ac57eb59d40fb53a57",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe611cb47eb826352417e66a04d9b87c421981cb8e1a67c2563be7c5ec28c6fd9",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa32cd86dbe9c3e7196e785950acfa5f411c809154b6d80c906671af0d4baea30",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcecfb7c6a5f70d3d8ae7c94a6de29c72daa5bfb85ed05c90fa4ea7882d551f1b",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x900cfaa47c78a0a244a333966c22c7b2c3e102ff6616584456ebbf29984583f5",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x881204ea23eb39ea9dfff2955f584f6a79c560a116ff28cf559739fc01524da7",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8f9b75b7b76317f391738c20af2dc51688101d4c169843abfa94c874206c5133",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x04a08d7262eabede6812295b7979154d0e6dedb62f3d44eae521157861e0b96e",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6c519af56f80940bc98e35da123aeb72628fc23c163698fd22936a5245b4fab5",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5baaa2f6e5b99654977d4e47bf351352614e850f39d03d05cd1f4a0249998e3",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x90e7b5fe453d6439625ff5488cce3e020094358c1bc659c26dee80bf30028af7",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf82a563fc9adeb61ad61a535ab722a137cc94512229ee3eddbfc7ed362fcdd89",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8dfcaee9b68e0d94b54841f8797c54061a46c7a17e3005bf8904343e74b0ca45",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd8c0968b0e179c1a66ed1e34e2d1a26f40abb84f50c1f411046112230f41248d",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe3491630654762c52e42922a9909c84ccb549d68ebdcd23d1a41de7460170ca0",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x874f029fb094c938c368788b43fd4f2da893b73f86b9e194cf93dd628d9ca4cd",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x32899bc4f570bf6a8146a185df7eac3d55d7a3a8e44b2385b34bb10f65a3e813",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1b3984cd1c2db2a99e793fe5cdd6f91f894ea0be9ecc49b1bd8547c5a8578232",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb8e2a5d0e4784d72f9fe31cff0e81ee4d80f05691ded85dab1a80566e3e8d49d",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9da1f0046597c375039bf2c66c542fcf0dfaec2b6335a4411907372a1fbd765c",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1d8d0531a5bb95ab5055284325db808ad20cf1f4f26834c6b84f85cf0969937",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf12cddbcd4da7103047c8442fc20a8427d5890cb2cfa37e31d4f33d86d1647b6",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3ff2fd35ca0d99f958ea8733561fabd9f442f37738794cfd7cc743df4ef06c55",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc0c4db39bc7b94ad36dc1d1288ad5a178e2afe738a74da3fb2bb80236e917bf3",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1d4f69eb37e53a2b4575d894c31dd2b3c5facb7519aa80a895459f4483f25e8b",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2e48178ac08cb8f7ec7f5c71f21011e04eef5ed65d48a6ea070c517923a4b929",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1093d4226d9337274481d47410651e32c99db55b082cf68ad887b8fea44d1ae",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xabc84d64bd4269a5a140e01cded3142719da43e24508a02445e7d53780e89d78",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf89e7e7a1e630024bfd016e88563511868b38f764f5a2c5f048362e028badf44",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xecd934dc985949e2b494cd1d1c5e2db67c4f13bc5160a91d3bd8a407daf451f6",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc03af3058e8b2a8b01e883001cc9e1d05876d2eec024c267dc4f728ceb8529c8",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3528045ad9d08e66ab6481ad5ba5ce104f2b22616001c5139e6d74326af9c2ed",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5e3073509e11c491a949c1d3fa8243838bc1170617038a9ec070af81ac4b44d7",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdb19848a14e5b1f0cdf708d0bc461f90a5ef04fb885f275f6849640bd903eda5",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x049ad08637f34a4546078ea068b66f032877d78556aef1ffac68e1411e3f5981",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x006631e5dee6e07df59f2daf0722cdea71199f631577aaf6a9cf46b13605d3d4",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9d3b3be5f03cf8634a519cbdfb12a5e02b5e59e674464f48c27e25551ee9b23",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x909a3db48d276154d3175391c63ec7e4a601041e2921c84361eb085d85082f03",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1f7c38b44378e7d7b65c89ac9f01d479092ff52005f00ecbe7c99cea30c9dcd4",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6738b6d08db62b60b56480215058abd8111131634f19e23f3ee204c6a97896a",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0579e556ec37aed96276ad87a9d8c6144dad8da5bf0d7f0655597c6ea63baf07",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52793829f33d30b54398a4f9b9323c24fe81187eb8c43463c14d9f89d670ef23",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaae63f62a26258db470d8e936e26eac74dd0325ea7f4983abd18c15fe7d0cf97",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa2e64d3d40d4d5b9f25a6666d78d6003bd5b55eb007ea8f543f1634d946cdcc2",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2cad31210899112b3e1843fb2b4659157c32d62a3013de0a935c6230ca591fb0",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd63776b7b1bf3c374a2c3d74e61c770d69a22cfd45e9514e72c93f471e2ca69f",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 333,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc95554f43a0e910dddea5029b0093af8e6a7a6f75a1290d84a1d982d40b8598c",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 334,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaac0f9466d4de2438c0b2d93e56964d519ed2cdc4070069ec7bd313a81b9e11f",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 335,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeb80eee81af621727da88beb8e1d9b12bab13248ba63dcab82770b9836e46b06",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdf383de7b6ba574146de89bb3393c0d9a459f6f5f3a439221908d2ebd94d8946",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3cccc4525a55cb5ba68d809744ff4a326e156463e793861e9b2fce961b3d4d8d",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc29aed46c402a2faed56d87bd742dae2b18168d5b9dcd2b501e2a1d46729228b",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe707eb4116dcb368af16e6024133ee1430a6f129f51fd444c92ceb0049a2104b",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x51b2141e3f83c3d9f6914df483aee22c2533220d711fcdb32727dfb20cf4884d",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x331d2bc78a9b1371c2c70c5d4e65ef56c499bef35924bbf68d09234b9300c84c",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x90f2ca5d567f4e2dda7299d9d363c004a6f77582386a870878f8c388e725c521",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x10ca98487c493c8c75708305822b1ed60625c63c2d1214b520577fb52e5c527e",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfb7f9ce83e5925f02b83cdc48636dd89d7d0dd1c7b1fc559435c89ae5db2400c",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x649c5aa673222cd59d9e38589b0c5dc205560d2083b3b46726a56783ffa61152",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe2551d1099931670575418651387259888d418c8525b158dbbfeb55aed7a56f4",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xda885d9366adf8d47cc57e16e2941e8ccec4200145d752ec914bc0e88b098c0a",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x298065fadba25692a4f2dd64b0bb150ab38c9ca023126490ad58e666796d0e44",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1958dd3a2f4d24971ea5566a63987b0bc6e8f0db71dac26b6d8574d08e04fb65",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9d9333404d1adc3661a90473ce69040dcebd4978701951cd6513102ac66e55e0",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 330,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe83bc623e75da66d0a00f840ef5dd550b4297ddf05a2bd9a54a3197642a3dcd8",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 331,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1d23e27a4e2ff00c9bcc6c359e808ab3abe4de8081f8c8e90f8b0069b2253cde",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 332,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb832bfacecc8526176bc57fde80f9c8b8a941edae0c12883bebbd59957aa0e2f",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 315,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5036f125a6686b8fe7dc079b1dfeae102f702aa50f7a992447d32fe733b807a2",
      "assetIds": []
    },
    {
      "x": 288,
      "y": 324,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xec06d2cd1b1d058a597234ebddd4f49c3811eae8946e71350740b2037feb8a00",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 321,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x205ccab617ba54bdcb95a4ead769726a063156dcc165bc4335b9b24ef46a0c85",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 324,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x30286647a0874c3c4104ce46712e2d0bbc9471f615c77a2a02bd04188235c15d",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 327,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x054b7ce964bd7bab28b437dc1398db27068447d2050fb9d5caec6ce335da104c",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 330,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x979b25ef752dadcff51ad42ac41452e80793174ad67751cfa568dbae135de01a",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 312,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe884e300523e070b0949eded48123e7638c1f55e733c1bd8fb336abf9d09a1cf",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 315,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xde8e08a2edd1cd7f51821154d2afa2ce0a2c59cfe695089e141891229a128b6d",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 321,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xea6ee4547bccde86ded598f7f1ca9feab5b54230b70bde2647107acea4667936",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 333,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x087e66f0ac2fb6dabd29d4afa3174688e27f53966570b5db04e4c6b9271ac9b6",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 315,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x007c727d919bd1969f732febc1a3e61ce8066f5034e4e1916295b7470b1e8a85",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 318,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x809803a7888545b290c3056ad83c6e8aa22cc64c073ea0692a5fa8eeb91940cb",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 324,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xad5399a629e53cecc214508abc7cad18d87bec92b4cdc67f119557243dda23fa",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 327,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x984465d68a3e470c315d765763ea3e9fcfb2207b0f35cd266b8b79ea5508195c",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 330,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x654649dc7237f951acc2a83fd7bd4f604be1d3bccfccdbde2cc06d350e2ccbb8",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 321,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x119bc1381599155c2651994bf9172719753ad3db229c962dd3527c08a872bc77",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 330,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9b8be08fcd7065576463620bacc6eb19de1493ac72fd8318447506b89d9b7eec",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 333,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xdb403aa7f10b9e079d07c2dfe3bcd11f0ef135de722c9e8480df24afc8c23c0a",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 330,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x444ed07b6b18bf8daa252bb826d2af1ab6178e7bab1a0d3f2ea19528f4228e0b",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 324,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xbf6dfca4a53b6abf0ae87fbe2561dda3a73425933a4dae7e6c33e9ed73716491",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 333,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x52836b8302fd0aead69af895d516747e9c0597ffe12fa8940009a69529ef5aa5",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 324,
      "size": 6,
      "price": "32772000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x08838cc2ce240b49c39c19d6987780f48164c734c9915407af2ff3091bf09e3c",
      "assetIds": []
    }
  ],
  "solcInputHash": "b42a863a795806b4ea3a8f05dfa42539",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}