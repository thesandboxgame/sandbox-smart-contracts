{
  "address": "0xb81404fD3CcDbAefd31fC1886f9598b2AAcbfAdE",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "Faucet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "Limit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "Period",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "addFaucet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "canClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "faucets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "claimBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        }
      ],
      "name": "getFaucet",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        }
      ],
      "name": "getLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        }
      ],
      "name": "getPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        }
      ],
      "name": "removeFaucet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "setLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "setPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "faucet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7b22c098d13e48f2b8c97088ab8714c825367d594aca78af989bc73d21583002",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0xb81404fD3CcDbAefd31fC1886f9598b2AAcbfAdE",
    "transactionIndex": 2,
    "gasUsed": "1157362",
    "logsBloom": "0x
    "blockHash": "0x3b47e3415b71a02d4697ae16a105135d1c24777c0ce3ba01f8a09df7b63db26c",
    "transactionHash": "0x7b22c098d13e48f2b8c97088ab8714c825367d594aca78af989bc73d21583002",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 27650847,
        "transactionHash": "0x7b22c098d13e48f2b8c97088ab8714c825367d594aca78af989bc73d21583002",
        "address": "0xb81404fD3CcDbAefd31fC1886f9598b2AAcbfAdE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x3b47e3415b71a02d4697ae16a105135d1c24777c0ce3ba01f8a09df7b63db26c"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 27650847,
        "transactionHash": "0x7b22c098d13e48f2b8c97088ab8714c825367d594aca78af989bc73d21583002",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000007b5a702dc4aca800000000000000000000000000000000000000000000001e934e25feb5c9fe310000000000000000000000000000000000000000000013f94da7154d2bce24c900000000000000000000000000000000000000000000001e92d2cb8e880551890000000000000000000000000000000000000000000013f94e226fbd5992d171",
        "logIndex": 4,
        "blockHash": "0x3b47e3415b71a02d4697ae16a105135d1c24777c0ce3ba01f8a09df7b63db26c"
      }
    ],
    "blockNumber": 27650847,
    "cumulativeGasUsed": "1490439",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "29745d3a49235a031138cb1ec1b9c63a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"Faucet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"Limit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"Period\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"addFaucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"faucets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"claimBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"}],\"name\":\"getFaucet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"}],\"name\":\"getLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"}],\"name\":\"getPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"}],\"name\":\"removeFaucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"setPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faucet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/solc_0.8/faucet/Faucets.sol\":\"Faucets\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-0.8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts-0.8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/solc_0.8/faucet/Faucets.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable-next-line compiler-version\\npragma solidity 0.8.2;\\n\\nimport \\\"@openzeppelin/contracts-0.8/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.8/access/Ownable.sol\\\";\\n\\ncontract Faucets is Ownable {\\n    event Faucet(address faucet, bool enabled);\\n    event Period(address faucet, uint256 period);\\n    event Limit(address faucet, uint256 limit);\\n    event Claimed(address faucet, address receiver, uint256 amount);\\n    event Withdrawn(address faucet, address receiver, uint256 amount);\\n\\n    mapping(address => bool) private _faucets;\\n    mapping(address => uint256) private _periods;\\n    mapping(address => uint256) private _limits;\\n    mapping(address => mapping(address => uint256)) private _lastTimestamps;\\n\\n    modifier exists(address faucet) {\\n        require(_faucets[faucet], \\\"Faucets: FAUCET_DOES_NOT_EXIST\\\");\\n        _;\\n    }\\n\\n    function addFaucet(\\n        address faucet,\\n        uint256 period,\\n        uint256 limit\\n    ) public onlyOwner {\\n        require(!_faucets[faucet], \\\"Faucets: FAUCET_ALREADY_EXISTS\\\");\\n        _setFaucet(faucet);\\n        _setPeriod(faucet, period);\\n        _setLimit(faucet, limit);\\n    }\\n\\n    function _setFaucet(address faucet) internal {\\n        _faucets[faucet] = true;\\n        emit Faucet(faucet, true);\\n    }\\n\\n    function removeFaucet(address faucet) external onlyOwner exists(faucet) {\\n        _withdraw(faucet, _msgSender());\\n        delete _faucets[faucet];\\n        delete _periods[faucet];\\n        delete _limits[faucet];\\n        emit Faucet(faucet, false);\\n    }\\n\\n    function getFaucet(address faucet) public view returns (bool) {\\n        return _faucets[faucet];\\n    }\\n\\n    function setPeriod(address faucet, uint256 period) public onlyOwner exists(faucet) {\\n        _setPeriod(faucet, period);\\n    }\\n\\n    function _setPeriod(address faucet, uint256 period) internal {\\n        _periods[faucet] = period;\\n        emit Period(faucet, period);\\n    }\\n\\n    function getPeriod(address faucet) public view exists(faucet) returns (uint256) {\\n        return _periods[faucet];\\n    }\\n\\n    function setLimit(address faucet, uint256 limit) public onlyOwner exists(faucet) {\\n        _setLimit(faucet, limit);\\n    }\\n\\n    function _setLimit(address faucet, uint256 limit) internal {\\n        _limits[faucet] = limit;\\n        emit Limit(faucet, limit);\\n    }\\n\\n    function getLimit(address faucet) public view exists(faucet) returns (uint256) {\\n        return _limits[faucet];\\n    }\\n\\n    function getBalance(address faucet) public view exists(faucet) returns (uint256) {\\n        return IERC20(faucet).balanceOf(address(this));\\n    }\\n\\n    function _getBalance(address faucet) internal view exists(faucet) returns (uint256) {\\n        return IERC20(faucet).balanceOf(address(this));\\n    }\\n\\n    function canClaim(address faucet, address walletAddress) external view exists(faucet) returns (bool) {\\n        return _canClaim(faucet, walletAddress);\\n    }\\n\\n    function _canClaim(address faucet, address walletAddress) internal view returns (bool) {\\n        return _lastTimestamps[faucet][walletAddress] + _periods[faucet] < block.timestamp;\\n    }\\n\\n    function withdraw(address faucet, address receiver) external onlyOwner exists(faucet) {\\n        _withdraw(faucet, receiver);\\n    }\\n\\n    function _withdraw(address faucet, address receiver) internal onlyOwner {\\n        uint256 accountBalance = _getBalance(faucet);\\n        IERC20(faucet).transfer(receiver, accountBalance);\\n        emit Withdrawn(faucet, receiver, accountBalance);\\n    }\\n\\n    function claimBatch(address[] calldata faucets, uint256[] calldata amounts) public {\\n        require(faucets.length == amounts.length, \\\"Faucets: ARRAY_LENGTH_MISMATCH\\\");\\n        for (uint256 i = 0; i < faucets.length; i++) {\\n            claim(faucets[i], amounts[i]);\\n        }\\n    }\\n\\n    function claim(address faucet, uint256 amount) public exists(faucet) {\\n        require(amount <= _limits[faucet], \\\"Faucets: AMOUNT_EXCEEDED_LIMIT\\\");\\n        uint256 accountBalance = _getBalance(faucet);\\n        require(accountBalance >= amount, \\\"Faucets: FAUCET_INSUFFICIENT_BALANCE\\\");\\n        require(_canClaim(faucet, msg.sender), \\\"Faucets: FAUCET_PERIOD_COOLDOWN\\\");\\n        _lastTimestamps[faucet][msg.sender] = block.timestamp;\\n        IERC20(faucet).transfer(msg.sender, amount);\\n        emit Claimed(faucet, msg.sender, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x7f7bf6842589c42f59c53171e5adcd5218a283ee7cfc994aa9a8f11fb60bb0fd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80637254026111610097578063d7c2dfc811610066578063d7c2dfc8146101ed578063f2fde38b14610200578063f8b2cb4f14610213578063f940e38514610226576100f5565b806372540261146101995780638da5cb5b146101ac578063a617e653146101c7578063aad3ec96146101da576100f5565b806336db43b5116100d357806336db43b51461015857806353ca4c6b1461016b5780636da2147b1461017e578063715018a614610191576100f5565b806307229f14146100fa57806315364cd51461010f5780631ce28e7214610137575b600080fd5b61010d6101083660046111a7565b610239565b005b61012261011d3660046111a7565b61037f565b60405190151581526020015b60405180910390f35b61014a6101453660046111a7565b6103a1565b60405190815260200161012e565b61010d6101663660046111f3565b610428565b61010d61017936600461121c565b6104fb565b61014a61018c3660046111a7565b6105db565b61010d610662565b61010d6101a73660046111f3565b6106c8565b6000546040516001600160a01b03909116815260200161012e565b6101226101d53660046111c1565b610796565b61010d6101e83660046111f3565b610812565b61010d6101fb36600461124e565b610ac2565b61010d61020e3660046111a7565b610b99565b61014a6102213660046111a7565b610c7b565b61010d6102343660046111c1565b610d7c565b6000546001600160a01b031633146102985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116600090815260016020526040902054819060ff166103025760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f444f45535f4e4f545f45584953540000604482015260640161028f565b61030c8233610e46565b6001600160a01b0382166000818152600160209081526040808320805460ff1916905560028252808320839055600382528083208390558051938452908301919091527f4cb58168051e7385330cc9ccb76b4da2b3cb1dc8c94d1be3d7d03367d070ab1a91015b60405180910390a15050565b6001600160a01b03811660009081526001602052604090205460ff165b919050565b6001600160a01b038116600090815260016020526040812054829060ff1661040b5760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f444f45535f4e4f545f45584953540000604482015260640161028f565b50506001600160a01b031660009081526003602052604090205490565b6000546001600160a01b031633146104825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6001600160a01b038216600090815260016020526040902054829060ff166104ec5760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f444f45535f4e4f545f45584953540000604482015260640161028f565b6104f68383610f9b565b505050565b6000546001600160a01b031633146105555760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6001600160a01b03831660009081526001602052604090205460ff16156105be5760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f414c52454144595f4558495354530000604482015260640161028f565b6105c783610fec565b6105d18383611048565b6104f68382610f9b565b6001600160a01b038116600090815260016020526040812054829060ff166106455760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f444f45535f4e4f545f45584953540000604482015260640161028f565b50506001600160a01b031660009081526002602052604090205490565b6000546001600160a01b031633146106bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6106c66000611099565b565b6000546001600160a01b031633146107225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6001600160a01b038216600090815260016020526040902054829060ff1661078c5760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f444f45535f4e4f545f45584953540000604482015260640161028f565b6104f68383611048565b6001600160a01b038216600090815260016020526040812054839060ff166108005760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f444f45535f4e4f545f45584953540000604482015260640161028f565b61080a8484611101565b949350505050565b6001600160a01b038216600090815260016020526040902054829060ff1661087c5760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f444f45535f4e4f545f45584953540000604482015260640161028f565b6001600160a01b0383166000908152600360205260409020548211156108e45760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a20414d4f554e545f45584345454445445f4c494d49540000604482015260640161028f565b60006108ef84610c7b565b9050828110156109665760405162461bcd60e51b8152602060048201526024808201527f466175636574733a204641554345545f494e53554646494349454e545f42414c60448201527f414e434500000000000000000000000000000000000000000000000000000000606482015260840161028f565b6109708433611101565b6109bc5760405162461bcd60e51b815260206004820152601f60248201527f466175636574733a204641554345545f504552494f445f434f4f4c444f574e00604482015260640161028f565b6001600160a01b03841660008181526004602081815260408084203380865292529283902042905591517fa9059cbb000000000000000000000000000000000000000000000000000000008152908101919091526024810185905263a9059cbb90604401602060405180830381600087803b158015610a3a57600080fd5b505af1158015610a4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7291906112b7565b50604080516001600160a01b03861681523360208201529081018490527ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd39926839060600160405180910390a150505050565b828114610b115760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a2041525241595f4c454e4754485f4d49534d415443480000604482015260640161028f565b60005b83811015610b9257610b80858583818110610b3f57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610b5491906111a7565b848484818110610b7457634e487b7160e01b600052603260045260246000fd5b90506020020135610812565b80610b8a81611307565b915050610b14565b5050505050565b6000546001600160a01b03163314610bf35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6001600160a01b038116610c6f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161028f565b610c7881611099565b50565b6001600160a01b038116600090815260016020526040812054829060ff16610ce55760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f444f45535f4e4f545f45584953540000604482015260640161028f565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038416906370a082319060240160206040518083038186803b158015610d3d57600080fd5b505afa158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7591906112d7565b9392505050565b6000546001600160a01b03163314610dd65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6001600160a01b038216600090815260016020526040902054829060ff16610e405760405162461bcd60e51b815260206004820152601e60248201527f466175636574733a204641554345545f444f45535f4e4f545f45584953540000604482015260640161028f565b6104f683835b6000546001600160a01b03163314610ea05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6000610eab83610c7b565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018390529192509084169063a9059cbb90604401602060405180830381600087803b158015610f1257600080fd5b505af1158015610f26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4a91906112b7565b50604080516001600160a01b038086168252841660208201529081018290527fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb9060600160405180910390a1505050565b6001600160a01b038216600081815260036020908152604091829020849055815192835282018390527f7e36e1729e318d46cf7730f56f5026f747619c9b99753ab94d3406292cbc81889101610373565b6001600160a01b038116600081815260016020818152604092839020805460ff19168317905582519384528301527f4cb58168051e7385330cc9ccb76b4da2b3cb1dc8c94d1be3d7d03367d070ab1a910160405180910390a150565b6001600160a01b038216600081815260026020908152604091829020849055815192835282018390527f359fffa2f40ccdf29fbc358f0ff8f349ab7bd62faf402ba5aa257f70b56f123f9101610373565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03808316600090815260026020908152604080832054600483528184209486168452939091528120549091429161113f91906112ef565b109392505050565b80356001600160a01b038116811461039c57600080fd5b60008083601f84011261116f578182fd5b50813567ffffffffffffffff811115611186578182fd5b60208301915083602080830285010111156111a057600080fd5b9250929050565b6000602082840312156111b8578081fd5b610d7582611147565b600080604083850312156111d3578081fd5b6111dc83611147565b91506111ea60208401611147565b90509250929050565b60008060408385031215611205578182fd5b61120e83611147565b946020939093013593505050565b600080600060608486031215611230578081fd5b61123984611147565b95602085013595506040909401359392505050565b60008060008060408587031215611263578081fd5b843567ffffffffffffffff8082111561127a578283fd5b6112868883890161115e565b9096509450602087013591508082111561129e578283fd5b506112ab8782880161115e565b95989497509550505050565b6000602082840312156112c8578081fd5b81518015158114610d75578182fd5b6000602082840312156112e8578081fd5b5051919050565b6000821982111561130257611302611340565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561133957611339611340565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220807bb6e17aa9f99801debc4fe74083ef6d0e19bfbd21f5c48f45aed5712d101264736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 539,
        "contract": "src/solc_0.8/faucet/Faucets.sol:Faucets",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 39133,
        "contract": "src/solc_0.8/faucet/Faucets.sol:Faucets",
        "label": "_faucets",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 39137,
        "contract": "src/solc_0.8/faucet/Faucets.sol:Faucets",
        "label": "_periods",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 39141,
        "contract": "src/solc_0.8/faucet/Faucets.sol:Faucets",
        "label": "_limits",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 39147,
        "contract": "src/solc_0.8/faucet/Faucets.sol:Faucets",
        "label": "_lastTimestamps",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}