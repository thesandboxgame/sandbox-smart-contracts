{
  "address": "0x75d334910044a082727F6A9C92ad12f638655a0D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8f0376cc5becbd590744c331d1af8969b4f56530136f6e5939b72a4360e7f73d",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0x75d334910044a082727F6A9C92ad12f638655a0D",
    "transactionIndex": 2,
    "gasUsed": "2667567",
    "logsBloom": "0x
    "blockHash": "0xb1d17b2878995b44f4f7186d56dc2438dc9b57e097c8ef1ea65dd3aa467a51ee",
    "transactionHash": "0x8f0376cc5becbd590744c331d1af8969b4f56530136f6e5939b72a4360e7f73d",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 34496512,
        "transactionHash": "0x8f0376cc5becbd590744c331d1af8969b4f56530136f6e5939b72a4360e7f73d",
        "address": "0x75d334910044a082727F6A9C92ad12f638655a0D",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000592daadc9ea7f56a81de1fd27a723bd407709c460000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 10,
        "blockHash": "0xb1d17b2878995b44f4f7186d56dc2438dc9b57e097c8ef1ea65dd3aa467a51ee"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 34496512,
        "transactionHash": "0x8f0376cc5becbd590744c331d1af8969b4f56530136f6e5939b72a4360e7f73d",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000001bccabecdae3ab000000000000000000000000000000000000000000000012773fde23f33b3070000000000000000000000000000000000000000000001dd2635ee615364faba00000000000000000000000000000000000000000000000127724117806604cc5000000000000000000000000000000000000000000001dd2637ab2c1232a8f4b",
        "logIndex": 11,
        "blockHash": "0xb1d17b2878995b44f4f7186d56dc2438dc9b57e097c8ef1ea65dd3aa467a51ee"
      }
    ],
    "blockNumber": 34496512,
    "cumulativeGasUsed": "3051969",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x525129b95bA89B9800e47ef3dc7d23fBAd27b1a3",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x49c4D4C94829B9c44052C5f5Cb164Fc612181165",
    "0xa5Eb9C9Eb4F4c35B9Be8cFaAA7909F9ebe6Cb609",
    "0xa3f30b7b36abf0a26826645a1bc73d09375d6c44d40ab68bdf251f0165d78f31",
    2000376000,
    "0xB7060D3FeCAC3AE1F0A0AA416E3e8E472257950e",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xB766Af2EfCB61bd5a261E007D8866f005E305D5d",
    "0xAc3ff31f526Af7f386ea43649e3fa67e329AeF93",
    "0x1d3CE3489a064aEFc9928fe08F9d2Dd968F5c969"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 291,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2b5c80d851f96a7f4e35049897c91dae77e0bcea06be6aee6af977460615aa2a",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5ffd19911fb31a3bc7b842b1bdc9e02f14aac6e6e1f5d3e6d26c1ac2de09c4a",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52c6bdc60fabc0bce59daca9a951e01bddcc1ce4376def3a4e2875ce0dc56609",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d590b7075ba67ee745ecb6205c94647b60225dbb6d070eab181e9fa22af4a6d",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6c94cda3b545341c87b65d684da63bfe7bdc48ae20a4043a19136a6c730ba34b",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x22f840edd9bf29d7c6fb6bc2f18b5080a7f6a110aeeba8b67dee5a96ffa32f63",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb38ed40dcdc611a9f3e1ebdb55cc5241f9dbffe26229a78b2c3397e760150dea",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x726ae9e317f12e2d4e851371e2aaed6dbddc309a8a8c11d05cd53a77ceba3408",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1290004b90377206640f807fc58a22277f05b237b38ce23026a13127c117752e",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6c2586a9631cf260b9de8638dbe7ebb7b6f4d679d202d3ff20a61a8a4254cc22",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa7a78c351b9ee6b7c2ba299565cc301277a5d474a79c81dc304c34a01379e0fe",
      "assetIds": []
    },
    {
      "x": 291,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x02a4144ab56f76961cfe45a5b5413379166eea3699c4a606be68222fc1b593fa",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x523a3e0178f3167b9ff85e5be71bf9921f3d12eeb278592e06c0266a96ff584a",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0bf0bc8149eb60a78160612408c6caf02325cd9efdedd0b42feda82a6ce79a3b",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e1a561a7be88101e187a8d11c8b0328bb000b133c1ca7c106653f04c90489db",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe3600b951dcc9ec7108dfbbfb6dd73659ef74daca195bdce09d258dd700614bc",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x39db5d08de8dae1bd22bdbbbb233369271f6d785dcffa406718ca380335ccdaa",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb4423c1f506163281172784587c01516679a5a374411826271ac256915703cc4",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x106099f3525a94c478e21b883b5b4a1e5e845750873109432e2489b63b25ba3f",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x25741250a4b66f954454037b1b32a788d47139cbf53983c4c1eeb9dff115e302",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd0504b89878cfcdeb81da446d013cb3205b83bd9c620ddd8f8ce94bf3d2a5f75",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4f33a4e6f56401271e17286e824ee319e4009d69ade2dd9b5e056b486496cd3c",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4464c196c402b82f0bf2961c62bc2b73d0add7a0ed4859bde98ec0205f141b0a",
      "assetIds": []
    },
    {
      "x": 292,
      "y": 377,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1db562066039b50fbc6cf80726082c007715abfced929d5938949ff0a3bf5393",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 363,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4018b78aebd7f299c48b58bbaf07295da6d52a5ebf7c1f5a51801af885e55862",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x65ed47723a526ead583c1d3bf8475e679c5c99963df0ef22e76bbc00759cae1a",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1af4f6c754e8d42a0d0a0c4048875adb333db07e6ffb680e95e4aada863a658",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x067d66ea39df29676f09ee53b247ed9dba15dccc4550142510a95b12b298a023",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x71670661fc8d06198c05d5285aa3a167a45c0b25df8c9575549b8fd8b9c1c96a",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xee0c597249b1cb6ec46b4cc2c56e605e69e8c0ba1662e0a45892ef58b071fedf",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf4a50cf8c31ff9b2d093ca8e4ea46e3e9c3c2850f4677bc2eaf4b323b6ead0d9",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2e7e068e4aded34f81427fbcbad2a55d0112ac059f3f4733b839ab2fca1b9194",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3e9a351b7ec8a68c7b46f3d3fda68d99d0fa46489a60e3b94fe90e019bec9585",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe4e1f05d54578adbedd9f8f3d81b0bd126b173b1d4280aed791d576302ca6826",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 376,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x336b6662289a83398f26abbb66ee5898a2c578b8c0f4ce8591457ae5c53d97e1",
      "assetIds": []
    },
    {
      "x": 293,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x22345886a93c966129000fc2a68dbfc3af1f6398d854c50f2fd2da607b977623",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x12af7ff848797abdc6a70418e3098b09a87ed094a0bd367595cb79351e54bceb",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x146111843492359effafcc05cfe9fd6f0fb0c7a87a2d44e4740d8442f2627a33",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 362,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x2bca6b8a9b56f46d743fb1c894efaeebcbe3dd13d969f32198257127a7fe059e",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x17a4a0064a525d658ac877e7488bba64eb8d8e2c5c3a713f80dacbc0af726cf5",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7d01ed85ce75455ce17b9b32de10701f1fa7669dbec2e1bb5c6540163d9bcd9a",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0571b030d8a468aefc6a466d0c10bc1c00a2366dfe9f41a4b8fad2f71386b71d",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2d751797b1a4c7f6ca286297202edb917d9ba07f028c5c221117c19cdf6cd18f",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xae2aee2d956de2f35ea7872fa43f9493aee0dd7eaf49596033e61ac400c28bb5",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d35aea8a37a2ca874efe8fef19305e01a11b77d895906ef232f26a00c08be2d",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x35232afea96438aca79d7233c2adfe18d923443f4d7a9aa493559e3b975ae5a4",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf77b078310af8c873e8e129fde818927174ecf8d8d93fd7a448e3d2a0f0b99ea",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcae10b17c5898d8aa18af6a0036e69015b4c2a6e98e1b53f2f57151df75e52e6",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x92c26460192678b5b856d5a241b869847a8218f3488826bfb68951e863dfaea8",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x400a22fd24a16abe38413ad07cb65eea3a5a206ed4b88e92037c8954d2d66f5d",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x457543e40b84dd2299f57cd6bc103d1762fa3338db39a0f9dacc23fabead4e11",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xacd96e4d00b3c413ccbec4822cfd269924752fbf42fcb0fbcc7e206f44d68067",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 382,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xfdf5446741f60a96d0e556e3bf30dd399b4165146934a5cf2f81170276836654",
      "assetIds": []
    },
    {
      "x": 294,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x15fe4ccd131db0070d1c29035320ed8c0e98e57c417253b9067da70a065a9f0a",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5a653e8329b65c0c6b955626050c6f7658e6baa781dda1902ea4960e80cba363",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3ee64a5a8531a0a8627cad93a0cb27cb8b95c6de6118fe6eb7b0cd3a97ccb19a",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x45c7e4c4edc5384d9cbaecaec87232af328115390f9c53621188d1208051ea19",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x70cc809f0633feb7e9dc3171d65468c7afbb4c35ac6cc35496eaaeae29641e2f",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2167b3689d8e543d8c9203cd85f6d9bd0a2181c5cd4a91c54ce058d558077b7a",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 365,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x18e5cec24f32d701506a84c7876683d5c5c2b5d3924c1affd660befce93a3fba",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x09c720ef7a909e663c03b916fcf6bb8464bb966f127d52ba3bbb39ac2fa6c701",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xad3aed8a0e58259c3fb86e1e4d04e8d890c639ac3872b733066cf2732e8a54de",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xabc7be794fc00bca0bd34431b254965569c495236ebef70754ac427bd6b1712c",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x432f02875f6cbbc48c56512372dcc3504a74b12bbbfc6ff245f65cc6a96afdb1",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe062340cc09cf6b621d1a2730ea47ac8b23a94db1469e8721f67675052596eea",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa75dc2879935aeff779d93e01c2616a9889e9ff6ce41739b3ff5b8d898981c4c",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4deb6031ae0b512bdc488d5b0a534462741526541e5f51a8ef973fb261a50f8d",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8b5e5ff1c8e92e5532c52bc8f6a6165c7a373dd4488bcd63121c5a19478e4ede",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8cfa1730b19634a383f1853da8d861f930ee5f1f53eb2704d2f7e8f4f4f6ec6d",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x01a28942895aff0e2119f656177ee0d1a807ce9ca7bc61bd1f0c6f4367a2698e",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x05baff28d2a9a8d5ef4145b4b29f01b16f28b2915faca80461d0a6e65cc5079b",
      "assetIds": []
    },
    {
      "x": 295,
      "y": 383,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x062b2e2c054ecd722c4da5a42c9e2d8fd1984aaa8c67f49595256630921bc2cb",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbc1586ad6f5b13033677c946a1554778ff92e99259b5e26c92f8ea13756f9088",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x750f5b8b20f207c3b4dd64bee0394ff3853a0fdd02d0419924be6443f98439b0",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x25f51d903488ad9dbe459ed328ec0690371e7bc7e85dc7e275d32a9e82650b0b",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe016efb16b420e9c737943abc3134cb7d74e8bed25d45f02d6b2fc3225c28fce",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc3a1f97b5dcf806aefe00e617357b5bcd2d518fbdbd19070fedc40f7948637c2",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7a0a9f4d2c86913b2d301128605d8236659c004024e024b0c289973e204bf8d9",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 366,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x454d51c8b7db6498521993abbb6ef06453aa5f5fc499c8809cc2e86060af83f2",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x69c244bba98be5606b065f2ee499714cd3f10aa2837581b6f30f29ad98ee9e2b",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6d29a4e9634a65a79ecb344677445e2b793e7a51bba2cd162f7b92a477228e49",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7ecfb4d0c4d69790fc85434e6b6d37fd1af6a9f65a36a215307b97acd13fa90f",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x45412cedea696d6bfa70ebf0dfe9e5c31c7ce9886ecac982e8a1112590c85bc4",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xce50c68e85e4cc4646b94e2789e05f540fd5baaacb56bd691b40e5a499fbe6ca",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1fe8732f233e310ed8931631a543e9fcb4a5cc8cb6cb7e6062e593b756a1934e",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x290e5d75648f8151cb2c9230707806ca3e21033ebdc44c5bb78c43a7089bf4b9",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x757bdb05ca17d2c236ddaf0e1eafbd9e7f848887ca4ac556a6eed007b6a3aca4",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xff40579d08297c0bf4921a943f27ae834bb094a6d7f481d33b6036ae98bc1314",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xba328b28a5c874d4fa25692bcfc3bedfb47d6fc931be80c83bdff70afbddebec",
      "assetIds": []
    },
    {
      "x": 296,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9c01f20b096eeac8aee395b83cad756f767169a91073555bbce9c537bc358b71",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd127bf31a57e2d73601dbc9f4a5528aba0e9a2803610faaa74999062f5214f39",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9cb2a6151e094325594e63033263d58991f27ba38fc07113cd95ca52f9fc36a8",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9a16c3e9160c9994b9de2e0d704aef6c163cea7302e4a43a45a804b6e2dc0ac3",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xda0cdf0103f950167f1825ba7d3eedab5f18316a99921206932fb860195600c8",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf265f3457ea41cb7c2f83f962c4689cecb5d8ce836f09fba33afb9df81e92eba",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xae7482f7d2517bb96bc32f7c11a5eb6d325afd19868cfd3397ff21885823998a",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5652efc7a7626939cb06fce2fa4cf85f2f857924cbf27f443e2e47ee704a00f7",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x584b9468f3dab00d541d1470c07d3531158840c8e99e9b30341ff8de6b07ef87",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x555f91f3e74ddbf23c45aa5af47011f01a10525e66213ad0ff267a191e581782",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1d8bcee6b5c27ed1c906b35a7f5f1aad358418af3de20547cf8c38c47fbccaa",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 376,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9439fd9c3bca27d8a5b5fe076664c70f5678440d9e2a72f84f8a1c84848ec7a2",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb7e505a6cdbc99fc121d84c88ad8131957dd48e708cb60cd73cad6228ca85694",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3a91d8b92a1f3928ef45b872514801dc724f713d7fbaa79facd5b16ce5d49176",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd9ac15396034adb56270d399174808fa6f7df8f102a87c25881773c4855f5446",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2809c8a8a93075466c481e33e754019333de7f6ebf99375293f9ce89766d14e8",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf7aa4349034dffdf6481a097f6cd3250ec96e9f18c17bfa8391c4cdbca7f7e3",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x418f7e3db02f8210714f778cceb5e59dfcae9fae4b1a586cf0dea163a21fe849",
      "assetIds": []
    },
    {
      "x": 297,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2b50e7ee6869a4d517e0653aefca736579c2f55e3417b881cf8c5d35c6eb59be",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x59bfd5e40211a28519fdf60f3e6ab2a8e7915dd04ce9b91830345cc935acbef6",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbd3ec128f8016600f7dd0e0f87e17f498b4a5b591dd56c6c3871eecd83df4d86",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5a038ee2cf374e3e81a1969b7d1bb161cfd8a1b88d255cf2798519cf049c0235",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6bc970560518069c2701a6901d1a5b930b9342fc3885d86a01b61af869f02039",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6a47a73bcabdde9aa1543ff19879b79b82aeb04e0fce382b2136419d8bcb8a34",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf7dc8fa159cef2e7fc3fed2dee150fd76616ac8a6a1a78209164cd8721d06f4",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9c397ec9aa5e03c0e428643ab3eda275acdd36163939e2679ac316f2e3410ade",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1ec39b1bcb498dbe7014581113b868755f7fe0d0795e93a18e8b061e6b28b4e8",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x285d2e8d7190dc594046d39d50a3dffc4ddb91da27bba8837fcdb6a6f988a9be",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4fe06a128d59667e6af5a49477ae4bc31eb1ff89cd23d71c7a1f08b4b6e2cf64",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc748b2141b0d4d21ebc5739fc03d619da5e29b348d8e46a56a3830776bc750c3",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 377,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x06df8ec4c0a73a9c11c56add8c3b982e6e3eb6b66f6a0f7ed0decd4976922a9b",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf4a04abc795281230ef3820a2cd1b00561394e9b049bc2418a159700f214164d",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xea31869f5ba3ba70c1c3719375a5928249301ff79279b4e8e016cc64c1dcac8f",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3b36b89b11e3a987104d05b0861f6434d6ee3f554fa6ad0bc1a09ad9f16cee19",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x553a6416ed53adfd3e5fcd5917b753e5f7d002d0791950a6426f24511f9c3216",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9ac0a52e9024ed617f4253cc8e80aed4aa78e36ccbd5b9c578953395c73572df",
      "assetIds": []
    },
    {
      "x": 298,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf3e5deaded72e7c216e1524cff73f9ffbaae1030f98a9d579a49e315540938c1",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x608e899dce7b5c70580a5b8c64dab7193dd752073727a7e6b195168f66c96f88",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0983d60819e86588738ba873dfe12dff516aa978ab8d720db1bb0768fb01b489",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcbb49b605174ff51b401f6899ea76896cf771e6972ebeeefacaf46999027c657",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdeaa1ef12889cc193a8bb9cadffd2f1ae4a24ee259915d24e539488a3630c010",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1bf345686fbdb1cc84eb708096816e179f4fe644d9ec61913ac9e32313239a1f",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 365,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc4cb3b2eed1206d99ed2a5a7f0817ec9e87d842a2343e66d03c8b68387ce853a",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x18c4e670315e1755d90a382905c506d53ec41ac64c6700a7ff0a662bb04f5498",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xffe80ed28953b869d64314dc7921e1b448e36f044db33a82b21d8e5397979c3d",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x090d5c92cc8bbdf78be269b174f7cb513ca1c5e8e63e2a96ca6461d8aa94faab",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1c5315bb74a2d324753c50b9b49f6cc5b1e16de953ae43a4765499531f5a18b4",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfc662dad5f2ae611f74e4749a8f8a7eb133703b21eaad8c13843b51198c111f4",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x751a228af4a32246df6f7b16d2282f08b7fcb0abf029c94ad81e3caf5d0e7871",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xff4c4bf3e2a65011f6f9d4b24c5d25434f681404ebdbbcc7a9225976ca9e40d7",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb684abf66fcf6bd79d432a5b4b0e7d5756f766858297e87228f5fd9dde703653",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbc0b737706495b8230800b97a0b31cefec776a45afd27f411853fc04931a2136",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x33318ff802fa2f39f2b05eef2c882783ffb682938c8ab29486d237b2794004a7",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe81d88a96130211d7f4c85ff30ad0b86c84918896eb6cd4421db7515983c3fbc",
      "assetIds": []
    },
    {
      "x": 299,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd7a4db35d8cfbaf3b6acf9793b68c7bad220a1b5066fee54f1cd97ae34fe27c4",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8afe249a3fa4e4f3f9ddf060517f062f2eecd53d2a0fbcb0248827752230b739",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2d04a4c448c1364f1332e861766c11cc999a29d907a5a1f28e283dbeb37bb7d5",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe27c44211f4733bd96ae17eea7feb4fc94c702af6af4161ea21f5de597406780",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fbed9cb4b79d15e24847169db20b68a03807179cc4e7bf8925bb4c03a94540c",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7df67a4ec1a3559ac73396f05e39f6c2ac94294b1ebff54e37bd3a8b8a65d1ec",
      "assetIds": []
    },
    {
      "x": 300,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd5ad83d8a5dcb466f93bb8b3c6a14e19d074aa3aef56022aa13227879437bba",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x41fc1d4670bac0b4f0bfe7f6a7b0f4b8ef91c3b51a1689b4ae4a05515b54178b",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x020fa149ad7e681950d1f0fb47d4167f2f725dd9e1781d683b31fa7808e373b4",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xacb89aa9f047267f1888c18621a531f13cb2185696c50bee9b0766cbcb4ebd46",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9fcfc9f19fecfcef38aedec6d276597699df168bf6525cea48d357adfa00f076",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5f84a5a82dab5e8da60b109120cec3ca30165d1e3afdad733fbb8ec1a6ada0d3",
      "assetIds": []
    },
    {
      "x": 301,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7d7227aca7f035103ad735b7a7f9beb7bad1af9425d768bbdeaa2c0e96073367",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 360,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5b9bdec0e34b3c453f905d374b195fccef447651d524119be75103d9567030dd",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 361,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xff2cbd5064db699634d471ed574d9a3dcd6b0a489d1edeef7676a3b0fa40ac4f",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 362,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x47b22c390c6cfd745bfe10110b8cb3923fed4a18c156b3b00534b67b40f2c8c8",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5563de325c3d30d4ee9853fe15b38e315aa26d793d74f9e8ab92dd9e413bb0a6",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe4ebff56abd545c1fbad072d80a596d9c359d172f8708ca928b5de0d130577c3",
      "assetIds": []
    },
    {
      "x": 302,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x941d00e5327ef3af4d887f7dfed063d49fd4b71d9eba7004da5a89cd0aae4bbb",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x69cc080deae42242140335c3433a06b6350a2384b195bb738a873ec17ad5097f",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x488a3b4f3119534fd444b8dc4e0c7339d4ab1b7132951a678dd291e20d2c1195",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 365,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x2c6c235f1b740ab1bd7a22db609cf65bd88e0806cb5457da718a74e21b71c2e3",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xae82461b68586d326a2b6eabeae37e3b90098e828d7f4b1917ff02143abc6899",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1b5a0141c3ca8a37db89fb91aae359de560ff490c8739c86b530de1ee41a2e5f",
      "assetIds": []
    },
    {
      "x": 303,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x148eb0564e65fa084c3777c961a184b27cc67ac768312f62d0e4d1adde6edce1",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xee1dc000fc59603a3c278f1ab70da8e337c3598dd5fb10326eb55c11dc99cd00",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2527a93ea86022c2419fa8cd6d5b32401731f6d9dad0d699be9e92f6b00d6f9d",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x48a99def8ddfac3f2f4fa0e3a19126e4589808016e61a3c225151c52d3df7b70",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5b721f32be898656dea832a8c472639dc8704e4443bb6e8db91d78510a96a6ba",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbdbb776a825098d186a3cdcc4f816e903c48ee9cc09e218ef12ea3edfce70d71",
      "assetIds": []
    },
    {
      "x": 304,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1fba15877bf7b9dae43f52d6b56bc660ea1e048ee6cedad185e987d7831c833",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 363,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5bc3521e911819bbdba7722d98028862960be55027c77a6105f122b7299c0024",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 364,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6a303912c7403905564727245bc3f6700f7a1846ee0144e4784f355137c774c",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 365,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x831f88eb68f8f7989e7b461fadf4a3871f419aaa9e9ef4e6ed9e6d8679e53270",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a4d78e088e9cd3e8a8b1f6a137c39f3b8e0dad18834fe63c204b6f6e31ec7f0",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6562a284c056545e342e386e73fb99db6ec124d4abf3ff870e95da5c73a883a8",
      "assetIds": []
    },
    {
      "x": 305,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8ddad3a36e06609012eb94039a0761429e107cd299d366cc4c1f0db33f0da4ca",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x13bc54326da7dc8b5f7f46c5d5f657bab76488bf8e932bd22f113124592e0e8c",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9e29e1dbf0f48a14edc8851e19aaa8bc42a5e855e51812a9e472f637eb19282f",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb153707bf5ad1652e52392c93deadb7b09d91817897a74f23b4cc71ee0627b46",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4b62ab7e4df3826a572a5d96051c55205c25a3223ca0ac7691f543068b9a2176",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc532759364ec1340e5b77211673558af82dce0eff6a492ca7cb40a88de2487b0",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6ec543ba6b6bbe7eb8e6e2529c73360ce52eb401cfbecca3db85953b28f5309",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52ce2c94c695c3cce39d31429a56702f810f55988f2e7bddf735c651a288a395",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb5f198262569418a1e9115ffabd99560ac465739fb245685bd3002a1a86a130e",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x67d69c63c010c8b67d67da102e1bbc8badb3fffe769932aff63a26961eaa24d9",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe43a47906c7156b739b3e1da697f8b60a17d815526b9ea0e376cdf4a45ded812",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x237837fb35fb3ffc567d87138efa3603fb1914ef89f3c7562ff07d9324257188",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc7aef6f26fa51c777eb10de23b0f69c14758273b25f4736093101d09235a5a25",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x38672a1b20b58d0ae5342f26eeaeca14d452c78d02feb327d6a6d8aa844e3d91",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5de446dc404c9eccf0068ac46d0afa48070c5dfda70ee2a74ce0adf10e9dcfd3",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xcdc8bfb213bfd6cdc228a26727b58d5205372c8a808712c3fc2b63753a12185d",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x46593f43daca45ce16593a0bb3c784241242d5cde94480f035284c86daaeef38",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x763896889a0cfc4a9c649997bd24f28bd3023cb28ab4e75c17ada157b573e0a9",
      "assetIds": []
    },
    {
      "x": 306,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x72dcc8ad7589b56af07b8be6b3f7288e4a39cfc2558368b8b02599eac343b311",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x98708bf0eb0bba806624a88446d44ef18e99841d58dc83ad4399b827376f3849",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61d53bf38626e1d11cf4085397712124629959e45d5236299f5f12599f214263",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x328eb1dc6eb2ddf5e43cfb28814f2001996f7b60221ee8618ad75bd7b629aeb4",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b1572e4e462146877b9ef1800ce8f8d7b63abf37cdee1297316c17f5e14c156",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb3c5807991b6551de1094ab3e765a6d7dc3b3b0b59b8cdc150817d2a96316626",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x729520e4b1c889bca1c14ec82371434777baa1bc86ae681c9d722a4feadd96b8",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc6ed633ddaf2f80329b7bbec166dedc908586c2974fe802306928e58bff21c49",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x35e3b2f67aef13f153d9d2751af88c3b0e64ab5e0751fd3ad926c7c77a7e2823",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c501c32dede926d450d0fd010702b098cf329fb4cd51eda1733e82844de15e5",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7313fb7b48210af11cc23470412634ed1a859495fc1c7c1633c13ef56cce7213",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5c56e494a154e76ca8ab2c12238eb9c1d81066de25bd9b2730a5c0a6d2ebc787",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde1d0b95bed4b5e9c80f305312085e1916dbcd6eb257bb7b1b2d160a87a50e92",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x10414d8e97de99f20e1976e5498a3698550a38c0c13a933360f42bda2c5c6876",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6ac71d9a7cd8ffeedbb79aa7c2719f2a50ebace71b34252aa6d839e2093b53df",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8fde77e2b8f73bbe5b806b652e62ce0025d60bfe3716018256a3c10e0dd756f2",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa2666c1049f2a071d0ac90a526c1e8df9c18364223afe29170a8277f64998dbf",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3790d11cbed109c98fe2bd6b27f1eceb96f96a1fba14c272bade778a677b97d6",
      "assetIds": []
    },
    {
      "x": 307,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1b7018646333d609ea23414e86e130737295ca5bd5504cee6ba4bbe781b36705",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c425992aadcdf0bda8ce4751c786c13129708f0bba0cb04b6983b38d62079f8",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbc60290cbbef238d41e3a43b881ed8bd160127cd443e48454a315ea0f07446e9",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x66bd8cb40e7ebe0416ab0e53e0c35386dd9dc3d190b845e3011690f4132ad1ec",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdf9adb2bc53e1ef0055e1241277ad9b814df56993eb0e1b820fb6b7040b05885",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc613f152cca8b81462965621ac7bb210cdf6784e6d1b148e95e02a94fa631b9e",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xefe6e2570d472895b27a28290ae9dfd897aba18ee20c24fe9fe7f892a21221dc",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 372,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8220bacec59f45a72ba3c64b7b8ae8a2a1df41cc5bc0eb6c3033baa3ca07c353",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 373,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x69b40afc184fa591bc69a3ea30e5e722be9fdb681b209202f21ebaebc18a0404",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 374,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3227184f483e382445410eca5d965b4f8564118ea137394ed4156542fb67c5e5",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb85c8960e316f07d48d561175dac31794e001d17e8ea9b9830504652d9a32166",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x24dee0cd88a0b7fbf0d39de499c07fba531c712c4284d7bf9667b517055b75a3",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3cbaa985366ca87f9ec3b63eb81d5f9254fa87febdced47a34b305d2924dd8b0",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 378,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9ec02607dbe0296793ccf95356e60151425c892cbd1c1e8a35d09e44b8716400",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 379,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x67d89c2f7d6706b368c384a2487a567464320305a14d79ff1df3816a0f2e1938",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 380,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x54d7dd976324e7adca2978e178cba5b916673a93013f391818d9d95aa23a7ef7",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 381,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x63585e49b17e71cf56b3e5eccdce8d3c9b72860df12d78ed20f4796ba58337fa",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 382,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xdf42fdbb8f3e2a9169fde44f810088d7e5ae2762c0fdc8bad18f2e46eee56424",
      "assetIds": []
    },
    {
      "x": 308,
      "y": 383,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9cb3369bb6ffe858c72a8b1b73dcefddf54057ba18ac9c8f83660d994c29df00",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x21e340b23fd0a2df83234c79d9a0d7697b81d51b521abe27e5cd36fe0d6ccc5f",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x992c658b56add3b2f33fa7522ac2d65767a17ae7944a4dbae4455689d837f8fd",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x245c6bbe321fa1253f578a8580d9b8dd7815adc7380d21a6c0b9993f51207b46",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0f567a8e8093d584f67c2556d27a2c35add93593b786a31da5c741d47da507b7",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdadddee47fa9b634bc601eafbee803b5f9f24861e8f2a10af0083a2c712d3c41",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7fef10b70e8dfeb75c3a99a32f1ba49eb659855299057b1e35c996963a23193d",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x79187c8bdd32df7a14db1a217cc73c1f5222d2a8bbcda4b5dda56a9fef73bbff",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5e937b42aeb795d9be9cd0ce7e5d620afc1774e78781fec0ea866b3d74aa2d68",
      "assetIds": []
    },
    {
      "x": 309,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x20b919e7ddda4a841f78f1c2f4b1636318d8773fd15810263d20ec1d810ef839",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd716166f3fa9fe6fa376c71628f5a89e8cda46904f4af6855f2b1f49c92e9abe",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x22230f50e3b8cc1e026e82356791d1bfa32a104eb176d6c1a744ffd2a015474e",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9e2ad9666cd95be5ba4cf001fc5ef972687ea15dc732ed271a734aa6ed9eb76a",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7423c0bfc0654bfb0fe9e4eba735104ea2682e132299ff942f4b5e2e8d15470b",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x715d3d4f35e69ba5623f3e0e561961aa45d37c5edb220e83920dedf50836417c",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x52c2e8ec5242d7103e0ca9534fc334394c9af32d59486e2c307c8e27d51527aa",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xddf11cd3e34c5f4be863e6392ed3d1398c768be5b9d74f54c78a6388f0a9b50f",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf3982acb8e7e1dd40402c729faa2338645e71c101fce16224093620cccbeb91d",
      "assetIds": []
    },
    {
      "x": 310,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1805b51803ef49bc952f0eeb2f3ca28b7af2477acf7146a32951223c5029e784",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 366,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b80a183cdb1217a05a2930cd77f06a75c57fcea9faf10df1de24e48bcd50545",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 367,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2e728c741d194c9cc97bafd98908ea0bce4f7d703856f2e614ed395b77db04fb",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 368,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x46e4d2c8023f7cabf691c5b365e710ec7029a383e495d8c24f1a0f97cde2482e",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 369,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c2ed692a5afeeadaf759cb10c6b8e72954b37f3ba3ff038bcc4e6e7617a53e4",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 370,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4822ddec5035dc745f34ab171f7da9837b32d78033b1d4b9a3586e57e871b119",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 371,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x488c15af83b15a8e0f2c97b77f7ccaac6891edf3f4b0e0096ed631724b5f12dd",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 375,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2b6a0dadcb417e7b5cf19fe2f51070b17fb2b3b813f14477c309f8035fea0b83",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 376,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x463bc178408ec41338bd349012350a8d55c7452396b5b80f8e0adfde28e0e8c2",
      "assetIds": []
    },
    {
      "x": 311,
      "y": 377,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa72e26c1731ff850c104e77925b703d8fbcebb9e488c2870a3dd36cef72b7bb4",
      "assetIds": []
    }
  ],
  "solcInputHash": "c036f79ccddd697b5a9602e7ef0ca71e",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}