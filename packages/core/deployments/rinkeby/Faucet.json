{
  "address": "0x8e19Ca559eAB83a5201663E8a70cd0C2A9479663",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "ierc20",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountLimit",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountLimit",
          "type": "uint256"
        }
      ],
      "name": "FaucetLimit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "FaucetPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountSent",
          "type": "uint256"
        }
      ],
      "name": "FaucetRetrieved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountSent",
          "type": "uint256"
        }
      ],
      "name": "FaucetSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_lastTimestamps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "retrieve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountLimit",
          "type": "uint256"
        }
      ],
      "name": "setLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "setPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x21e8636a2f498cc5d247f33e85bd65f2aa2029cc8d74224e35b0661f71ad0bde",
  "receipt": {
    "to": null,
    "from": "0x8A0e83DE499d7543CF486974a6196a35B5F573E7",
    "contractAddress": "0x8e19Ca559eAB83a5201663E8a70cd0C2A9479663",
    "transactionIndex": 26,
    "gasUsed": "925673",
    "logsBloom": "0x
    "blockHash": "0x6a42ed7418be841cea1070ab2739fe54def310c517828a1c8aac5bc80f720050",
    "transactionHash": "0x21e8636a2f498cc5d247f33e85bd65f2aa2029cc8d74224e35b0661f71ad0bde",
    "logs": [
      {
        "transactionIndex": 26,
        "blockNumber": 9463584,
        "transactionHash": "0x21e8636a2f498cc5d247f33e85bd65f2aa2029cc8d74224e35b0661f71ad0bde",
        "address": "0x8e19Ca559eAB83a5201663E8a70cd0C2A9479663",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008a0e83de499d7543cf486974a6196a35b5f573e7"
        ],
        "data": "0x",
        "logIndex": 34,
        "blockHash": "0x6a42ed7418be841cea1070ab2739fe54def310c517828a1c8aac5bc80f720050"
      }
    ],
    "blockNumber": 9463584,
    "cumulativeGasUsed": "6295927",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xCc933a862fc15379E441F2A16Cb943D385a4695f",
    30,
    "10000000000000000000"
  ],
  "solcInputHash": "1be8f30fa625f8361a2347aa21353b0d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"ierc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLimit\",\"type\":\"uint256\"}],\"name\":\"FaucetLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"FaucetPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSent\",\"type\":\"uint256\"}],\"name\":\"FaucetRetrieved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSent\",\"type\":\"uint256\"}],\"name\":\"FaucetSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_lastTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"retrieve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountLimit\",\"type\":\"uint256\"}],\"name\":\"setLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"setPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"retrieve(address)\":{\"params\":{\"receiver\":\"The address that will receive all IERC20 tokens.\"}},\"send(uint256)\":{\"params\":{\"amount\":\"The value of the IERC20 token that the receiver will received.\"}},\"setPeriod(uint256)\":{\"params\":{\"period\":\"time delta between 2 calls to send() for an address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balance()\":{\"notice\":\"return the current IERC20 token balance for the contract.\"},\"getLimit()\":{\"notice\":\"return the maximum IERC20 token amount for an address.\"},\"getPeriod()\":{\"notice\":\"returns the minimum time delta between 2 calls to Send for an address.\"},\"retrieve(address)\":{\"notice\":\"retrieve all IERC20 token from contract to an address.\"},\"send(uint256)\":{\"notice\":\"send amount of IERC20 to a receiver.\"},\"setLimit(uint256)\":{\"notice\":\"return the maximum IERC20 token amount for an address.\"},\"setPeriod(uint256)\":{\"notice\":\"set the minimum time delta between 2 calls to send() for an address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/solc_0.8/faucet/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-0.8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts-0.8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-0.8/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"src/solc_0.8/faucet/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable-next-line compiler-version\\npragma solidity 0.8.2;\\n\\nimport \\\"@openzeppelin/contracts-0.8/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.8/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.8/utils/Strings.sol\\\";\\n\\ncontract Faucet is Ownable {\\n    IERC20 internal immutable _ierc20;\\n    uint256 internal _period;\\n    uint256 internal _amountLimit;\\n\\n    mapping(address => uint256) public _lastTimestamps;\\n\\n    constructor(\\n        IERC20 ierc20,\\n        uint256 period,\\n        uint256 amountLimit\\n    ) public {\\n        _ierc20 = ierc20;\\n        _period = period;\\n        _amountLimit = amountLimit;\\n    }\\n\\n    event FaucetPeriod(uint256 period);\\n    event FaucetLimit(uint256 amountLimit);\\n    event FaucetSent(address _receiver, uint256 _amountSent);\\n    event FaucetRetrieved(address receiver, uint256 _amountSent);\\n\\n    /// @notice set the minimum time delta between 2 calls to send() for an address.\\n    /// @param period time delta between 2 calls to send() for an address.\\n    function setPeriod(uint256 period) public onlyOwner {\\n        _period = period;\\n        emit FaucetPeriod(period);\\n    }\\n\\n    /// @notice returns the minimum time delta between 2 calls to Send for an address.\\n    function getPeriod() public view returns (uint256) {\\n        return _period;\\n    }\\n\\n    /// @notice return the maximum IERC20 token amount for an address.\\n    function setLimit(uint256 amountLimit) public onlyOwner {\\n        _amountLimit = amountLimit;\\n        emit FaucetLimit(amountLimit);\\n    }\\n\\n    /// @notice return the maximum IERC20 token amount for an address.\\n    function getLimit() public view returns (uint256) {\\n        return _amountLimit;\\n    }\\n\\n    /// @notice return the current IERC20 token balance for the contract.\\n    function balance() public view returns (uint256) {\\n        return _ierc20.balanceOf(address(this));\\n    }\\n\\n    /// @notice retrieve all IERC20 token from contract to an address.\\n    /// @param receiver The address that will receive all IERC20 tokens.\\n    function retrieve(address receiver) public onlyOwner {\\n        address contractAddress = address(this);\\n        uint256 balance = _ierc20.balanceOf(contractAddress);\\n        _ierc20.transferFrom(contractAddress, receiver, balance);\\n\\n        emit FaucetRetrieved(receiver, balance);\\n    }\\n\\n    /// @notice send amount of IERC20 to a receiver.\\n    /// @param amount The value of the IERC20 token that the receiver will received.\\n    function send(uint256 amount) public {\\n        require(\\n            amount <= _amountLimit,\\n            string(abi.encodePacked(\\\"Demand must not exceed \\\", Strings.toString(_amountLimit)))\\n        );\\n\\n        address contractAddress = address(this);\\n        uint256 balance = _ierc20.balanceOf(contractAddress);\\n\\n        require(\\n            balance > 0,\\n            string(abi.encodePacked(\\\"Insufficient balance on Faucet account: \\\", Strings.toString(balance)))\\n        );\\n        require(\\n            _lastTimestamps[msg.sender] + _period < block.timestamp,\\n            string(abi.encodePacked(\\\"After each call you must wait \\\", Strings.toString(_period), \\\" seconds.\\\"))\\n        );\\n        _lastTimestamps[msg.sender] = block.timestamp;\\n\\n        if (balance < amount) {\\n            amount = balance;\\n        }\\n        _ierc20.transferFrom(contractAddress, msg.sender, amount);\\n\\n        emit FaucetSent(msg.sender, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xc8e7a42a03c15aef0acddaaff3306f8c983eef6ac775e23d2aca635486c7ad64\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f95380380610f9583398101604081905261002f9161008e565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060609290921b6001600160601b0319166080526001556002556100cf565b6000806000606084860312156100a2578283fd5b83516001600160a01b03811681146100b8578384fd5b602085015160409095015190969495509392505050565b60805160601c610e8c61010960003960008181610213015281816102df015281816105f10152818161078b01526108560152610e8c6000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063b69ef8a81161005b578063b69ef8a81461015e578063bfb0602114610166578063f2fde38b14610186576100c9565b80638da5cb5b14610128578063a52c101e14610143578063b295a00e14610156576100c9565b80631ed24195116100b25780631ed24195146100f657806327ea6f2b1461010d578063715018a614610120576100c9565b80630a79309b146100ce5780630f3a9f65146100e3575b600080fd5b6100e16100dc366004610b7f565b610199565b005b6100e16100f1366004610bcd565b6103a6565b6001545b6040519081526020015b60405180910390f35b6100e161011b366004610bcd565b61043c565b6100e16104cb565b6000546040516001600160a01b039091168152602001610104565b6100e1610151366004610bcd565b610587565b6002546100fa565b6100fa61083e565b6100fa610174366004610b7f565b60036020526000908152604090205481565b6100e1610194366004610b7f565b6108dd565b6000546001600160a01b031633146101f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201819052906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561025d57600080fd5b505afa158015610271573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102959190610be5565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528581166024830152604482018390529192507f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd90606401602060405180830381600087803b15801561032557600080fd5b505af1158015610339573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035d9190610bad565b50604080516001600160a01b0385168152602081018390527fc4ed2bedeebfbd51a6ad812549ceb34a4df2fc0e3142551b47d081e66505b04791015b60405180910390a1505050565b6000546001600160a01b031633146104005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ef565b60018190556040518181527fd84898ac673d493d8af0e9ca52c71eb44708f6100f406ad6bba2ea64a24b094d906020015b60405180910390a150565b6000546001600160a01b031633146104965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ef565b60028190556040518181527f7a5a4514ff313744e682809aceaab00e7e7e2e1335c651ffe57fe1e5a8903e1c90602001610431565b6000546001600160a01b031633146105255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ef565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600254811115610598600254610a26565b6040516020016105a89190610bfd565b604051602081830303815290604052906105d55760405162461bcd60e51b81526004016101ef9190610d19565b506040516370a0823160e01b81523060048201819052906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561063b57600080fd5b505afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106739190610be5565b90506000811161068282610a26565b6040516020016106929190610cae565b604051602081830303815290604052906106bf5760405162461bcd60e51b81526004016101ef9190610d19565b506001543360009081526003602052604090205442916106de91610d6a565b106106ea600154610a26565b6040516020016106fa9190610c42565b604051602081830303815290604052906107275760405162461bcd60e51b81526004016101ef9190610d19565b5033600090815260036020526040902042905582811015610746578092505b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152336024830152604482018590527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b1580156107cf57600080fd5b505af11580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108079190610bad565b5060408051338152602081018590527fb31f1c76b3f9b1acd71e94a548e8f07f80d0842728e8044aa0485b497c2716329101610399565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156108a057600080fd5b505afa1580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190610be5565b905090565b6000546001600160a01b031633146109375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ef565b6001600160a01b0381166109b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101ef565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606081610a67575060408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152610b7a565b8160005b8115610a915780610a7b81610ddd565b9150610a8a9050600a83610d82565b9150610a6b565b60008167ffffffffffffffff811115610aba57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ae4576020820181803683370190505b5090505b8415610b7557610af9600183610d96565b9150610b06600a86610e16565b610b11906030610d6a565b60f81b818381518110610b3457634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610b6e600a86610d82565b9450610ae8565b925050505b919050565b600060208284031215610b90578081fd5b81356001600160a01b0381168114610ba6578182fd5b9392505050565b600060208284031215610bbe578081fd5b81518015158114610ba6578182fd5b600060208284031215610bde578081fd5b5035919050565b600060208284031215610bf6578081fd5b5051919050565b60007f44656d616e64206d757374206e6f74206578636565642000000000000000000082528251610c35816017850160208701610dad565b9190910160170192915050565b60007f416674657220656163682063616c6c20796f75206d757374207761697420000082528251610c7a81601e850160208701610dad565b7f207365636f6e64732e0000000000000000000000000000000000000000000000601e939091019283015250602701919050565b60007f496e73756666696369656e742062616c616e6365206f6e20466175636574206182527f63636f756e743a2000000000000000000000000000000000000000000000000060208301528251610d0c816028850160208701610dad565b9190910160280192915050565b6000602082528251806020840152610d38816040850160208701610dad565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115610d7d57610d7d610e2a565b500190565b600082610d9157610d91610e40565b500490565b600082821015610da857610da8610e2a565b500390565b60005b83811015610dc8578181015183820152602001610db0565b83811115610dd7576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0f57610e0f610e2a565b5060010190565b600082610e2557610e25610e40565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220461303f79ac79965833766c138732c70b37b05e5bf1e86be2998f2298dfc84d564736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063b69ef8a81161005b578063b69ef8a81461015e578063bfb0602114610166578063f2fde38b14610186576100c9565b80638da5cb5b14610128578063a52c101e14610143578063b295a00e14610156576100c9565b80631ed24195116100b25780631ed24195146100f657806327ea6f2b1461010d578063715018a614610120576100c9565b80630a79309b146100ce5780630f3a9f65146100e3575b600080fd5b6100e16100dc366004610b7f565b610199565b005b6100e16100f1366004610bcd565b6103a6565b6001545b6040519081526020015b60405180910390f35b6100e161011b366004610bcd565b61043c565b6100e16104cb565b6000546040516001600160a01b039091168152602001610104565b6100e1610151366004610bcd565b610587565b6002546100fa565b6100fa61083e565b6100fa610174366004610b7f565b60036020526000908152604090205481565b6100e1610194366004610b7f565b6108dd565b6000546001600160a01b031633146101f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201819052906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561025d57600080fd5b505afa158015610271573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102959190610be5565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528581166024830152604482018390529192507f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd90606401602060405180830381600087803b15801561032557600080fd5b505af1158015610339573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035d9190610bad565b50604080516001600160a01b0385168152602081018390527fc4ed2bedeebfbd51a6ad812549ceb34a4df2fc0e3142551b47d081e66505b04791015b60405180910390a1505050565b6000546001600160a01b031633146104005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ef565b60018190556040518181527fd84898ac673d493d8af0e9ca52c71eb44708f6100f406ad6bba2ea64a24b094d906020015b60405180910390a150565b6000546001600160a01b031633146104965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ef565b60028190556040518181527f7a5a4514ff313744e682809aceaab00e7e7e2e1335c651ffe57fe1e5a8903e1c90602001610431565b6000546001600160a01b031633146105255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ef565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600254811115610598600254610a26565b6040516020016105a89190610bfd565b604051602081830303815290604052906105d55760405162461bcd60e51b81526004016101ef9190610d19565b506040516370a0823160e01b81523060048201819052906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561063b57600080fd5b505afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106739190610be5565b90506000811161068282610a26565b6040516020016106929190610cae565b604051602081830303815290604052906106bf5760405162461bcd60e51b81526004016101ef9190610d19565b506001543360009081526003602052604090205442916106de91610d6a565b106106ea600154610a26565b6040516020016106fa9190610c42565b604051602081830303815290604052906107275760405162461bcd60e51b81526004016101ef9190610d19565b5033600090815260036020526040902042905582811015610746578092505b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152336024830152604482018590527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b1580156107cf57600080fd5b505af11580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108079190610bad565b5060408051338152602081018590527fb31f1c76b3f9b1acd71e94a548e8f07f80d0842728e8044aa0485b497c2716329101610399565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156108a057600080fd5b505afa1580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190610be5565b905090565b6000546001600160a01b031633146109375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ef565b6001600160a01b0381166109b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101ef565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606081610a67575060408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152610b7a565b8160005b8115610a915780610a7b81610ddd565b9150610a8a9050600a83610d82565b9150610a6b565b60008167ffffffffffffffff811115610aba57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ae4576020820181803683370190505b5090505b8415610b7557610af9600183610d96565b9150610b06600a86610e16565b610b11906030610d6a565b60f81b818381518110610b3457634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610b6e600a86610d82565b9450610ae8565b925050505b919050565b600060208284031215610b90578081fd5b81356001600160a01b0381168114610ba6578182fd5b9392505050565b600060208284031215610bbe578081fd5b81518015158114610ba6578182fd5b600060208284031215610bde578081fd5b5035919050565b600060208284031215610bf6578081fd5b5051919050565b60007f44656d616e64206d757374206e6f74206578636565642000000000000000000082528251610c35816017850160208701610dad565b9190910160170192915050565b60007f416674657220656163682063616c6c20796f75206d757374207761697420000082528251610c7a81601e850160208701610dad565b7f207365636f6e64732e0000000000000000000000000000000000000000000000601e939091019283015250602701919050565b60007f496e73756666696369656e742062616c616e6365206f6e20466175636574206182527f63636f756e743a2000000000000000000000000000000000000000000000000060208301528251610d0c816028850160208701610dad565b9190910160280192915050565b6000602082528251806020840152610d38816040850160208701610dad565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115610d7d57610d7d610e2a565b500190565b600082610d9157610d91610e40565b500490565b600082821015610da857610da8610e2a565b500390565b60005b83811015610dc8578181015183820152602001610db0565b83811115610dd7576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0f57610e0f610e2a565b5060010190565b600082610e2557610e25610e40565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220461303f79ac79965833766c138732c70b37b05e5bf1e86be2998f2298dfc84d564736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "retrieve(address)": {
        "params": {
          "receiver": "The address that will receive all IERC20 tokens."
        }
      },
      "send(uint256)": {
        "params": {
          "amount": "The value of the IERC20 token that the receiver will received."
        }
      },
      "setPeriod(uint256)": {
        "params": {
          "period": "time delta between 2 calls to send() for an address."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balance()": {
        "notice": "return the current IERC20 token balance for the contract."
      },
      "getLimit()": {
        "notice": "return the maximum IERC20 token amount for an address."
      },
      "getPeriod()": {
        "notice": "returns the minimum time delta between 2 calls to Send for an address."
      },
      "retrieve(address)": {
        "notice": "retrieve all IERC20 token from contract to an address."
      },
      "send(uint256)": {
        "notice": "send amount of IERC20 to a receiver."
      },
      "setLimit(uint256)": {
        "notice": "return the maximum IERC20 token amount for an address."
      },
      "setPeriod(uint256)": {
        "notice": "set the minimum time delta between 2 calls to send() for an address."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/solc_0.8/faucet/Faucet.sol:Faucet",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 19621,
        "contract": "src/solc_0.8/faucet/Faucet.sol:Faucet",
        "label": "_period",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 19623,
        "contract": "src/solc_0.8/faucet/Faucet.sol:Faucet",
        "label": "_amountLimit",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 19627,
        "contract": "src/solc_0.8/faucet/Faucet.sol:Faucet",
        "label": "_lastTimestamps",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}