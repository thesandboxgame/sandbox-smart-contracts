{
  "address": "0x866D4A417862cf1cAD60e85EC16b960AFF6E7C31",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x30bda4514d17681742514e6cc453b86662b7a0671498c9b574d8fd6c47d2a92b",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0x866D4A417862cf1cAD60e85EC16b960AFF6E7C31",
    "transactionIndex": 0,
    "gasUsed": "2668417",
    "logsBloom": "0x
    "blockHash": "0x8b7f4851bcebbe19d4fa124dd718596fdab263708131f84355bda6386f40f48f",
    "transactionHash": "0x30bda4514d17681742514e6cc453b86662b7a0671498c9b574d8fd6c47d2a92b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 12207248,
        "transactionHash": "0x30bda4514d17681742514e6cc453b86662b7a0671498c9b574d8fd6c47d2a92b",
        "address": "0x866D4A417862cf1cAD60e85EC16b960AFF6E7C31",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000d20fbd836e80dabfb777e6aabbe52e96c07ecd1b0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 0,
        "blockHash": "0x8b7f4851bcebbe19d4fa124dd718596fdab263708131f84355bda6386f40f48f"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 12207248,
        "transactionHash": "0x30bda4514d17681742514e6cc453b86662b7a0671498c9b574d8fd6c47d2a92b",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x00000000000000000000000002f615e95563ef16f10354dba9e584e58d2d4314"
        ],
        "data": "0x000000000000000000000000000000000000000000000000018e2a4464506371000000000000000000000000000000000000000000000001cb9a817aee07fb39000000000000000000000000000000000000000000000095614c8270d0b9f1ca000000000000000000000000000000000000000000000001ca0c573689b797c800000000000000000000000000000000000000000000009562daacb5350a553b",
        "logIndex": 1,
        "blockHash": "0x8b7f4851bcebbe19d4fa124dd718596fdab263708131f84355bda6386f40f48f"
      }
    ],
    "blockNumber": 12207248,
    "cumulativeGasUsed": "2668417",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xEdE111C053616a91975488F8aB3B51382A32979b",
    "0xD20fbd836e80DabFb777E6AaBbe52e96c07eCD1B",
    "0xD20fbd836e80DabFb777E6AaBbe52e96c07eCD1B",
    "0x49c4D4C94829B9c44052C5f5Cb164Fc612181165",
    "0xa5Eb9C9Eb4F4c35B9Be8cFaAA7909F9ebe6Cb609",
    "0x76fc9c054297ab661e768c76274ccb72fef2fdd4c70952dc6b21d1c03a2d429c",
    2043403200,
    "0xB7060D3FeCAC3AE1F0A0AA416E3e8E472257950e",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0x2D0f3dfe9B7e86b36d188A3AAdE83898d4BeE7a2",
    "0xAc3ff31f526Af7f386ea43649e3fa67e329AeF93",
    "0x34C87E3A9eD80D50a146C1833043265221c5Abd2"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 180,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b8606724e53457d8f021ae0e362f356f2364e54c6553976980bc535464bd44f",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x70713d62caa740d3fffe998b2f7709b57cfc1698cdc7d07fda99b0f3d9c7b84a",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6ba80695596f863fb1278295e369aee7276aa48b9f111e05aa9480af02b87285",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0f40fc07f0c75c869bf116a4b3fdec0b807377aba5146a6d00cbbdbc34715455",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc97bb3078f1c5ec634458f7d308b167513182349a60ccadc7e50274874077cac",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1c7a8ba3d6b1e76bdfc807a4bc9e68a3fd4a12eb868630268b5d805a49b11a3",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb4424df1ae6b01b0dce732ccc101647e28cd99b47f27676dcc817d1e2c248d38",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52e1a1a4ae397edada4d23063e858f6d9d3e974992c9fdfd6c8e3fc53a126beb",
      "assetIds": []
    },
    {
      "x": 180,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17462acbb44f7a458588c47bfdc8e5b4a4790e61b41d42329499911dcaeedc76",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3751656ed92937e45da2916d060bdfe249af4f5baa9f564c1b5b63c277df3a10",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x563d1931d53bdbf307dd410838990e4bbf14c7b1ae3c1187bcc64ce36b0885b1",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf925612790c9dddc75822c12049ba3bd8940c39c0b80775822a05f9c294ad49f",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1f38da3505dd6cfd43d1ec052a8afe27b0d8ad6558e222c960eaabd513ae43a4",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7cdff24b8260bbd229e8b6f5c4abd42c06202501f4aac87847508ebdd326b7eb",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb0b73ab35fbcf0295c752f17c339ebc4a027368f35783515580e348ac499dcab",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x07a33df63c0c16de4ff409c5a24cf9c149b6e6edc2a72590f0459651e4011aa5",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x95caee4ed76de0fad526984de318e2f5f02de1731533828be2ba5a84eb1a3963",
      "assetIds": []
    },
    {
      "x": 181,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x494de90e261ad5fbc59479f5d9f373b69a9ac5d3eeb07603da66f7e94ed7a7a6",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x011c7b130f222177ce714f8159054174b3739dc803e2fea77e71658b2e295457",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x23fed09e7e672e5354c54fb02077aa5a1c484e94a90fb4c28946421cb1a1c9ee",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfe376b9f8749881fd7452c939ef9f3c55bc3a7dfd649f8c6a0bc3197b4104044",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52eb55244b1b2bbd002971a9ff61b9e00b8d3ac54f79654d16596ea49bafb7e1",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x41b1329291ff2c142ed9fc6117dadcf5246da92a7e7ed91655dc77d1c2d75fd3",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x762a03274cd2b125fcb372eb325f1b008e1c34258b7f7e3e06e52e3e5bacb054",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e8dea3e4fde1f05a64151b9a8c3f06ccc161d76dac242b4e75d068f525949f6",
      "assetIds": []
    },
    {
      "x": 182,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0ea60b8861c0eefb4c8ab1625886508e696303ceb9b514d4674233ad2cdc0fbb",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e28b721bd0295eab001af04f03ed9be226fc1a753595b140be7e6f696fc2443",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x771649f547d6f586a08f0aa0ee75562229ec646c6661141872cab53dcdeb537a",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3c35d0f1f9374a40f1dc967cd9fd8e73a6d222287169a2858d0d554f100d15ec",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52f26c104e8a06d97227f84126b076dca5f96a1c46c09518568595ac3364deed",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb9fd7292925b8e877d59af476ae2adf6d79895437c417413b30adad751e02195",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xefc4edcbe1658b82802b817b877da6dff64299b3028e66255446eaf43b29ca66",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x72f9715be3816496795ac0677e12567fb5e01ac70afc8da9e22f272ad2bf5ae4",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd33427179995d8d93361432751d46a5232119cb76a9770f337764d27cce08789",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x54340955228cce5fcd4d8c028c884ea573d3daea16d597d2af22ed836bfdce4e",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ab81c1143ff9c9c7d1790f3f7bdea5fee52306351a84751f42e83024a7649d5",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8770639f932b994926ee7913eedfe9f1cfef5addffb0ffcbbd17132e099c6a44",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xff231e4a7f44ebfd3c84e6d4f66a328fe9f33fe11b9e43f03650b4ea7ea672b4",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b24642f0175878db8ed81cd927177a075ed75ecf282487936cc173aee16c036",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2e2219a13e8ca5dc13d684627331fc5602c22c9ac4848e1f7ccbcf04974aca2e",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6cf6baea2f6331552eb836a405868a62d2b114d2204175e8527b3e06b1ea5492",
      "assetIds": []
    },
    {
      "x": 184,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xecc3f3509338da8de1d26ce4106917236635da759f05836c3ab9db342047da21",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d44765b0689acee2ff4b74d0a81353b58b61ead18ba17c46bd5172038ea5312",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 59,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7d3998ae63b20304dcc11de030b470233d9a168940c6a86f9a6be70b92b4af80",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1351f30f84cc7e5c5156d8875e14d4f45fd9fdc66b06e938b57c6434be634486",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x50e8e770626484b01bca521ed982bd78aa1d6c3e3c14521baa715442fedcc81e",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc89a215089e4cb3f008f3bd082a69a4d902b894bbf56295d8911500b175f7407",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x82c1308a5d5e6999025added8800e9c1249ae1dca857f5828de7feb1796ead55",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x102718a077e855a559dbb20192f162aae7fb0201aa990db1968876af8ebc2bd5",
      "assetIds": []
    },
    {
      "x": 185,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb7385a8c5f94f673823e6d457304216c8e18199740acc520f6b8258b78d8d28e",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9541306869ad686e79073d7a1cf29e2bfcaa138dd13004b4b8a18a6986b69e96",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d56f27b98901e7040fdb590d10b1a5222576e2bee65347733f89f5d3794a402",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd7c997e857bed5aae0f6b15f73ae40ef395c968634d2d8e23908d611d1c5d03b",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2347afa2b772096c20a345395cf512a31ee723f5968614843c2110b009f0f575",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1e490c41d0e9645fb000ed90e79941f3d09e34fe3785deea77776865283cdf1c",
      "assetIds": []
    },
    {
      "x": 186,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf5420063343e7e75dcd52b2e48d21a7990a95f03a232fbeee828f810b85cb2b0",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fe7ea9319594351a7ddcf9351268f118f71744993475ae7839d055090fd0ccf",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x145dff3155f35b15e6092fd2f3837b1c9ead262feb48a64fa928922f7b3c9a30",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x611a81da1135829915c7700394d6750a0a5ca5add88947d5de9e41fec7208f1d",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf6755899d83b15b801b7388d9b60243db76c26397fc46bf159cf2dc0683a545d",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4850f4ca59a8f5d002cf45100d5949424c08d42b26ed4d454924a2df9c225f02",
      "assetIds": []
    },
    {
      "x": 187,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc484caeef27eab84aa98de17506c49480cda2bf6be660f34f013a0d772e7a630",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x551305c109e5f7e7ace36db68a690373d79346b8bf9732a19d96bc4e770c7940",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x83f4695efff8ae7100f319634e2634e4452dee5772d9ec8e9fed86648cd40f23",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xda792db073916ba903b3710be886837ef86eff52ec79aefb7ab8dfd4e4b8d75b",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x684c738cc623b78b4bacc98fb01d008e8e63c4eaa2a0656632d27e33f47a1c08",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x65525475b17077609b8422a4a18bb211d1084b119246fc605e24a07459332185",
      "assetIds": []
    },
    {
      "x": 188,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdba53af6e913b5a042ae446756bb99b04f11f9039e8ae4d5c94b59cf8f25b125",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x26b8193183cbc5348077f9270dd309dd740d3a51856aa70318b46efd01f11f2c",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x590bcd70ec2dd82a7ee8257e040dea9cc435f610439ba9534a8b808c2d1bf0ed",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x364e4eb422f071ed84f471a3c56fddafb10b6e17d7f1470c0298cdbf985a2c4c",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9d594a242537173f2fad3403d67d8d8420b12fb19bce72d21c534b032bc37cd",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x217f0708804a4f304f5b76e5f5b3acc88c9949bc424d8324a004c117f38d2eef",
      "assetIds": []
    },
    {
      "x": 189,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x71328b8fe8420863fa0cf3228ded06e66b45209644ecb9e1f157d44d3df693fe",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 60,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa464102af868b14c6793d4ea9a01e17c6282afcf5af530b1abbddc105e8d640b",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 61,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x00467db01d9942a6ed3b000417489ac03e92bed442975fb2dd74ac9470148cf2",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 62,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa278fa1f1f4743c887fe27dd094e659f6753e315a58d10b8a822cfe983bb39ae",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6c0057be537a20a8946b584f2c38955761b48fa8ec8f49be2e043324064c341",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd0ce9718d6ef14bae8b2888bbb3b8ca1f25e1c0726b17135f95a38b787ede12",
      "assetIds": []
    },
    {
      "x": 190,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x10ed3f407fe55f149cb625df2e5786679d9f1a6258661e5748fc44e9aa17d386",
      "assetIds": []
    },
    {
      "x": 191,
      "y": 60,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xceb68d2b3f427fb55e63719c4c43525693aa6f7ccacf745a6a3b66aa77bb6e8f",
      "assetIds": []
    },
    {
      "x": 191,
      "y": 61,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x592aec6dc171d36688da982bd2ad1a669f811e16adc1a99466ed1c52edd8ea3d",
      "assetIds": []
    },
    {
      "x": 191,
      "y": 62,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf3fcc12534a6365dbadeecbfc2251b640c8e442851ffe2b38b56a12e0f0ea1bc",
      "assetIds": []
    },
    {
      "x": 191,
      "y": 63,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xab786f72fa5c334bcd26310330c1ec62807d1035fc3546e0aba019a8f0e3555a",
      "assetIds": []
    },
    {
      "x": 191,
      "y": 65,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8230bc71add61678f56a6d40227eb76ffb09ad6f8d29476d379d0cf9f28b07a9",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa499b8d2e5b1e3d903ce6e1e4d1869cefd45ba77281b805200b53ff2583f9c0",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8b5f3aa7979dd37f8de560a068fbf4e2dd290ddc97f9e6be99bb5f4f2b813968",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x41486e5119125aa2fca19101317d92ac75db3cd310576eedbb64b4630614a40c",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc02f469a67547a2e43a5c9f41ba09dcfc386d1ff85efada61add31b244bc7df1",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x947b5f795aff673ab21dc7bc787756fdb0e35c85e4bf0ba2d8cde806e58d1d96",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5b9106134ca193453189e1e926e9c76f211ca43186d29279516aebf997a5e83b",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbe255c2a2068ec5c5203fc1e0d9fd85df44c1b72077a3c2c7c00b36a8d73a7d9",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7b08d78068a1bef08e1f88ab76e0bf1aee4420c581f303919a542a77752e3063",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xabd64470ed5319194f23ceca83c6979a436113e6574d9c1dd54ec0f9669706a1",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1f92f2d419942ed7c3028cd18ca37192baf8caaecc0e66a1da70b0c0b2e591f",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x06f4973c5562c8de6b63333d335f37e87d9ee727b43c23fc8b9ba75653517897",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa191301cbae9b9a7e7fb5920f6460b4382654efab6ce0b3a8b89ce042915e887",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf25cbb993b1c9f598bc3bc6138bcb4bdb7be443390a3aa951954d0338e543200",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 59,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5db368dddfb921e4afab6b8902d5149933a547c6710a3e540792f63a6596ba40",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7716153e19534f3bbf4c063c8d75775424a2d7515995a9d155ce02ee5e7f5a99",
      "assetIds": []
    },
    {
      "x": 193,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb700b76310eb318637a4f5c66e0d0d6aa070805a8f177de6a635ac564a1ccfa5",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf6678ab598752ed56e37aaaf9b94280b8b1db0e3bcf6ffbc99c72814dd4306fb",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xea7b165534b8766d65af50c04c0726edb4493781a76e7351dce8490ffbe12c82",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x161a69229dfa885332b964fe1601fcdb02036bf9b091f75eb4e7870b79092141",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x567ed833f3b144971ce06de698ca5ba5bbb9f5d150ccd5ae21e0e8181ac65fe4",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdf0cc93d4bfddc88ea03305e057fae9d822079ecfb56e9aa39074dcda9cc89f1",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1ec323c506183dede81e4027af945fa13af2bdf26c8b4a8f42921084ff82a70",
      "assetIds": []
    },
    {
      "x": 194,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6bc9e4946610042987ef75c61229e39f6762f2261967954d16349a57009149f7",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd181efad6f1dfa7e509484d2c75ab9d32edd82ac97f7ca2022ac4dd45f21e78",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf038a7bdcc149e3160a49c56f8f16ba11a0643660604bb0dd2b2380387e63a1",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3346d381a3ea4f615299cdca7e7f925881fa51373eeccb01a0b6881251619ad3",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1f3647ebcc967ab049bf5f7ce222b29877bd8d98b2c33c62fe45d42a8326be1e",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x97b3bd9d053bc980885c7f66984f47618701ba224981395de9cb63b1cc68bfc5",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 59,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x942971877eb19991e2ea7505afdf5c837579e8d383980344cdd1427e3e8482fe",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xff88dd6008b116f62f9dfb41fb485d16392ca5943ac340a78249c716557195ba",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7f6355a94d24a51ed69484f4db7145f63c01a77cad67e32ba5aa6888b0aa30f4",
      "assetIds": []
    },
    {
      "x": 195,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x87e6d6e2e6f4491309973f8ab8d92e4069d105fd6eb9134fa41640974703966e",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x440fdfa43bc91f6f4e3a5145b55b74d5f58882367bb7e6e26c79c7cc4f901e06",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa5b9a1cd2e0bb6e51f9767fa1115ce34f229b96f8a34096416f6966243c2909",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf0383db64138aa847a934278283988794ee2227f448383f85205f999a2782b51",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4434dc5f2592794c96109dbb9c90b223ba694d0a76c1a335cfa8059a954843d1",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x06ee4657f4b0be7291c9f052a2ae0ab48c0770160748560237682833e0d3ca21",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc4ee27969e2d6fc0cd22be404252a78777fea74fc5ef15b5cd5310b38b1fd8a6",
      "assetIds": []
    },
    {
      "x": 196,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc3e499cff02fb82ae874ddea933d275c9a14e39fa6c29af44992d43a3deb6ebf",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 54,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x24e54c2d5dc8b479ea116902d212c59dbf1af54c0941eb379f855d64b68cf3e9",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 55,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfcd73012ed567977819ee0b6d8e6d3196d29946d206714f2ef929a5a9c2dd8b2",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 56,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd7f5b4eadf41eb3e4f0a10e313fa8bdb2b5621e0d9d049e2ae6617daf35970e",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 57,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b87dbb39d5ed4f186be360b9d752cd0056b64ec2e7904fa2acc655f550a53b0",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 58,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0596df2559663ea6e443002558a315e29e062a1dff8ab2f9e17d25bfe4b0522f",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 59,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x402bcb335710d94785daac11f6823b68f056c18d4d9907cff1eb3b5f00493223",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 66,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5a111acf8588146c0337c251e1b329cb697649b1223e2cfbe165fc2d19dfd2fe",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0ab708a22cb68b283a3d8480c2ea5ba1f53b7c9917c08cb6b00f0c47d46d1c54",
      "assetIds": []
    },
    {
      "x": 197,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd662ee8de8dd2ff33ec995e8f16290be1317b8108a8ad54062d578593fdda778",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 63,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x777a52e0cdd90d96b72031f2107f25253d09d45eab622c4c68421c04b72466c7",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 65,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd7a34ef76022b9295e6569937701dabca27cd9904ae19b2cca41973e654282b5",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x230e11cf72d9f4bebcd7a371fe340fd1b8a27803228abbe3fdd0b2a5498155ff",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x168648d6d7917c4c4d1b528f6f65d499c29e438e19d463b95686390687437e27",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde2b555912540fd84626851882f79aa4f31c7769046512191b999c631276b9ca",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd2f065ce3a644634649fd35e0906c5e5aeab1d4dc6f34774c41cf16309fea2e",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x23e3930faecec7b78df5967dc17354840d1d29ba085b565e62ce7dc6b766bb0b",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xef5826a0766180acfb0cc74cfe8e902b8c9b43a5bc1ac46c53eaa963cc5d3e30",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x931dadc8f160b6a00a028dbdc95baf9d395ef85aee6058661a094ab3d094cda3",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe83c89b95462c73f99bda7cfd54190fa2addcc172d02271903757e41830dff3d",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5103722e2a53e101e7adb028fa141f0d6f219df8940cfcac214437fb6c9fa942",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x78fecd4690961a37e39c3af32e1c0e25b71ad2b8094c67714b19ca6f16482711",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x144f6bfe2536c0d24376fcbd2544f050902773f4cb068f16b36f239d490b01f0",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa05cc82917407337019d3aead675ca6961c5d3fdca498df57bd467e8e3858ba",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x354db6e6af712f2c0e714c47ffeda6aae0aa91d2e54e80e51c369da4dd4d30f7",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb6b774d9e6686c8050d6a131ab70b57085b0fc751bdbe4faa9a7e8891a19625a",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf748abc209db3cb8d1401dc899ec6c63325206fcc524d7a6a1fef1fbba7ed59",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xda556b7810263d2cf50298b672088744d431102bf60d09d145a05fbf573c2424",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0d7a76e75b92545eae93185eda04d3b777c1d63965e258a4e4b11908541e9a60",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfd8b1116821d95007dcd1bd562c6e0921bbea20cbf382d61ad75cf0a68050243",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3f7ca3a3a25ca2b8e9ddc7bac54dc76b48210a9000b21feb52a17ae4fb2de562",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8037b99c392f475357c477475eded5aac03b07db936ccff8561a71680b7caa57",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc4b7ac49e204ac98b6b4379ed8b85af01f6d4670dc1c3db8897708f86311ed8a",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2ed6de29397f7cdf0b0396e7bf25bb0069765b019a04e353d97c908454c606d6",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeb829588ec21a1f24bc4d21840d74f2493e95eb86ea1dd49996b731ea7b8b7a9",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8cc4ad65ee165d4cde84e95a9233d24c412277210a97fe3d619b09d87aa12323",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x324f3f145660443e0e896841b6e3a547a87ed379da5cd6dd528cae87595f7ba2",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5c95f1858d443e1f85502d4c747e618bcddf2bb3284dc347f6fe7ffcc2e68681",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc96bcd5698f4919d062f2947b6c86a6ccf9013c4d3fa84a5f9671868826e67cb",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x07042d61c17a82f7e0813a73511a2dc5ee37651f19b4b6837663711310e52f63",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8df485db62357dfae5fc52ee49ba3fda0983d9e80b903a77b23aa0af9e760a0d",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x219bcd2fd7efc7d72ef358b00517f2eb237520e7e14cc4549d793c1958ac7f7c",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc04100d80a7bfa87f6857c14f9e197b3157e0809534add317bf13c839a28a7e6",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 66,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8ebb4ec9cf79d2787687e8a7a7b23bed6253bc62b976e06ac59957eefbff95a8",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x16bfc74ed87509f0deb2d12547460d3c0082ffe627ed03ca136e24b5083c9227",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x205babe7f928213071f44704a2d82b8bfe19b768616548caf6d3d3d31b745693",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xda14a07e0b627486e372e386d5b6adf59e8c97f4143f6bdfc2a290d0ce7ed826",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb16ea15dd9aea1bca68c64855df7e7bf35e3efd47cad01e3f0d1187340d72928",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84af8667bb08704ae2985cc8ab83839a2f452650c07ff69d25d606228754c78b",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xee4f90c6abe77ab38214755cf3c4547a60121c70a44365ca2fcd0a8ff31a79ee",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1fcc01e14234b88f221bf70c91821c0a8eb9bdb71c17da42b43ea2e3a4030c77",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd6ed8ec41e4d208f113297e9fedcc0c2e77be00a46047ee3f2fab3751111094",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x732ec797a6a315e6abf8a8ff7e1d3cb721e5e8612099d16cb53e3e138f912c0c",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xed5a240e7bbe82c4aff047f6f97661c2d52a2991c20e241bd4e5c8e5ca76015e",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 66,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe7f17449739143005cf06d6d964db341d06d5240854b275d2141553122f7c029",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x98e4d653668d2f2255e758795292069522e3dbe393d687d01b7884660950382c",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb7b845e3366759adbe541c44373c98a3b500b211c0a7e71b828c0dbc78ace822",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf02fbf1e767ce5c549d9b2dbd568e719ee01b69823e5d71791df0dc8d3c78233",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb59783cd21dcebe34134dfaef0deedf0b7fe0db620e0c1f9f3206ba798b1424e",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf8c34602534c271d6c43de816fff6f6abb20340f03cf4d716d5521a81ee0955",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcdb3756761f9a44c4c2b011c966e84c9de9ceafd5566dcaa3bb5d3a0ac247590",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 63,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb41df7d9812ea89b4b76d52225411854dae7dbb201709997996964db8b64d7dd",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 64,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac71d2260f8ac368dbb1f07be5938e3d13da65a7d03d02379c8fbf0a390668a3",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 65,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x74123b2890a46d8a425f77b6aaf99fc4ce201d12deef5ed6cf9b45b532e3475c",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 66,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe0f1f245c3ea9edb5647df5ea5dc346ae27f821a7c1cb47454d75cdf4acb9522",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 67,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5235700c6be812127c99db0e0d46dba7acba39f104986ba5a375c67fe6a2bc4d",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 68,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf2ade75bf86a26ce66706de31be9ad44c76556a5106fa01a290f54e7fb833f73",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 69,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x29ae8eec841f1165096a5cebab44aa5a24a9ec3f92a0e01d78c4aadd61332897",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 70,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xea4b5eb7030052b80f5cb5f285e2f0375a0782156213e0bf73fe0f194c6d9a8a",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 71,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe29c32bd2925a6bca4c4d38be5ba2a4507a7774c28e5f2bfa13f43aba9a196f8",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6c96fda2f55ec32f2e53d7b124e533f6987e71431e8f1804d61302bd295bc317",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 76,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x367aaba209bf061736dfd93aad5399bde36db0dc685c11fcc18f9cc4971e7aa9",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x04f6b58432cbe08dfe4b40256339f95dc2bde2de38260dc0bfeb80b8e90444a8",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d8f67ae80ff5b283f678a395621e3d242ca7d57ec2c3cb47061c68b6c51c15c",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x85469a3de3bde04d49c35f98e8aa0ed1da8197fdafb892f16b8b3d2ed7507d33",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf243a0bbc0ee75094bc2c54d2c5928a5a78a4a3dcfc35246b058c22c116e8349",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0714eed4f7c932d7f10f8a8057eaae75fb2e8dfdff63325a0b9a92aa4c96a692",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc6d2f9f91a16cc7e219a9fa72fb6945aa06089ecb0144afd2ed5bb14e95965ea",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x24a2c17a92c1a4d55615a8d6afccd1785249821c42350e9249c751520440b5ba",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1a904f09f63a97b124cfc90e5079704ee1360e7b89d12eea330c7bde56fc1ab",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x128e9499382af22e3f914d308c99efc5bde0e3c11d0411f141c778df4a537244",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x970df4bf365e182c9d3b3ff2b37eb0efd61484375041953681b36a672dc419c4",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd8a1d5f2ae1b63b13a4168cd76fb454789c939b6e60e1c386b0cc6e9ee86b070",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xbc48bbb87b60f0a6c1d09bfa94ad959d35fd31195b0cb6f3b3960778e08a6f15",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d3c7ce8b7c35516bb06a4342f177c21109ecc275795d0ab1821bfc863178c92",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc5e4d2ace3efa55ced4aab4504ae3d32f2649ec874ecbe7efef3083ec8751594",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x41e890a17b545af0c5bfb43f02e27ac4105109ae8d7042e104004cefcb52f1a6",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf06fe23a82e2bd3218155231aa23f02816429a1f9e8a45bd272e256f147eeeaf",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf54c883dab53d144d60e652baf39a69764f81af3a25b010a2a48945a468bc153",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf9c098e049d57953e398f99538889aa87a680453bd946bea51c7ba998d045553",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5e619de6a58f481574d5d311a382a71d228b877787b66a545be94a3a2499e93",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc7833e19f5eff4e3e1981fe4e3566333ed0fb7f00e2cb321517d340a7649a09f",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa96b3f474ecd2d0d90bd8d575d3e6dfba4c1ed91f8095e1242db42cc57924ff",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x30085d3ede92e3c92d82509511c06cefa40c880acf6680936ff5e691cb0f4e06",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd81e3374534319672e2c110efff9ae02a295e2e77ef8851a9a6ba34d0daad2a6",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6c8a71189ce37878b43b41c55538adee569bd43185e320a8422a2e0af4246b6f",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xada14ee1556dd0ad9e806cbf5140c6d07f7a3f47de029a778d7eafed5ed48159",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbd601a429d39bdc5f0266785a94e33e9f654753613162b59c452d927c8b7cd14",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xbf07fea2ea253ec6c379cc382dbd3ef4dbf8b7c2ec50d0af0db401ed9a988cab",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1de745888e7540e085992152ab2bea059ce5cb465fad041e7091aada58cef743",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd575c2eb7e58cf1dbc7db29ee6a30afc584b805403d74a1df72ff329b36608ff",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xec2abce13852fb1c3478dfb1615d5a47ea738f57667425f716854f43e1251454",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9ea60b87511cda5577d1644bf8419fe8dd1e660c0a73bf6b1a6e32eef9a30297",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fb4c152f723d3ab9d440e7210a60fe63b573ffe2a523eac93987b71263e56c3",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbd5fd76e69fd95e019ad33a941d9a116fc4bf50f75d12e7f729fd2a3269922fc",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcd0edf0a80379cc171efa9348fec0254971a783b9f195beb7f5bab40a9d1ae81",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf388e3d7b745b7ce7ebe1fd6d2c1afa21418169b7edeb6e6d16ca05cc27e04d9",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac770f6e8af5c9e8ddefed4e8aecde31d026045c85c3b3776423ba86239ffaa2",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7955b615a72b62df6b22e4128af0345d427424c0ad8a7f2ae1c8501f66c6f43e",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x96789c90969db41090e31261a54590a357417a2fc11d1a0fb22341b27ce9ab1f",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 75,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x614fdfd256a97a79a02e3a72d31a6dc4c285beb06ddc2b2eb850c90a30392d36",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfff3e5a8e55444bff08e631e3ad819cf222d09d94188105a1c24e25b75eb8c88",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x216934e7e97662345075a8ced5899274d79e7f4d5da6a915ed8164fe22ba6094",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4a3bd098c893e4098eb83bcc9f7e84189211c658b588506023d8181ff417253f",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 72,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3e9fadf5c8e8b576e8d410ec15886b39aee9bfb0f4b9e7ae86fd93e42e289c09",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 73,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x34e73501e28545b8e5a9e6459db26546e132a2e02412d048f28d593769da44d6",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 74,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3999ea0c48ae9056877a2e59f13a709c9a5e2be023bc04369e66b56553fffdd5",
      "assetIds": []
    },
    {
      "x": 183,
      "y": 54,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb194ef3721ccdd5601af920e4df0a4ea4bbb6a381fbde25fc709fb6f9f8506a1",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 60,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1f7c4d8a522e0d3590ae6202a30a462d234031eb9cdecc3f80587ce8bceb8633",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 66,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9829653c4c2cb3fc20371bd8210ae410eca6928d0ba39de07265ba31bede7a6c",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 60,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8dd78a9e8f031d372e58546eb3c15ebaa4019ea337c5db13769b0fccf339c340",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 72,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5bbf673fb138e1e25171fac18bffe112a49d592f4be67dd768e8427e06186601",
      "assetIds": []
    },
    {
      "x": 192,
      "y": 60,
      "size": 6,
      "price": "32772000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5a4d8cf92aa7260a342aa4d2eebfbd697e147dec938a3e09b8851110622444e9",
      "assetIds": []
    }
  ],
  "solcInputHash": "b42a863a795806b4ea3a8f05dfa42539",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}