{
  "contractName": "FakeDai",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x1dd319cb"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approveFor",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x2b991746"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42966c68"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isSuperOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x654b748a"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6e9960c3"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8f283970"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "superOperator",
          "type": "address"
        },
        {
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setSuperOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xac9fe421"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "superOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "SuperOperator",
      "type": "event",
      "signature": "0x44f92d27abdf4cfb6a7d712c3af68f3be086d4ca747ab802c36f67d6790060d8"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event",
      "signature": "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610030336b09b18ab5df7180b6b80000006001600160e01b0361003516565b6101eb565b6001600160a01b0382166100aa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f43616e6e6f74206d696e7420746f203078300000000000000000000000000000604482015290519081900360640190fd5b6000811161011957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f63616e6e6f74206d696e74203020746f6b656e73000000000000000000000000604482015290519081900360640190fd5b60025481810181811161018d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6f766572666c6f77000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60028190556001600160a01b0384166000818152600360209081526040808320805488019055805187815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a350505050565b610c1d806101fa6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063654b748a1161008c5780638f283970116100665780638f2839701461028c578063a9059cbb146102b4578063ac9fe421146102e0578063dd62ed3e1461030e576100ea565b8063654b748a1461021c5780636e9960c31461024257806370a0823114610266576100ea565b806323b872dd116100c857806323b872dd146101755780632b991746146101ab578063313ce567146101e157806342966c68146101ff576100ea565b8063095ea7b3146100ef57806318160ddd1461012f5780631dd319cb14610149575b600080fd5b61011b6004803603604081101561010557600080fd5b506001600160a01b03813516906020013561033c565b604080519115158252519081900360200190f35b610137610352565b60408051918252519081900360200190f35b61011b6004803603604081101561015f57600080fd5b506001600160a01b038135169060200135610358565b61011b6004803603606081101561018b57600080fd5b506001600160a01b03813581169160208101359091169060400135610364565b61011b600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610456565b6101e96104c4565b6040805160ff9092168252519081900360200190f35b61011b6004803603602081101561021557600080fd5b50356104c9565b61011b6004803603602081101561023257600080fd5b50356001600160a01b03166104dd565b61024a6104fb565b604080516001600160a01b039092168252519081900360200190f35b6101376004803603602081101561027c57600080fd5b50356001600160a01b031661050a565b6102b2600480360360208110156102a257600080fd5b50356001600160a01b0316610525565b005b61011b600480360360408110156102ca57600080fd5b506001600160a01b038135169060200135610606565b6102b2600480360360408110156102f657600080fd5b506001600160a01b0381351690602001351515610613565b6101376004803603604081101561032457600080fd5b506001600160a01b03813581169160200135166106de565b6000610349338484610709565b50600192915050565b60025490565b600061034983836107dc565b6000336001600160a01b0385161480159061038f57503360009081526001602052604090205460ff16155b15610441576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461043f5782811015610416576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b61044c8484846109dd565b5060019392505050565b6000336001600160a01b038516148061047e57503360009081526001602052604090205460ff165b6104b95760405162461bcd60e51b8152600401808060200182810382526023815260200180610bc66023913960400191505060405180910390fd5b61044c848484610709565b601290565b60006104d533836107dc565b506001919050565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031690565b6001600160a01b031660009081526003602052604090205490565b6000546001600160a01b03163314610584576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b600054604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006103493384846109dd565b6000546001600160a01b0316331461065c5760405162461bcd60e51b815260040180806020018281038252602c815260200180610b9a602c913960400191505060405180910390fd5b6001600160a01b03821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517f44f92d27abdf4cfb6a7d712c3af68f3be086d4ca747ab802c36f67d6790060d89281900390910190a15050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061072957506001600160a01b03821615155b61077a576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008111610831576040805162461bcd60e51b815260206004820152601460248201527f63616e6e6f74206275726e203020746f6b656e73000000000000000000000000604482015290519081900360640190fd5b336001600160a01b0383161480159061085a57503360009081526001602052604090205460ff16155b1561090c576001600160a01b0382166000908152600460209081526040808320338452909152902054818110156108d8576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b806000191461090a576001600160a01b0383166000908152600460209081526040808320338452909152902082820390555b505b6001600160a01b0382166000908152600360205260409020548181101561097a576040805162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f7567682066756e647300000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03831660008181526003602090815260408083208686039055600280548790039055805186815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3505050565b60008111610a32576040805162461bcd60e51b815260206004820152601660248201527f63616e2774207472616e73666572203020746f6b656e00000000000000000000604482015290519081900360640190fd5b610a3d838383610a4d565b610a48838383610b49565b505050565b6001600160a01b038216610aa8576040805162461bcd60e51b815260206004820152601260248201527f43616e6e6f742073656e6420746f203078300000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03831660009081526003602052604090205481811015610b16576040805162461bcd60e51b815260206004820152600f60248201527f6e6f7420656e6f7567682066756e640000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b039384166000908152600360205260408082209284900390925592909316825291902080549091019055565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505056fe6f6e6c792061646d696e20697320616c6c6f77656420746f20616464207375706572206f70657261746f72736d73672e73656e64657220213d2066726f6d207c7c2073757065724f70657261746f72a265627a7a72305820ff503e85d975d554cfcca42778fd893f2e5cc47f0a335ba72d700bdb3f8cf2b564736f6c63430005090032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063654b748a1161008c5780638f283970116100665780638f2839701461028c578063a9059cbb146102b4578063ac9fe421146102e0578063dd62ed3e1461030e576100ea565b8063654b748a1461021c5780636e9960c31461024257806370a0823114610266576100ea565b806323b872dd116100c857806323b872dd146101755780632b991746146101ab578063313ce567146101e157806342966c68146101ff576100ea565b8063095ea7b3146100ef57806318160ddd1461012f5780631dd319cb14610149575b600080fd5b61011b6004803603604081101561010557600080fd5b506001600160a01b03813516906020013561033c565b604080519115158252519081900360200190f35b610137610352565b60408051918252519081900360200190f35b61011b6004803603604081101561015f57600080fd5b506001600160a01b038135169060200135610358565b61011b6004803603606081101561018b57600080fd5b506001600160a01b03813581169160208101359091169060400135610364565b61011b600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610456565b6101e96104c4565b6040805160ff9092168252519081900360200190f35b61011b6004803603602081101561021557600080fd5b50356104c9565b61011b6004803603602081101561023257600080fd5b50356001600160a01b03166104dd565b61024a6104fb565b604080516001600160a01b039092168252519081900360200190f35b6101376004803603602081101561027c57600080fd5b50356001600160a01b031661050a565b6102b2600480360360208110156102a257600080fd5b50356001600160a01b0316610525565b005b61011b600480360360408110156102ca57600080fd5b506001600160a01b038135169060200135610606565b6102b2600480360360408110156102f657600080fd5b506001600160a01b0381351690602001351515610613565b6101376004803603604081101561032457600080fd5b506001600160a01b03813581169160200135166106de565b6000610349338484610709565b50600192915050565b60025490565b600061034983836107dc565b6000336001600160a01b0385161480159061038f57503360009081526001602052604090205460ff16155b15610441576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461043f5782811015610416576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b61044c8484846109dd565b5060019392505050565b6000336001600160a01b038516148061047e57503360009081526001602052604090205460ff165b6104b95760405162461bcd60e51b8152600401808060200182810382526023815260200180610bc66023913960400191505060405180910390fd5b61044c848484610709565b601290565b60006104d533836107dc565b506001919050565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031690565b6001600160a01b031660009081526003602052604090205490565b6000546001600160a01b03163314610584576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b600054604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006103493384846109dd565b6000546001600160a01b0316331461065c5760405162461bcd60e51b815260040180806020018281038252602c815260200180610b9a602c913960400191505060405180910390fd5b6001600160a01b03821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517f44f92d27abdf4cfb6a7d712c3af68f3be086d4ca747ab802c36f67d6790060d89281900390910190a15050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061072957506001600160a01b03821615155b61077a576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008111610831576040805162461bcd60e51b815260206004820152601460248201527f63616e6e6f74206275726e203020746f6b656e73000000000000000000000000604482015290519081900360640190fd5b336001600160a01b0383161480159061085a57503360009081526001602052604090205460ff16155b1561090c576001600160a01b0382166000908152600460209081526040808320338452909152902054818110156108d8576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b806000191461090a576001600160a01b0383166000908152600460209081526040808320338452909152902082820390555b505b6001600160a01b0382166000908152600360205260409020548181101561097a576040805162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f7567682066756e647300000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03831660008181526003602090815260408083208686039055600280548790039055805186815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3505050565b60008111610a32576040805162461bcd60e51b815260206004820152601660248201527f63616e2774207472616e73666572203020746f6b656e00000000000000000000604482015290519081900360640190fd5b610a3d838383610a4d565b610a48838383610b49565b505050565b6001600160a01b038216610aa8576040805162461bcd60e51b815260206004820152601260248201527f43616e6e6f742073656e6420746f203078300000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03831660009081526003602052604090205481811015610b16576040805162461bcd60e51b815260206004820152600f60248201527f6e6f7420656e6f7567682066756e640000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b039384166000908152600360205260408082209284900390925592909316825291902080549091019055565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505056fe6f6e6c792061646d696e20697320616c6c6f77656420746f20616464207375706572206f70657261746f72736d73672e73656e64657220213d2066726f6d207c7c2073757065724f70657261746f72a265627a7a72305820ff503e85d975d554cfcca42778fd893f2e5cc47f0a335ba72d700bdb3f8cf2b564736f6c63430005090032",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "approveFor(address,address,uint256)": "2b991746",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFor(address,uint256)": "1dd319cb",
    "changeAdmin(address)": "8f283970",
    "decimals()": "313ce567",
    "getAdmin()": "6e9960c3",
    "isSuperOperator(address)": "654b748a",
    "setSuperOperator(address,bool)": "ac9fe421",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "solidityMetadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveFor\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isSuperOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"superOperator\",\"type\":\"address\"},{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setSuperOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"superOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SuperOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"address whose token is allowed.\",\"spender\":\"address allowed to transfer.\"},\"return\":\"the amount of token `spender` is allowed to transfer on behalf of `owner`.\"},\"approve(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"return\":\"true if success.\"},\"approveFor(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"owner\":\"address whose token is allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"return\":\"true if success.\"},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"The amount owned by `owner`.\"},\"burn(uint256)\":{\"params\":{\"amount\":\"the number of tokens to burn.\"},\"return\":\"true if success.\"},\"burnFor(address,uint256)\":{\"params\":{\"amount\":\"the number of token to burn.\",\"owner\":\"address whose token is to burn.\"},\"return\":\"true if success.\"},\"changeAdmin(address)\":{\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"decimals()\":{\"return\":\"the number of decimals.\"},\"getAdmin()\":{\"return\":\"the current administrator of this contract.\"},\"isSuperOperator(address)\":{\"params\":{\"who\":\"The address to query.\"},\"return\":\"whether the address has superOperator rights.\"},\"setSuperOperator(address,bool)\":{\"params\":{\"enabled\":\"set whether the superOperator is enabled or disabled.\",\"superOperator\":\"address that will be given/removed superOperator right.\"}},\"totalSupply()\":{\"return\":\"the total number of tokens in existence.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"to\":\"the recipient address of the tokens transfered.\"},\"return\":\"true if success.\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"from\":\"whose token it is transferring from.\",\"to\":\"the recipient address of the tokens transfered.\"},\"return\":\"true if success.\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"gets allowance of `spender` for `owner`'s tokens.\"},\"approve(address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens.\"},\"approveFor(address,address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens from `owner`.\"},\"balanceOf(address)\":{\"notice\":\"Gets the balance of `owner`.\"},\"burn(uint256)\":{\"notice\":\"burn `amount` tokens.\"},\"burnFor(address,uint256)\":{\"notice\":\"burn `amount` tokens from `owner`.\"},\"changeAdmin(address)\":{\"notice\":\"change the administrator to be `newAdmin`.\"},\"decimals()\":{\"notice\":\"returns the number of decimals for that token.\"},\"getAdmin()\":{\"notice\":\"gives the current administrator of this contract.\"},\"isSuperOperator(address)\":{\"notice\":\"check whether address `who` is given superOperator rights.\"},\"setSuperOperator(address,bool)\":{\"notice\":\"Enable or disable the ability of `superOperator` to transfer tokens of all (superOperator rights).\"},\"totalSupply()\":{\"notice\":\"Gets the total number of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `from` to `to`.\"}}}},\"settings\":{\"compilationTarget\":{\"src/Test/FakeDai.sol\":\"FakeDai\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts_common/src/BaseWithStorage/Admin.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract Admin {\\n\\n    address internal _admin;\\n\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @notice gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @notice change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n}\\n\",\"keccak256\":\"0x74418caab05cca3fe5b9309ab069a9bfe327ff96f593a347e1f1cc0c02f25693\"},\"contracts_common/src/BaseWithStorage/SuperOperators.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract SuperOperators is Admin {\\n\\n    mapping(address => bool) internal _superOperators;\\n\\n    event SuperOperator(address superOperator, bool enabled);\\n\\n    /// @notice Enable or disable the ability of `superOperator` to transfer tokens of all (superOperator rights).\\n    /// @param superOperator address that will be given/removed superOperator right.\\n    /// @param enabled set whether the superOperator is enabled or disabled.\\n    function setSuperOperator(address superOperator, bool enabled) external {\\n        require(\\n            msg.sender == _admin,\\n            \\\"only admin is allowed to add super operators\\\"\\n        );\\n        _superOperators[superOperator] = enabled;\\n        emit SuperOperator(superOperator, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given superOperator rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has superOperator rights.\\n    function isSuperOperator(address who) public view returns (bool) {\\n        return _superOperators[who];\\n    }\\n}\\n\",\"keccak256\":\"0x22354cf60ccf77a6de61c13bdaf4e3094d115b960ae563b0527622c846a12abb\"},\"contracts_common/src/Interfaces/ERC20Events.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/* interface */\\ncontract ERC20Events {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0xee09c10a3f9adc913227efdcd94ce44e05b59b04717f8f868153d356bd03f5d2\"},\"src/Sand/erc20/ERC20BaseToken.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"../../../contracts_common/src/Interfaces/ERC20Events.sol\\\";\\nimport \\\"../../../contracts_common/src/BaseWithStorage/SuperOperators.sol\\\";\\n\\ncontract ERC20BaseToken is SuperOperators, ERC20Events {\\n\\n    uint256 internal _totalSupply;\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    /// @notice Gets the total number of tokens in existence.\\n    /// @return the total number of tokens in existence.\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /// @notice Gets the balance of `owner`.\\n    /// @param owner The address to query the balance of.\\n    /// @return The amount owned by `owner`.\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /// @notice gets allowance of `spender` for `owner`'s tokens.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender address allowed to transfer.\\n    /// @return the amount of token `spender` is allowed to transfer on behalf of `owner`.\\n    function allowance(address owner, address spender)\\n        public\\n        view\\n        returns (uint256 remaining)\\n    {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /// @notice returns the number of decimals for that token.\\n    /// @return the number of decimals.\\n    function decimals() public view returns (uint8) {\\n        return uint8(18);\\n    }\\n\\n    /// @notice Transfer `amount` tokens to `to`.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return true if success.\\n    function transfer(address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice Transfer `amount` tokens from `from` to `to`.\\n    /// @param from whose token it is transferring from.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return true if success.\\n    function transferFrom(address from, address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        if (msg.sender != from && !_superOperators[msg.sender]) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                require(currentAllowance >= amount, \\\"Not enough funds allowed\\\");\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice burn `amount` tokens.\\n    /// @param amount the number of tokens to burn.\\n    /// @return true if success.\\n    function burn(uint256 amount) external returns (bool) {\\n        _burn(msg.sender, amount);\\n        return true;\\n    }\\n\\n    /// @notice burn `amount` tokens from `owner`.\\n    /// @param owner address whose token is to burn.\\n    /// @param amount the number of token to burn.\\n    /// @return true if success.\\n    function burnFor(address owner, uint256 amount) external returns (bool) {\\n        _burn(owner, amount);\\n        return true;\\n    }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens.\\n    /// @param spender address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return true if success.\\n    function approve(address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _approveFor(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens from `owner`.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender  address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return true if success.\\n    function approveFor(address owner, address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        require(\\n            msg.sender == owner || _superOperators[msg.sender],\\n            \\\"msg.sender != from || superOperator\\\"\\n        );\\n        _approveFor(owner, spender, amount);\\n        return true;\\n    }\\n\\n    function _approveFor(address owner, address spender, uint256 amount)\\n        internal\\n    {\\n        require(\\n            owner != address(0) && spender != address(0),\\n            \\\"Cannot approve with 0x0\\\"\\n        );\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _approveForWithoutEvent(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal {\\n        require(\\n            owner != address(0) && spender != address(0),\\n            \\\"Cannot approve with 0x0\\\"\\n        );\\n        _allowances[owner][spender] = amount;\\n    }\\n\\n    function _transfer(address from, address to, uint256 amount) internal {\\n        require(amount > 0, \\\"can't transfer 0 token\\\");\\n        _transferBalance(from, to, amount);\\n        _emitTransferEvent(from, to, amount);\\n    }\\n\\n    function _transferBalance(address from, address to, uint256 amount)\\n        internal\\n    {\\n        require(to != address(0), \\\"Cannot send to 0x0\\\");\\n        uint256 currentBalance = _balances[from];\\n        require(currentBalance >= amount, \\\"not enough fund\\\");\\n        _balances[from] = currentBalance - amount;\\n        _balances[to] += amount;\\n    }\\n\\n    function _emitTransferEvent(address from, address to, uint256 amount)\\n        internal\\n    {\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    function _mint(address to, uint256 amount) internal {\\n        require(to != address(0), \\\"Cannot mint to 0x0\\\");\\n        require(amount > 0, \\\"cannot mint 0 tokens\\\");\\n        uint256 currentTotalSupply = _totalSupply;\\n        uint256 newTotalSupply = currentTotalSupply + amount;\\n        require(newTotalSupply > currentTotalSupply, \\\"overflow\\\");\\n        _totalSupply = newTotalSupply;\\n        _balances[to] += amount;\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal {\\n        require(amount > 0, \\\"cannot burn 0 tokens\\\");\\n        if (msg.sender != from && !_superOperators[msg.sender]) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            require(\\n                currentAllowance >= amount,\\n                \\\"Not enough funds allowed\\\"\\n            );\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n\\n        uint256 currentBalance = _balances[from];\\n        require(currentBalance >= amount, \\\"Not enough funds\\\");\\n        _balances[from] = currentBalance - amount;\\n        _totalSupply -= amount;\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x91d81f9731f0b9525b1ce1815cbcaaa48a3f1a050a80261c299229167203e386\"},\"src/Test/FakeDai.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport '../Sand/erc20/ERC20BaseToken.sol';\\n\\n\\ncontract FakeDai is ERC20BaseToken {\\n  constructor() public {\\n    _mint(msg.sender, 3000000000 * 10 ** 18);\\n  }\\n}\\n\",\"keccak256\":\"0xd221817d8e5e9943ab5dc4bd13ec9b9630ec20d0e8ca666e731947140a0647e8\"}},\"version\":1}"
}