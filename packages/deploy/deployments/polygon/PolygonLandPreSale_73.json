{
  "address": "0x3Fc9115D44dbbc0896847e0687e259E94301a089",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x981eb86ff3c1df680a68b2ab1ec61dafa9c473557eb0364c468d4b4e56ce49fc",
  "receipt": {
    "to": null,
    "from": "0xCba49d154b4Bb9a9aD7F5Dad396CB9a0a3a62ABc",
    "contractAddress": "0x3Fc9115D44dbbc0896847e0687e259E94301a089",
    "transactionIndex": 46,
    "gasUsed": "2668417",
    "logsBloom": "0x
    "blockHash": "0x412d2c933f3052a8e2737de80032195a0355ff642d23e28d01f342c50a25be56",
    "transactionHash": "0x981eb86ff3c1df680a68b2ab1ec61dafa9c473557eb0364c468d4b4e56ce49fc",
    "logs": [
      {
        "transactionIndex": 46,
        "blockNumber": 73283915,
        "transactionHash": "0x981eb86ff3c1df680a68b2ab1ec61dafa9c473557eb0364c468d4b4e56ce49fc",
        "address": "0x3Fc9115D44dbbc0896847e0687e259E94301a089",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000bbba073c31bf03b8acf7c28ef0738decf36956830000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 258,
        "blockHash": "0x412d2c933f3052a8e2737de80032195a0355ff642d23e28d01f342c50a25be56"
      },
      {
        "transactionIndex": 46,
        "blockNumber": 73283915,
        "transactionHash": "0x981eb86ff3c1df680a68b2ab1ec61dafa9c473557eb0364c468d4b4e56ce49fc",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000cba49d154b4bb9a9ad7f5dad396cb9a0a3a62abc",
          "0x00000000000000000000000069f5c4d08f6bc8cd29fe5f004d46fb566270868d"
        ],
        "data": "0x000000000000000000000000000000000000000000000000012124ca0903c7630000000000000000000000000000000000000000000000003d1dcc901dad394a00000000000000000000000000000000000000000000006500e0c6d80c8836820000000000000000000000000000000000000000000000003bfca7c614a971e70000000000000000000000000000000000000000000000650201eba2158bfde5",
        "logIndex": 259,
        "blockHash": "0x412d2c933f3052a8e2737de80032195a0355ff642d23e28d01f342c50a25be56"
      }
    ],
    "blockNumber": 73283915,
    "cumulativeGasUsed": "8876526",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9d305a42A3975Ee4c1C57555BeD5919889DCE63F",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xfD30a48Bc6c56E24B0ebF1B0117d750e2CFf7531",
    "0x1b47567CBE36e63293A7A2018F79687f942aB24C",
    "0xbe5c97d5d90a86f7c961f8b812eab9cfe70f44d589e3e5b00cd4c9ff0a6476ff",
    1769947200,
    "0x3044719d139F866a44c988823513eCB93060bF1b",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xDbc52cd5b8EdA1A7BCBABb838ca927d23E3673e5",
    "0x42a4a3795446A4c070565da201c6303fC78a2569",
    "0x7804fb2AF15bB1323795A888B09913cEf629Ffda"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 114,
      "y": 300,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x570a20fce2009805f53144eb8629818e1a6b2677f83a9e2959fd12b86532313c",
      "assetIds": []
    },
    {
      "x": 114,
      "y": 301,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61613d5ac5fcb7ddf6fbd7dc24b6e31834268c8fcb88aea4c39d318857286d62",
      "assetIds": []
    },
    {
      "x": 114,
      "y": 302,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xbb13daafef8aa4f3add7de7e80d46321bcd9a7f345f9e05a0c987e1e93a6add9",
      "assetIds": []
    },
    {
      "x": 114,
      "y": 306,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x32a0ebf44466289ce05e6ea38882a84ae3c396e9f4a80edaedd1b8c2d9e3e61a",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 114,
      "y": 308,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3f3b51a08f4ae35f1d8ae7795bcb22326c7f2b1b6dd660e9190f0fdea16ea775",
      "assetIds": []
    },
    {
      "x": 115,
      "y": 300,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x12b3d3c6af5024241143f4053eab0ef47018e46265b31ec50279675e86932d29",
      "assetIds": []
    },
    {
      "x": 115,
      "y": 302,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3149f9c91bbfdc8368ca110e305013d3377b7323740354326fe88003124a6777",
      "assetIds": []
    },
    {
      "x": 115,
      "y": 306,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x08c60a6805df1d67f8fbda3690d593ae08132f8d546b278f2a142dbee7a33c69",
      "assetIds": []
    },
    {
      "x": 115,
      "y": 307,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x49c9945a02456cb5adf4ddad79627688eed87cd447e06413cb287737eab534e2",
      "assetIds": []
    },
    {
      "x": 115,
      "y": 308,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3ed69c918f08b113affac66878fe5ad3f07d568a671e20aba47a987e5ba5bee6",
      "assetIds": []
    },
    {
      "x": 116,
      "y": 300,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdaed11fb41bb07a668a8b15525972d29495c752b9b00faf535bd71dd71020c95",
      "assetIds": []
    },
    {
      "x": 116,
      "y": 301,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xcb9ea0ae8d9c2a1112a89ae99e52f9123819bd3a9323df0a8be6754ee76ca764",
      "assetIds": []
    },
    {
      "x": 116,
      "y": 302,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xece78bebe6a8412bf75957ba48477af2145cdc28d087b9d338f2ce2d0a3fe605",
      "assetIds": []
    },
    {
      "x": 116,
      "y": 306,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x08f1958b4d6da959d46bb17ac12b1badb80a2f5c1d8dfb003849c5a6708a4b64",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 116,
      "y": 307,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x460514ee9965426b343f65dcda4b495ba94e7f6453547add068da16ddc1f58af",
      "assetIds": []
    },
    {
      "x": 117,
      "y": 301,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x83be89bbbcf019dce1152f1055f5b106d067a53a28541fb191b1551084e43de6",
      "assetIds": []
    },
    {
      "x": 117,
      "y": 302,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb530341dd3c7436d9f5e0e54b25c0eb84e988857bb9d975ea148964c56e074c7",
      "assetIds": []
    },
    {
      "x": 117,
      "y": 304,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d57741b4e19eeb83e49d1fb41ac2b5a073c09ae355e42df76aa19ea4158ef59",
      "assetIds": []
    },
    {
      "x": 117,
      "y": 307,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xea3fa5975cb0d036005c1085debb9e71e25386bd12831592b31fff0707e33142",
      "assetIds": []
    },
    {
      "x": 117,
      "y": 308,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1bb314606304081b812b2155f9ffaac7754cf9d3b6f50fb927e75e1b5807ef02",
      "assetIds": []
    },
    {
      "x": 117,
      "y": 309,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x28eb5ba0cc37222b9b9cf7afd5215b6450f7928f5a28fdf47474a8903e9de155",
      "assetIds": []
    },
    {
      "x": 117,
      "y": 310,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0fd04dcaf3051e994c2fdca5bbb0009503f8529084e6e0288218ec0c52768493",
      "assetIds": []
    },
    {
      "x": 118,
      "y": 300,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x10576a57eb06dc6fed0b36a772d702302a776bda3ca2feaecc03e98a0b6d0e59",
      "assetIds": []
    },
    {
      "x": 118,
      "y": 301,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x09f3d847b7d04a47f35ada2d9cb10644ab31a62a293deec95872801c8ec8c837",
      "assetIds": []
    },
    {
      "x": 118,
      "y": 303,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8a1d3929655ef50f8b35268bf85ffb36c47f07862fa3da0f7005cbeb882371d5",
      "assetIds": []
    },
    {
      "x": 118,
      "y": 305,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d87a40800a8baaf36e50a1b072d9035509948a47a2e2b964c8483b0be1db331",
      "assetIds": []
    },
    {
      "x": 118,
      "y": 306,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0bd0882c4579ee7eeacccb5447762221fb9d25c2e27275faf34dda35eb697af4",
      "assetIds": []
    },
    {
      "x": 118,
      "y": 307,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x19138b1ac198dce389d44d074eedf89a47cb758ae40025a1b80dc728027e2f7e",
      "assetIds": []
    },
    {
      "x": 118,
      "y": 309,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7bb7d2261b65085d5d95160aa53bcbb3b1a75b7a7bae4e15f3cfcecfcbc2a33a",
      "assetIds": []
    },
    {
      "x": 118,
      "y": 311,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8cbf2a5fc9ddebcd9a779b6bd146184b97414f9f6d38a021b7f6ecd1399ab6c7",
      "assetIds": []
    },
    {
      "x": 119,
      "y": 302,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd41a73ccde646d3cb22254f618fd9d66f7cf83bbc687aa6346de20a7ff6ad4cd",
      "assetIds": []
    },
    {
      "x": 119,
      "y": 304,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8d8b8c38958b27584a4412d24c5ea3de748abc9497fbe900aef4b5cf1611a201",
      "assetIds": []
    },
    {
      "x": 119,
      "y": 306,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x284fd88f16cc04c404d6627733da1489e5b936878f9bbd916a23e66174c65580",
      "assetIds": []
    },
    {
      "x": 119,
      "y": 308,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5f0f691719d19a221526e7cd834e84418e03389c6d048e43beef78ad53b7898d",
      "assetIds": []
    },
    {
      "x": 119,
      "y": 310,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52160c6a1abaacb3dd2f9c357b84ef57ed390094e3dafab779c3ed0c2ac13513",
      "assetIds": []
    },
    {
      "x": 120,
      "y": 295,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xeef6b3c0fb5f1b22c79af5aa8dbfd7a277f8dfbe4777d4ec614e6472fe87411f",
      "assetIds": []
    },
    {
      "x": 120,
      "y": 296,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5f70d3890d1e68341a6c6aeeaac762c79e4b62db49da6db00063644c6e351ff9",
      "assetIds": []
    },
    {
      "x": 120,
      "y": 297,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x56c5d50de266d00668dfa541e8d347c299e86b811a7ab62d30b5bc680589d04a",
      "assetIds": []
    },
    {
      "x": 120,
      "y": 298,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61401e9285355a14194025e6387f11e6f193f567d6fce0e64986228943cac2df",
      "assetIds": []
    },
    {
      "x": 120,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeeaab1fc02bf07f96c0a2837b16e8f2d3a031da0807b1329af59db98e0f63944",
      "assetIds": []
    },
    {
      "x": 120,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xbd11b645b2fd0d5245d3e40ecb5245571906bf8e9ffc7961809728bd6c2d00f7",
      "assetIds": []
    },
    {
      "x": 120,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x778c5fbc92a6fc339f2526732c126305e6e5c4a92d939de6c55f6820461e65a6",
      "assetIds": []
    },
    {
      "x": 121,
      "y": 294,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x09fd1aa08da3d7b3cd902164eb021b4822cce78272ed23d995896a78cf4a0ff2",
      "assetIds": []
    },
    {
      "x": 121,
      "y": 297,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab32e37d826ae5737cacdfdf1424abbe9d04da5326c744ff93d32f8b0e1d6494",
      "assetIds": []
    },
    {
      "x": 121,
      "y": 299,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x96139d988e5af5edeb57b996e1d72c9b8c85a75f3fe7a4dceef634ee4b532723",
      "assetIds": []
    },
    {
      "x": 121,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcc8c23e212be6e690e9df443eb668597c4a7e4e3d9737b758437a13383a5ad96",
      "assetIds": []
    },
    {
      "x": 121,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6df83aafa0b1abc23a502f81f5a4d469b66c767bf2217003e391c245ef645e2b",
      "assetIds": []
    },
    {
      "x": 121,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xafa06dfdd9765738f28cf5b49d5a8e3ed14877e91e41318d1a838591ba55eaeb",
      "assetIds": []
    },
    {
      "x": 121,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8eebe80ca4c702e29133590269011f106b28dddebf9360644992a3d0b96a2f4b",
      "assetIds": []
    },
    {
      "x": 121,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x16956fa851eb73659ada4538ecb692d536769b772405469af375ebdbfaee8295",
      "assetIds": []
    },
    {
      "x": 121,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6fb05e568c1c9720a7cd45ff4e81afef3b09f97932f07e8b7291ec5bcfea5c1",
      "assetIds": []
    },
    {
      "x": 122,
      "y": 295,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe7823455958d13f99a8ad6a8907c4498968bc5f504325be5afa36c3443000e79",
      "assetIds": []
    },
    {
      "x": 122,
      "y": 296,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x14ec4d768652ef30f0bd6b9e06aa2b0bebe81a848524c0c27fb7214658586293",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 122,
      "y": 298,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x71f6310d74f99f7e3629a3c163168cea86d38870b477763a460854549a6b0fde",
      "assetIds": []
    },
    {
      "x": 122,
      "y": 299,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9535cda2e84811e60dda90d4dab23faed9615ff4962d33ccfb6cb4ee8908bcde",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 122,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3be0b26ccbaf1e6ac9dac1cf022ef6bc6ac646539cdde91aaeb17a028be6f0e9",
      "assetIds": []
    },
    {
      "x": 122,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3809584c8292920ac42d66f3b7102c3a3e94e1903c5d8f97f4350fb1ee9a241b",
      "assetIds": []
    },
    {
      "x": 122,
      "y": 318,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x153903addc3f33de6875e0d70f27786dd40e0223ed0ecf8ebf120992508cc656",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 122,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0618abf4788e56d9992640fed4f53ab85fbf76f8fec9dc4deaf6155090fefd98",
      "assetIds": []
    },
    {
      "x": 122,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x93cf5e6daf9e4c6691ce5564f91a7032eb56159dffe101360a9b15dd3af3a648",
      "assetIds": []
    },
    {
      "x": 123,
      "y": 297,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9fe2c0dfd1374d83f42d80563bccb8b0b21436335cb8070b0952488b308bf600",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 123,
      "y": 298,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeae0d56272523151a9f8008f1a39784f560282852ef9b5d591c1b1d342811f1a",
      "assetIds": []
    },
    {
      "x": 123,
      "y": 299,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x82e74ce0fb35477663635098065b0570f413269b8ca2907b25043be0958c1b83",
      "assetIds": []
    },
    {
      "x": 123,
      "y": 312,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x28891ce41aaee99163a7d5fd0d2126971e4c984183b1e7106709b2f865689a2e",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 123,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7c126efc05f2857566c243afbb58b154f60b5c4081f3def095fee1c9372c2193",
      "assetIds": []
    },
    {
      "x": 123,
      "y": 317,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xad1e51dfbbaf769609bc16ec6ce7191d947f0808adb0c866c5a8a1fd445bdaac",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 123,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x36319ad367dad11cf37598c116b5a9d1fbd23daef79eeb3fbf40082215a8a379",
      "assetIds": []
    },
    {
      "x": 123,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2b332ffebc2ce64fd5acbc29b4b18fcb76a0ce9f2c00c3fe89179a3eb25a4466",
      "assetIds": []
    },
    {
      "x": 123,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x39355fa0e50d9572377442c5b52a0115b44fec382b5eb8ee74dab7bf51e87018",
      "assetIds": []
    },
    {
      "x": 123,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3185b0ef29bdbcfd3ffcb77dcb5b2c082b35e3e70efc6b0ed5054bfc394db234",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 297,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x06c25049737a52cd3623efbb732cfcfe67e54f107081ad2483954b1985433ea0",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 298,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1c92f1b26b0aabdf5e111d74ed5a9da0bd6bedd0a9f57fe88edac57c29cd271c",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 299,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8ab9af49170abc442e3b5db13090978d3349fe303e380a4fe21d081935634992",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 124,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x074cd4e4f65f07924c1f9a924836adbc7f676c57a3a0025578117d82dd9b78be",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe713637d459d03e60e77b40bc89222d714c535fd6c91931a0d582e0b774a0227",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc179b817105ae96ab6f56b003f71fd612269aec9a7da984e1dd6d2257d6f902d",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5d6ade12d616c41d4df88438901e18711d1e59d9c820ec530bf42d60e18b1119",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4623b83947693b3e260b0acdbd767d93dd09cd9e4be546006be993cdb2722e8f",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x66b8921091e369d0c06bf4b58253dd072e636c6f32661af598112b118bb503bf",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa414ca2e01c38f608432776c253d76a85746519fb5213008a71502d53b9e13fa",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xdb7d297d5a0bf9eae95f76b965a779d15445e7192244c8ae438aad907ab4f7ed",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdf02b9d8b3a28ab07919264659bc7beaede4ec6738d608b9301d5b9406d11376",
      "assetIds": []
    },
    {
      "x": 124,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcd85b37fe8f2c90ed6fc5a2479777ca56b9a60c8e22b903fc62fbbf02ba4f6c2",
      "assetIds": []
    },
    {
      "x": 125,
      "y": 297,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xda30fd2d3c6b3c1912102d093dda6627abeba95fc193f9921fcd1ca6b3fb1104",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 125,
      "y": 299,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2f33ea4fdf036e3968f31aeab738c3a3ecb401e266c2c536917aa0faea3b2ef7",
      "assetIds": []
    },
    {
      "x": 125,
      "y": 312,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7e95471ba3ae9614bf01e488919b200b7bec4166008d71bf6fe4dab7b52e5b1e",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 125,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbfc55696aa8f5416921bcd4b1cc91d62194afa4cc486874ee95b2d7b85555f76",
      "assetIds": []
    },
    {
      "x": 125,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb4df671c5231b7c0c228b83168cda1135c6ae5fb58e2b537cb7ebe5e245c790d",
      "assetIds": []
    },
    {
      "x": 125,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb05e945ebee52176b0175667192c6cf4af0dc4e2d8f941c0aa4cd6a3c37e8330",
      "assetIds": []
    },
    {
      "x": 125,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd759cb0111d269759b3b3d7c607840842b698f05ed0675e6d20a9ee8438529a6",
      "assetIds": []
    },
    {
      "x": 125,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1f355f14596ac121a5729eec1ddec802d1a23b18c7e8e7da60659fe31ea7d478",
      "assetIds": []
    },
    {
      "x": 125,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd690db06630b24cef9d06c53d2eb1b4d899d4a12d2affb151f8f8a407eb7eacc",
      "assetIds": []
    },
    {
      "x": 125,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd84ffa50bb455acb764d6f9adb182f4fdb2c447ead68a84bfe2918994f38381c",
      "assetIds": []
    },
    {
      "x": 125,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x32f04a6716beedb61b955240d5af0ff982e71182179e61a160d69b6db1120bcf",
      "assetIds": []
    },
    {
      "x": 126,
      "y": 294,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1ff6a282ca519f8c8008f87931b4999df7065fa60a014955ac3a63ed12e6e97",
      "assetIds": []
    },
    {
      "x": 126,
      "y": 295,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x374079fe72512bda2362d8d1a6e83cb6cd850b8cd1f60aebec548116d0420949",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 126,
      "y": 297,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf81c02d1b47af7255f2b2f947877ae8f8c6fd710a4c351a8cd20a3e5029af06b",
      "assetIds": []
    },
    {
      "x": 126,
      "y": 298,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x140aa72d6d9c022e2a9ec6c3a73734060ad7a9cb0160afa4edce197e05117410",
      "assetIds": []
    },
    {
      "x": 126,
      "y": 299,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x56ebda75237208a4ae4a3adcc187cd2dae930858be432f618c1ed8f02b15310b",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 126,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdb2c999cf0941c74c57bfc5724fc6f028fd3f2483c0aa0a2d29c905028abd2ce",
      "assetIds": []
    },
    {
      "x": 126,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x26b2a55eec64685e78c55b892dd11f713caf940e9c4696dc7e5095a44910630f",
      "assetIds": []
    },
    {
      "x": 126,
      "y": 318,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8c745ff667c23130857a0558b3e9d32fb46b061281dd9d7c19b7d5a36aeda75a",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 126,
      "y": 320,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x66300b5219cc3d781e2a07d2b0783b944c0ac56f0732442330f121eb8d358b4c",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 126,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe521d52b6c9f2b67f49e4d0c40a20980a836ccf0a31c7a9c8498a5cda155095b",
      "assetIds": []
    },
    {
      "x": 126,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac091f20e586818abf4cf29e424888c719ac86b2bde721d146646b091b55af3a",
      "assetIds": []
    },
    {
      "x": 126,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd89475a2ff173455f78e9b88c99c440e92c9d8d23cb205eef3e8a95769e73190",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 294,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6909c323a7b084b169831b283ae50e7b2fe01f0ccf9173cb846a9fb99784de4",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 296,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6cd4bf8e03dae9d917db7e418e08f61697507fe287f94417ebcbe7887cc0d04b",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 298,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x909d9215f8e44243bf2d767812274354ea4d6a884a1c23d505848393a706b484",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 299,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8de09e7d0878181dedcd8ede3c8af756fdf98f535b1f1c388ef6ad93ace88812",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 127,
      "y": 312,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7bf00e997dbd22d84908ed499e197cda13bec0c8831fd18e14d786931959da4b",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 127,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x347dab3ad60f8d8776a0cd7a21d969897a69b5605b3496bd63575b01dc718124",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9fbe718fdc1331cd281f0939954630fc6789157db1383bb97317c6d9920593a9",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe802826d92991132a7a581da3f2f338942ab6130f09a0100e04b7a3600371ae7",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x322d1fe59a05e51738c214cd2215d109cb51a2679a2d305fcd3f94c82bb138b5",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbd891dcc60fbd573db7db38cefdce194487b8135cdeb5011dc3809903120e51d",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x991a50336f75cf2621d6fa6ba071eebee4bcc39d6065ffe24b893c4c8c7bc8f5",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 323,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa8acdbd5ccfafd5247cb1608423e702318b4267bae6997665d980385e4969ad3",
      "assetIds": []
    },
    {
      "x": 127,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x23f06227dc689a8622f2b351a8f6819476b714b2ea72251d17be2edf55bcb29c",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 294,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc784d9015e59edf7dbae686936830e8c40bb362de89e705beb96da0f00af0f05",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 295,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf3f84430666388ca2c21931b1f639117520f7749476652ebcab7a363bd7f548",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 296,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd690f9dabca8fb7448f4a6c269fdec4e5effbfc4a401756af299e24f32bbd04d",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 297,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa5f243292c17ac00fd8a2460502ce6784d742b395e7337863531985cacbc1dc6",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 298,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6918bf571b858985994f5ef5b3d0fd38f8fbb444498b8ab0913d952a5eb4a120",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 299,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x06744d3f6bf1a4b334d2c7d47217c3350f912dbf156cbc6481922b45de3c95eb",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 128,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6583c04ba760483aae0233f65508b23f69d98c2372cc114d35e03c49b6a16320",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeaa4ce96c97717be65034521467c8d22644ed4b33330cfa64e849a4e7a00ffee",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xebec21869f99cc4c0f5bcdda05151774e41b5f89ee0eb1fdfa947015d2e9a609",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x30f39fc664b8cee0fd2679e9fa8720f28f523d4fe3732613717c54e6c1b318ba",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa7cef4ae060afe37ceb1c5a90c70a987550c8e4c00af5e088935fd6fbb6246de",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 321,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x348a31418e6b59fb7c8edeacfcf04a9675b11cd760f34cf231a7fae41a6c4617",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 322,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4333b6224901879f53b24c9508799b4613d8fbf7268647b0fc39db86c4048b67",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 323,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x6ab6828fb9113dca22edd62d21f1d13752d9580815cd72de8fc0dc6714af88cd",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 128,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x676e3e4564e73fb8d6bad1e15a0775c21446bbf009ac095dc668be3a60b11cbd",
      "assetIds": []
    },
    {
      "x": 128,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe5d10225719aa54ffcedca8632a0b4af2fa8c41f8c3271416f56039dc4160c68",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 297,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe7d89da4cd7d1b077c340f3e7eba9b7ae81ea46a5e2d709b5c9ca1881185dd06",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 299,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xed99ea216bf331d3cb8f17e52cbf367fd8464bd0cae1ca961fe456e802885064",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 312,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9bb127a9ac49586185f3a0da877d58f35a64356660a62eef58b405e3cc6ba742",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 129,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf81aadda24f0890e68cbdf7e06fb4b95216838319737ed7fe7529d17166adde0",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6bf6ffec4e14df115931db423fb579d64207c43de11272b7b929696e24a068b8",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xea808580aefe628da9eb9eda808813ffcdacf98d4e032b0c6460899bb790ecfd",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb0db47a9503752972af9f607174d9b5ae1781099cf76b7d4aa2a70f0ebdaa6a3",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6f726ec9211eb71308f93c0cf664fc4ee0cac325431ec0927d7ef8c9213d786d",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0ac8bca586dfcd036b41c4bbb89252341bda126ba3c85d6c696a143ce37fdd0e",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe5474c4c99baec643726b6b83a81ce9ce4ec90e501ed4b4f122dccf9e1821f2c",
      "assetIds": []
    },
    {
      "x": 129,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4a7ed3cc5732ce85b6a542c2118519bcdc026cb5ca161bb2489d7307324dd9ef",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 297,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4b0a4f3ea843fac38c3645f8ef792a081a1c0d53a186f3b1a8784bbcea0331fc",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 298,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7cddcc0ec1d33b7a915a2c03df9172c533ecfce03305c6174f84e921f0eda75b",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 299,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x46f1822067735e61b4d0d7b5c8e29e5a4119427cc20357ee87c9ff4d0a225082",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 130,
      "y": 312,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0266c3ec07eb79f8a67ccf55ad308e8321e9632b6c70070895e600463dcc0930",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 313,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf425913c2a2f3d9c2d75ff35ab70825d9b5c8c96feadd6c9e3c75c3b37f7d0f5",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 315,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x99b66bdd45fa1a75f2c04ba939deab91a27d4bfbcd3b74cea7e237bd7f2b7adb",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 316,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7de3eb194a13eccbd255fc35257f38ddc3462a61212cb882b5e10a418a906399",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x788b527a116ad8ed60f23d0faa9b542146227cf35bb6ae0abe62c78831355eeb",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa56b24eee45edce23038b36f4dc6f6fb33edc0889f72736c1fc10528826ed1a4",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x756d0d39308230ca294fc21579e4d1e2fd335e404167b5e0b1cedf9babb83156",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 324,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc79c8bbc1927926928f8a5e7a5d9f4f21b3e40bf4ceef40b90ae84c7f4219b7d",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 325,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5821cc6e4660f47bf6532dd1db5f203c27e8c42876a98328a4557ffc1bb7e30a",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xcdfca060baf36a0b92a292cbb8a181661774a52abcb4258baa4cf3c40b27f111",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 327,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x294fed2293f079a44f86b7577067203db8536beaa48d6f0539ced0e342e7e190",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3a35c60ccde2ab0137f0fbcf2bfdac056e3d946a534ac20db37f10884ae33c49",
      "assetIds": []
    },
    {
      "x": 130,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x620b6c23d55777dc72bf4ae2550e2f9d703a0c1d6a10bca2315f37b571991231",
      "assetIds": []
    },
    {
      "x": 131,
      "y": 298,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8ffade02ced7d5a8ff119d86cb6abdfc42e1c1f4a5168c97d8d7dcfb0c68cae4",
      "assetIds": []
    },
    {
      "x": 131,
      "y": 299,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4f8e94df3347239b013a2b0c42a113d71dfec6481935de827bdd4ac477ef6b36",
      "assetIds": []
    },
    {
      "x": 131,
      "y": 312,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x63131102be14c81491b5529e299edf755eec6399e497932a6e5645a72a226045",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 131,
      "y": 314,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x873220921266a579aca8a7c1c235b825b1e7b3c230c77f06a2b0b25bba1e4063",
      "assetIds": []
    },
    {
      "x": 131,
      "y": 317,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc9bcfebbd3735c364d826c7d4a815f61e083108b6640bac0e0cb3eda553eede6",
      "assetIds": []
    },
    {
      "x": 131,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xced66db7eebe125390b2ae647c888f2ed4a910c5e7d6d3f97c1757d9103776d6",
      "assetIds": []
    },
    {
      "x": 131,
      "y": 320,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x101cdaaf034b69216ef33e6c4bdb4136323c06e4c9b12d7f39140998beca759f",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 131,
      "y": 326,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5dbca042cd9d90e88961cd0b2d4dc01662ea6c46c94331d32ad4de0141d52714",
      "assetIds": []
    },
    {
      "x": 131,
      "y": 328,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9f9d4f035b257e689fc8ceebad59cb6b9d581b9ba333740f8daae201c0b574f1",
      "assetIds": []
    },
    {
      "x": 131,
      "y": 329,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x96dadbc804a857a4c1d9b900dd4382fe8a34628db58f0954408768beeb57df00",
      "assetIds": []
    },
    {
      "x": 132,
      "y": 309,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb8150feee862631a2094dad50b473bf408011255b1a5b1445745b44f52750ba8",
      "assetIds": []
    },
    {
      "x": 132,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x02f76bd287d988d5f5d2303493ed86b9ad683ecf7b84909509cdb3afda6f855e",
      "assetIds": []
    },
    {
      "x": 132,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x75bfebe45887c2a607532396e32acb72bced208147cdd87028284ac7624835af",
      "assetIds": []
    },
    {
      "x": 133,
      "y": 309,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x20beb77519fb28cfad914d9c288d432676192a2af514867b150ae53bb11c40ce",
      "assetIds": []
    },
    {
      "x": 133,
      "y": 311,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x657553cf75c5a91bc8b5ae3ae64e0b5ee70009457de6c732d14e38622e515e0f",
      "assetIds": []
    },
    {
      "x": 133,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa70f94743c43f9a1651e47ff7636825f4a7603e1cd7e73d511b63f98fbe91af9",
      "assetIds": []
    },
    {
      "x": 134,
      "y": 308,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84e9bde51da0a834b2545cd65e3327773b037f71eeda150de8a814ca4e954bd4",
      "assetIds": []
    },
    {
      "x": 134,
      "y": 309,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x6a095915cbed51f0f341ae87834ae116bf35430af54aef1310320c99dea9a05d",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 134,
      "y": 310,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x69eecdade5f7696bf1aefeabd27f7523845b87a4b85a8b5d33c99c52fa806054",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 134,
      "y": 311,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x27901b4968941c22c18e69486aa3572131491612f747da81517df06235717883",
      "assetIds": [
        "24861897353025848750348717390502043067474471703165550026",
        "24862271497445005461495777533819218435927503621896551882",
        "24862645641864162172642837677136393804380535540627553738",
        "24863019786283318883789897820453569172833567459358555594",
        "24863393930702475594936957963770744541286599378089557450",
        "24863768075121632306084018107087919909739631296820559306",
        "24864142219540789017231078250405095278192663215551561162"
      ]
    },
    {
      "x": 134,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9946704c570c4a9b7ecf2f76538e5f2c7330fce70996fbf9323829ee31921f68",
      "assetIds": []
    },
    {
      "x": 134,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9587b296ff6a4cbc5f336886ff66ba6b9700cba83377eb13c191a04268381366",
      "assetIds": []
    },
    {
      "x": 135,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd66d0a548ffdfb0fdbe8a44a908c57a59903fcf8f4e8a8499b2b5ce6603c2ad4",
      "assetIds": []
    },
    {
      "x": 136,
      "y": 318,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xeb2171cc5f7de0cdfc50782440690604d62b9252e652a7911c7129d8ea39a2c6",
      "assetIds": []
    },
    {
      "x": 136,
      "y": 320,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2cd5313741df558e16657ee655f93a11b4ec0a2c003263ae6dd4bb5acdf3ec7b",
      "assetIds": []
    },
    {
      "x": 137,
      "y": 319,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb1a8da720615981a6f04193b1bcf9a2ce686e7bd4ac88d267ce1a5479dfaafc4",
      "assetIds": []
    }
  ],
  "solcInputHash": "8858f9e6ab4f09df358810b0137a379b",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"@sandbox-smart-contracts/land-sale/contracts/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"./common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0xaf8b091a3d524b2ec04976f686d0c8ce4043259f0d2b54fea3d9bfa26114e410\"},\"@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./common/Interfaces/ILandToken.sol\\\";\\nimport \\\"./common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"./ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(address to, uint256[] calldata assetIds, uint256[] calldata values) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address /*operator*/,\\n        address /*from*/,\\n        uint256 /*id*/,\\n        uint256 /*value*/,\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address /*operator*/,\\n        address /*from*/,\\n        uint256[] calldata /*ids*/,\\n        uint256[] calldata /*values*/,\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(address buyer, address to, uint256[] memory info) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(address buyer, uint256 priceInSand, bytes memory referral) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0xa82e18a438f50c822c07c4488ef5b4e3ece88c02bd8df22d6a86b7f0d944e0dd\"},\"@sandbox-smart-contracts/land-sale/contracts/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 private constant _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n    /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(uint256 amount, bytes memory referral, address payable destination) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (\\n                bytes memory signature,\\n                address referrer,\\n                address referee,\\n                uint256 expiryTime,\\n                uint256 commissionRate\\n            ) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value: commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value: amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (\\n                bytes memory signature,\\n                address referrer,\\n                address referee,\\n                uint256 expiryTime,\\n                uint256 commissionRate\\n            ) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(\\n            keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)),\\n            signature\\n        );\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(\\n        bytes memory referral\\n    ) public pure returns (bytes memory, address, address, uint256, uint256) {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi\\n            .decode(referral, (bytes, address, address, uint256, uint256));\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xa29ca91ceac32877ea1510789c3d0b8a2cdc9df24ad4b0b3cfe4fa482cef3a6a\"},\"@sandbox-smart-contracts/land-sale/contracts/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xcb70e036866069fdd68598a740479d605e7095d897da71ef2fa64b83d42a6342\"},\"@sandbox-smart-contracts/land-sale/contracts/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"},\"@sandbox-smart-contracts/land-sale/contracts/common/Interfaces/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\ninterface ILandToken {\\n    function mintQuad(address to, uint256 size, uint256 x, uint256 y, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x1a168108224afdf8ad3e01c6cdfef2275edc40a5ccfa6b729a5b42c9a964d95f\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220a5670b1ad93b092eb46ba00923ea8f6c7cf8a0b44a1214b01f8ac6fb833c6f6064736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 924,
        "contract": "@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 2455,
        "contract": "@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2524,
        "contract": "@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1935,
        "contract": "@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1937,
        "contract": "@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1941,
        "contract": "@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1740,
        "contract": "@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 1742,
        "contract": "@sandbox-smart-contracts/land-sale/contracts/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)1053"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)1053": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}