{
  "address": "0x0D879DC15790A42ebE802d8A0C833eF23485199c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf9bbd619244cc61f6e5eca6b5936969f74413b4a8aaa3e2f8f13574a01d6c193",
  "receipt": {
    "to": null,
    "from": "0x7074BB056C53ACC0b6091dd3FAe591aa3A4acC88",
    "contractAddress": "0x0D879DC15790A42ebE802d8A0C833eF23485199c",
    "transactionIndex": 62,
    "gasUsed": "2667591",
    "logsBloom": "0x0000000000000000000000000000000000000000000000000004000040000000000000000000000000000000000000000000a000000000000000000000000000000000000000000020000000000000800000000000000000000100000000000000000080000000000000000000000000000000000000000080000008010004000000000000400000000000000000000000000000000000000000000000000000200000000000000000000800000000000000000000000000000000000000004000000000000000000001000000000000000000000000000000100008000000000000000000000000000000000000000000000800000000000000000000100000",
    "blockHash": "0xe868f8ab967f2cf157316d09691470d9c861194b398d6bedc43de499974e7a77",
    "transactionHash": "0xf9bbd619244cc61f6e5eca6b5936969f74413b4a8aaa3e2f8f13574a01d6c193",
    "logs": [
      {
        "transactionIndex": 62,
        "blockNumber": 36467251,
        "transactionHash": "0xf9bbd619244cc61f6e5eca6b5936969f74413b4a8aaa3e2f8f13574a01d6c193",
        "address": "0x0D879DC15790A42ebE802d8A0C833eF23485199c",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000bbba073c31bf03b8acf7c28ef0738decf36956830000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 333,
        "blockHash": "0xe868f8ab967f2cf157316d09691470d9c861194b398d6bedc43de499974e7a77"
      },
      {
        "transactionIndex": 62,
        "blockNumber": 36467251,
        "transactionHash": "0xf9bbd619244cc61f6e5eca6b5936969f74413b4a8aaa3e2f8f13574a01d6c193",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000007074bb056c53acc0b6091dd3fae591aa3a4acc88",
          "0x000000000000000000000000b2dd091ea6e591d62f565d7a18ce2a7640add227"
        ],
        "data": "0x000000000000000000000000000000000000000000000000011c50cbe2d4b40000000000000000000000000000000000000000000000000235f5d314356b30ad000000000000000000000000000000000000000000000045f81fabb2bd122e3500000000000000000000000000000000000000000000000234d9824852967cad000000000000000000000000000000000000000000000045f93bfc7e9fe6e235",
        "logIndex": 334,
        "blockHash": "0xe868f8ab967f2cf157316d09691470d9c861194b398d6bedc43de499974e7a77"
      }
    ],
    "blockNumber": 36467251,
    "cumulativeGasUsed": "16741607",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9d305a42A3975Ee4c1C57555BeD5919889DCE63F",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",
    "0x7A9fe22691c811ea339D9B73150e6911a5343DcA",
    "0x1b47567CBE36e63293A7A2018F79687f942aB24C",
    "0x39e991cc47dc35b53d6325e9dc39992ceae33555e5792be38ec9b913b3f387ec",
    1671537600,
    "0x3044719d139F866a44c988823513eCB93060bF1b",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xd19cc137bb848d3a48ad8ad883886b67c26761dc",
    "0x42a4a3795446A4c070565da201c6303fC78a2569",
    "0x7804fb2AF15bB1323795A888B09913cEf629Ffda"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 198,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x070977f72f33c8cd85759f3e4cf9412a864092c7c1324d97f15b113efb17e00f",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x32a67e1589c74d4fe526b4019017d827de74578e2419988ed7e80d667e79de20",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xff1adf759da8450e25abdb4cba6218eecaadd4aa9129db4a493904ec47f1241b",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcf157d6f268eb5b33172010d31f6ba71067a2db98937ac32791057f661f19f09",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8341fadb79ba328ecea8e9417d39fc570d50861b3d57996f6562887dc6cfb5d4",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd0ab2c3b5df412e75e499d77509ee1899a7e3e3a565795d4601f9ecfa0b9f209",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd2825de6ac220ca80bad7a5f3b8e3ad3ba4806f219f9c0d8af8057a255859679",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd458ae52c1b467543f9ff8d5d782cfa88240a85b201a2f0d8b84d83c64d05142",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x926ffa87030c845abbddc2b7250b34e7ab6ff3284f1a342c031599ac73f4900f",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6d318df60560ddac8c002412aaeff17f6a21f1f2778d940e47049b7cdde854e1",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1bd5f41550e6ae01b0caa7f884139598c84488d3b0474377b866debdf830b67",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2da2ab599885b7898fd006f63265e23435f6624ff0dbd5ddf8df8ea6b2e9400e",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb539d93a5adbc23f927aad2d4be83687751703b90665c03071ff48e3a4f14692",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf65e896f3d0ebb601182fe0b2e70c3af4280cc8d58d521b5318da81a959e78fb",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x73fb08b6901dc76947e99160d2a5819c8029decb5d892dfd463b7c9804e751c8",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc2c16f2ae0009d0c28acccc5d3653084274e129bb7885748da351986f833df9b",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd7117b012fc373ffb8bf9fa7e4b7d30666dcc25f23b642c90b5074fce9479a27",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf560bf22dcabf34c26f2acf73a67ba1d37787243c38d077e62b909097f62f73c",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x78a5785fb3f0af24384516632618621cf6bd851c9b4dba94341f0c89df0e0379",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xafa648d8070209678b5d1c57e31f53ec92327dd127b727bef12d9885d58bea15",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1ea52b1e75bedcb11743646fb94bb05799d42dcc1d76cb2ccfbb6d194ca75bc",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x80d9be2d8c4f2b2cb6b40e6168d43c87eaa66624e4ee0aa1bddffbe20020615f",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcacaadb692a7d3659f7738e15c1d9a6acc0d17a7d7707c29c02a61ad734eaf8e",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdb9b83072d71a7fad3ac87daf97b52041a208c1c015595b5a79120af2d0563a4",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x353879761fced0c59990a753d22a4f1220a559e3f7b9fa36118d6f3dfd79e70c",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf501952efc2ca4680ec9a4f87a80eec172dc36a37d0f01150feb3b4efac1e2b2",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x77199ecb34a3c855209792f65df6b583ffde4d8335a21315a3afc4a02b8dc14f",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf5d1af28c9fff8ac0fc79b6d619bf16354bc5404b421709a25fc99423100c230",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6b6e7f79bd230f9c4f749375a2ba1bddefa51002071ecea4c51ab2e5f69e52b2",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x276b0e472f30bb74cd47f87c9818fa046b90183a28679a683ed5cd4e985492ce",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2b6d9825c0547e5e653347c7fbdec19a4bf1ff8617531ad0e84fd58d3a05e2b9",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a8636188eb8e42d33d25fb1dc2acc6dc03eb1796595bee6ddedb3a916e1ca79",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x06df3f6ea362d78b7b23f5d0cf94bda0b15dd339eed07e1bb53eb6f1849448fe",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x913643afe20a787b43f60f97f9423a30704ab20d48006dcf51d116fbb3d65bdd",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8a8f74bbb51fff11d8f92555c5270421e2c34c6978d3caf7fdcee454acfae717",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2d0457aefafca215e9f62e847eb65b7e5c52e3a2c0bd0e7bd4bca5d26d964108",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x83d063a2658f913a0a7a25d06823eca6bac3dd4deb02aaf9f5a5a9eae510a98f",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1a34bb8d569e575c264c409e53c7bea4a882f1fd8507382b93e45c917f208c2",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6db596ca372c4079c39369ed2f23b07bb63fb52f8724dbab8ffa54caab280660",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfb708a1ee850e5cec6b08539776a6d91d709ed48c1cf799bdb20442db45398a8",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0db21e8f329faaa5ebf5003488ab219179497a5871b056e2ae9699730bb4196d",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc5104a94ce7b3ab772df39f9d2b77ae141ae8c6b10fa12020e9a1d9bd1241105",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6d0928a703a09d2ff3719db735b368fcecad6064940059ef441b126b873a622",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcacd18e15be01180fe42ae6450e8fa7fa495ab5cf7de6e9a4f9bdd95e6f02921",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17003a2b81bea1606dac90139d3bd3512d4804f12a5eaaadf2043335e9f33c40",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x297d86757cdb8ca12976fef6c6c8c54186b504128a1a1b63720b8a22ec365e15",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc489feb16878a7ae98ddf44646590191cbec4ee2c868dcc83cfc0e22a26f7654",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x28808928d75091d99aa50c2245cfb4201a0f0d7f4d863b3e3d7a99cf69453979",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x212dfb9227c586189918c52b6c8c685a0c235d2b946483d40d7257c0c74cde85",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb47a18b3a4e08cb4fe7098c2e98f415e5550b3bd667fbe5d4d670fd56f61913b",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa2e93ec3a9fa885b1fb2d7cb7a1c3676155eefc57d5b06f865698fd4489c04ea",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcb5908a439e4c473e7338b1d55428db90b6b1cb15de157f7358786475185178d",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x05dc079f50a5a57988e1027a62dfd1ec755ac9e0ecb0efd7fe8bffd1dc08acd5",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6d38507ce87d566c9f707a0dc45d2121625bda2f519dc7ea67db999f1aa5339",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf686c39f1eeba3875c2dd1ac9202adb8139bf97e85dca7f6093e25e77d170b80",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x087b270e0daa9da608451214ffb344e60459a2fa6cf4a7b09ab17f974a095151",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe7b8cb0f232323d46f953ff958980b1459af19f74efd527c04884f225bc48298",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb0ef748397a0a7fa9f50b820e279e48a171a7a3518ebe04d2e8cccf706e94378",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd21cd2222099a1e5ccdd1eef483b7c1191355b1e7adedda701bef9249ab50cc",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 176,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xfb3943db2b4bbdf719604cf569ffb81dbf11da4c01b50cbb9d8fd5289614beb3",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbc451f6e2d12589b6bf15c50a344732f5060a8cf04ce75893c147f9f0fc64936",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x96261e606523050e2df604a5febbce0c47ef347835442f1bb9ebb4462514deb7",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc5461f7ddabf031d778c2c8e1913dacd4d34c002aa17c1bc82c555ab98a67ba6",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x143c3663d1209c5b65107b79309647b65a21814d3985d091f38141f3ef29279b",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2b75f2cc097174a66d8beaa12779c8d691f38d6a824ab51512ed5e2c3cbecd37",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4cdd028ffa16c560ff257c06eba5b6fd95b50cc5ae8db7ef750d358f6b83bfa8",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x41be7b8254a9989673183b634242d8c1572d4490861c7483d0129243027ad213",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x11e1fef1aa0ede732d25147bd844f19c390330200022f6533bca687115a60668",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x886e015f81818f08b76da14c187d19ecac937e7b226613dd2f84c3a4283cdc6f",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf0ad39c56a52bf3bf2c4516ffaac6d73fa501cc14f918348cc568546baf7ce99",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc219bf85973a3c786ed1b460bdbecb094e08b6f7dc130c8256393bafc06bf046",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdc9707fabeb141c29ad99c0451290e5a0b315c0087e162fde18db1f516fca508",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab583b59ff02c82e2709f2ab6a34bc4bbeb828bdeb5a628c4d398d92ba462da5",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe660a404ddcfad8d1b228cc453a200a4e0ab25fa49cabf2aa6ccbc8a163abe15",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xce2a011b1e61e68207656680be9a409e6f8900fcbbe9eff687db33d3f819b2c4",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2b7658eae68dd3cf964d8a07200a4619269ec495b8818e8e6cb88396decc8a06",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x58f2799f18c5bb80c0635c54c0445d0a06ddd0fbf9bc94e4a5271787ef0b796e",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbc36e8817e7a07ed6207c148931d28299a5b88211e71ff1e6014793cdc0b1fb1",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x22bfd445dbef397cf16fa85b7a090614024d0dbc96d42f5e79c0e771f4036698",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c692e3737540cd22ecc6faca46701b9adfc827aace3b86dc27ceced8c7ad078",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d6d5b43bc2567423508ea4e59dad1fb453e50ef1b619ac4c2f8624ec12a98e7",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfab6b55ce7c44c9e9b675d8e73c3b1ddab2d6ba2c8827ae7d9fc2b0db874a63c",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa25f45b6e984ac1d171817643f3a40d3d74fbe80cade909cc0df96ef0f2b7ad1",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x07fddd69784039bc07c259ce269f3e39355f135b58b9766edf90336b1597b07a",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7e86313f0531287945308bd287989a0520a6454828ba0cb23b22218bc557dc2a",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5af2f307ece6b866ca4d1e4c725f0b232e1a268c9e011e5fbb565090497be3bc",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb03f527ac3c1884914de8a4d724b4c9ce2e8d23c7fb59b5a0bf5afe90ecc3dc9",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b6c292aff17ea85ae3ccb84d21d725e7bda5dd95100cb00f19625185b46b9d5",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x957958d817c418f46ec20e3919cb450a7c4dfc41b4bd54e8408871ebc2061341",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde9414105c16ff6f3a0167402e9143b678e3d84f4c26c9d4ef1a5cfc755e9496",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa3a93dce133044546a2a1dbe9562eed0b03a5eaf36e1ac1f86b7844df85462e9",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe33403acc953002032b5c89235145deb925157384c3063655337bb697d98e069",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x11994d56fe8f03356749e8436d35b348e2e74b927f5e57ad641fad33d30ba686",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcd76a282c00fa0d2f739f647eed4357b51ffedf4ccd8418afd36cacbe2114871",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1f700b8295bcf2cf73ef41c10a380d22b67c6cf950f18432b8e9dce75b524649",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc86b7c719d496c73505c8d12c37ede429c7c1a790c8f73793ddae387852bc579",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa6f9f91bffb31c51f6f70e7e69e136ef3fce900c62673359360ee939efc3e34e",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x450b31c84bf7e34fc6e70d11a3d974f8368fe49495c9cc519e17ca315c23a2a8",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x73d98f135b58c88f00f8e45ea78fde861b63727a7e79b5d922679b0b6f4e53c4",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd9ec4ab0278ba6c6b5a4bb934bdb172667b31cdb55d978443de2902710aac965",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbb21a7bfbeb7d2fd2e54a5aab558a903118fa9c3a570dff6fb89a7005a9ade10",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x32111fd5b558ab90a2f5081208742678870dea57e6469462754c17bc126c3fe2",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xda624c2957df94c1a7a522756f9fb37c3a82c48b84054576201602300279f468",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0df31fa012260286ac0074d7d706c5cf810a44b3fb105f15425e63fc95dba417",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17ab0e1806bc7f8a3ccaa6b8c8826b6e359c8dd4eb39363bdec5af3fe3d94b3d",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x341c2f445e72ab5856bdb438690e1591266a0edee9732e7d31fd0cfee7e2ae19",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x41f2c7873704d56d0c5bc5aff4d669245f3acdaf2eaa4b23fe47d28cc9dcda9f",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa8dec2aa3100ba7d8f7e65cc1162d5b943511adb8c00df2c21ddb1f3810a886a",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6b165bfa8974541357a8aca290471e8da46805712b2cd1eaf63d73289fdc8d0c",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1a9554b9d9ee9987b83b3523cac4c7b7abc0f48d2b01ec67fad09f861ec87391",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf2d014ffc44e4a6be4c2c4b74cbb3030a996e1934d6b4ca5d449da42928d5e82",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5381df6bb1608f50f881e480b7f5bbd4f853586a7fcb3291ac41898f688be986",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x539b1076c619e29ffd0350909ccf2cbb8a1ce487f4b180ff3be6beb50acfdf4c",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a2a23c2dbf25dfdf80e83843b7993b8c6d9c56c3d5b051a742e1cc94e9a7159",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b00b57055a1edec928eb7f88dae7bfeeb7a909a0b720aaca4efccbbfef21eaa",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5dff09eba078af065255f2c94207b60ee6ff9096bdcc9349ed5d58f35c424f15",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x35729ea51a1123fdc8f0c4d6269f9e3d20d39f09386cd2a97e616cebde32d9f1",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 175,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdd608ab4f68b20a2b0fc491663b469c60a9e1741f34e7cc3c4ea5de2dbbf9eaa",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 176,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9ac8c34d66f65eb8457bad0cc5cf66d1ff664f01d885e0bd823bcc0a5c196f8b",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfb15f5bc7316ba6e188d351595c38d185de5e07e4b968e071632dc4739629062",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe4ae9016f0df936167b67a16d123d705728e2c865cf858811f2d40359c17e0fb",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x3ce2c05a24cd06a0248cc361f1d834519c586bb3f17dfb38014007a0cae05999",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcf7187b390155bb593f58eabf3a532193d8c610f8744c0c4a9331c6d5387b601",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2297c93cdb9f5da57fc54c38553d5c15a45c9b3e4c65e4bd6fdec0fa130c04b0",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1ef7097b84b8188d5d6c77c4549239adc70caf5f34c67611adcc200544c4862",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x88a1b0cf9b9b9c4e1d454ed58419d907686aaddf43c713648853a2b225b41f17",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9245f48c669c090ec9ff8f136f17989b191a9425971f7817b051a11a143f9aec",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x11a9d4840834391f5200c33bbd954788583bfeab06524044e56a19ada51c6417",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x79e4fabcb0033eae75090e26591e6387831dfacac6147c1dbfe74d13918567b5",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd8d36899cc9d8ba1a3423fb541d7bc49936dbdf6b837ff4b9c3be706e05875ac",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3f51ed4d38f4837b53ef3e86867b66b20b037c53d0a8b823bb3d597e88743a5c",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xae6bf583ef026d77cabe8e889f32b12da71fc3096f97bbc9a9b5627f63b5b67d",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfbfca00abb89b207e5d299de4c22cfc54a6b7df6ca03e73a5888b903baef9424",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x287e2c3adf37be666fa195d992472852d1ac921e8671256a408dd12f5e69be46",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa9bc8d69f89c36e7d90428308e89aa889e656d78be84c7d3cd6641be2f87ab87",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac629fe7388e96059583203a96932a87989e588d53dd23ce521eacc76f56c6c9",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe016e8573a0ad8a797b62ee4677bfb987e689c91b23071f57400230b4b94733d",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7930d769e51f6239797eb59c343df1775f8c892ca4a494b7d07c0820f398877b",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2a7d90bb613c54fe80f890cd94b8af06adde889d46b290b97bf04db3f2f03b37",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x149038c95af4ff61b2bc66cc0bb5d475c8f6af57fca3c4b2828801d2321f1951",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb4d5a09a294ba4340a14e75bb7e9cacb4e5227cfbf84cd86d30d3e57fc40521d",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb70cb561fce55ae8addd1778b502aaaec576dc8f49a97debbbf68a3c1884ce1a",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x145305e63edcb2323b0dcef4ee6d13b612a774d08db158d0009ad2294f4eef91",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1b793569d69b35d99e00d6a600ad40a2329440e1d6aa9eb5045d306b07675faa",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x80c8acdbfda9b97953a52a4d81f248e5207338a74554e75ef59a69971b9e0362",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8b2bb28a9a3d743525cf080e3bab82b800231240e59587c9b11154353c1c05ae",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf8cb2e0aaded36674ba4e566dd50bc2df77957681af16ce833266ad7e7a0068",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x502593dbb94c7beb1fd84a06bc910fa03d572296fe7d255869cce0ae27c86f75",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xfe7b34404d6f956cc3db4a46c241b39e18cd5749a42ed7965e008ec8225403df",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 176,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8f0fb7caff38874a9bc77340c7ccaf613223fed012747e52f3f1abde3918972b",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xfcfcccf1db24703ab0e55ef69fcc5e45e141f1a4d0acd4f0feb1edf1e6f6c100",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 178,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1c7352cedc78915a375f884ebb64be51edf857edeef7fa8e37a80285dbddda16",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb518cc27b46e3a5a8c565e8d35a0c5706ca855269ca72fad8618527bce74c08b",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61fcc201296d599f663fec2b2542a7908aa272e5e57b5d83cf2a61cef1480b56",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7057d5341695b9ffbf958c6ed6dc650551c2d85dd9a86e01177a9ddcc9399ba5",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 168,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xefbf293139461ed55c61e2a2859db7014a22401ad2b65ead9bd4f02ec47689b6",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 169,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8e208d640e9cbee228cbc0b8ab0a99a0c1761e054429acebbd766619c6893bff",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc6609253177c029bd52c9c23213d9cbec3972d8349edda37618dfd552b026875",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfcb823b3b6714de861d74387370e7ba1b89219b3da36207bac1d395ecef21b1c",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe896ddde82f6967c5e4baf49077d487dea4609e054012648a33ddb74d7e8579b",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x394ffdf89caf557bb6b6edb45e17b5c0423120883e9a43ef35542e692eb00dbf",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7576b35db3bfb69a248184e5153948d31aa3bcfc5ec5c69439e2e63385597944",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x74401268f726fd9f7c6a5df811a6f3e0ef486ae775eb2d6baa31e84bfa978915",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b4c93bfcb4636dafac09bf2cbf80d206843961240a442dc85df5a4313c93249",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xef9591a34858d2d017501ba82524486256b65f233be2a4139462d9e2786b5d1e",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb6c2e4edba453d29e7df462d1270067c7082a055bfaac85ab540a93eeac6c721",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1a05e04290384111cdd67ca265c6ddab2f7b1a594334ba0a6c43b6feda1550ac",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac4f5c98f5a4b678628b2f46fbdb5e4004ebf54646ade772387cc65c7ab74687",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4f2dffaa45b23e39491b8a69a751902d8d1b7d1a854ff3da1994875921d9bdf3",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd7ac6b6b0e5099b9e1b6fc1e5aabd9ca7866818f95147af1a4062f7b6ac38125",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1c50b310251dc3d81c969cedd63ebf1d699020c152d7979abc9351dff1286e98",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbc5258b0f3c6bb1879a78c08132f7d51ac3a654afe792c39dd593debf8366542",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3c6065bee70260ebfc8621d7e56014e8c812e5d919722e50be99adbf0aeb0ef9",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6f18662402a55203712cde81ec1ec298b4343fe2085284c1de961aef50a73b75",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3fd952fec35d1ecaeca4ffc5ee45ecb83d0171da4409313ca6899ad0a1156c72",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd16068e120e334ac483240c3a7376c7ceb329ed83db0858e4098578a27cfde3a",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7b7173e629f65c580614ce61926a45e722dfb72ac6bdca94e50a982ef345a1fa",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5799db2e93eb4147499beb7965300e4b575c3e081497b12ce51f27a6a2efce8b",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5a45925058a0857a9ea74e656d474496874d9692dbbbb544f7db83c91daa07bd",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfdc930d2d0a0c6e81ba95bf6f28c89f8ace642aba7839afbbbe5a251a6188d12",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa904dff66c0a49f25012d63b447bcb472ecbfb7bbd08d3e5bf19d453390c3cc7",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc15404b336428941af026d8ea78c85e257fb2ce5f7f749c22f7a48f752820725",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x76e17ab23174b71257a6e0c739203251957e0bab7e033084044dd67db8e876a0",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8fd0c9db298a4569f7a8964b775232a0b9883e6f2b8dd8997bf2f8cd3aeae130",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb4a2aef40b9566e2ecefd613d272f12b1cab668fd596a1774697bea3704b9099",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x41b585a12a80fe0c882ef249c0ee296ad4aaf280172f65d8387b89a82e87f444",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x58bbc347b9389f4346c7696f486d0e19e8ab335ae1d3e4d4b1cc1519985c5b09",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf0e54800eee269b7c502b79abc9fb0c76021b9c7d445375b10fb2ee8cc32fcab",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x656c7829fd2fedb7ce217b8be354130d915a18ce5591d627e27ed44f66f028e1",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb899d56951b4c83e186eaacdf96a2286e6adc2fc9a60874bc3835b0af7f7144a",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d0d72ff5d1e7d572b58bbbb3263c7ef97a65f958c7b22e099fe410126d21a9a",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6268916a80560f8f4ded08989f0ea06f2b94efc64fe750fce696fdfde7cd271b",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5d2665d0356fdb60eac644d5f4ec9583eab91113fd80b55f9b8acecd835806e",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9b173fdaae652a451bfe1c0f4f37ea7039171e78b04b807c65eeb821f6bf2263",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xfaa2a3054b28e6d22c519e350ca2a86d5a22481e27f4cf1d5a765de142708d25",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8c04791f34c6d56212345e769f127a12a59facb43a3ab2d1b7a40b3c52ba1849",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3578344433a814f00ed00ca128c9cdc784dc1ad2456cb17e1d493463dee6ec22",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf781d0ad772d5f4c9281cfe3472e787643fe9e337289686274b354fe41fbef98",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb5cb05f9467aff48daed14694d7595e2510d0c49ce86fce0a3733f88ad7d2aff",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd8f9401b33042dd0918aabec8a32f3810005671aa79a86131824aa76220416db",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x50b8c10508a6d5e45f01399205a222a1170a76a2868f8024c6a5c8d6419832c3",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84a4fa925026e7853440c39a2f930ebcb0e4ebbb5a2c8d37c1ccde7179cf5d83",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x33f89688afc49f4ac1f4ca26998f13a6ec4da33179d28dd64be8b6802355df5f",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x84686254e975fd2f3699485687e84528f06c264be0cab918aea395ce5d712fc0",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd7e4b18b49bac89761b88f1b90649c2fb9e99e5effce13298bb5fd30490fe08b",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xca65afca81a3fdadd4fb16cd315b493d1e478419ccd4ab0b178df6921a3a0837",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1d6080fb4c36fc1902b28beebfd87a8166fdd44f0e66aa69838f82697711de97",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x204b94464e811f011d98361a9ba86f52c1bc2ada5aefdb3ee763c9baeb0bdcb4",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x96418139ea7f16759c2cb2e097dd2002c64461588871b7a3d72261a13b8e7e04",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcbdca95ec929d4a0d7ddb8ef3d5681fcf46b3d95bee3cdf5066b2ba64999ec8c",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0c617b29a0c035531a4823ac16e502b4422a9d7457a1281a745bbd1d838580da",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbddf6170389accecc31a0b389848be0cdeba0819031e2d1e091fad8ad055e535",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x54e852bc7e7eeaf9ce2fdea7428b732c23b33cee4f06df0f4409a5f9a2c3c230",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x445a126a1e6c990dfa51a18d2b5ceee37efd2c693c614a920ecaff4b65628bd6",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x986829b602e03bca90d7c5612e6d866386c41aca6fe36d1e6df0816ff10db6ba",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1802d51541f42181a424ef1fbec313a7d4ddf3007cae94d2c1fd8c98863e8a83",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf39eedc3a5f8079451a313fc62ea0c24824d4f4f4b3ad4b2cbe81719b9daea45",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf165e01efa26e01b064adcb5f3da86367017e29b507e18252054972f8128819d",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x64a7f36cfa763adc84dfbf976df3f228bde3d6e6db9efc8fcb076aef284bcfc5",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b6583cd1a88830dfee44747d337dd94c33e1b4ddc7a2e91b878180fc8209eb8",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x718f8463b7e591a9b504e69909def1e3795ab67bb747ece52adc17182e06bbef",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0400b5c1f9720e5e69482432db60aa8ea9d3af0ef1b40dcefa1e801639cff073",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xec21046de0867e3f86a010aafa4cf96b9c097f2104554528579bd93e9a94f5de",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x427fdc1b141eec26cc75b9a6b49824f636f48e1142546dde3255ab6112114a8b",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 182,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdb1086c9002a3531e9d3e6ae5ab55c0965e5394554debceb8c9a18e9ac5f8d1e",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 183,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xbff6e8aecb5ad1a38ea8eea5538865e02e03040feb244d872dad16615939e9af",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 184,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1732bea306c445312bbf2fbd0aea12b9fa21607d65a4816ef0011fa7a08cc185",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 185,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb0dc4fb4506d4f1a29b1cb89102b2c58e5c5dfd65ccb6f95bf1669411e0a715d",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d5f57a922326c295de35eba06f25970fc1672510c26b5208c9a3d8018fb3be6",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x89aa3b218a7148fd1ebbf0d66c6088d3e9127848abe7b2ebd78c888e736ff953",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d6883c180f4e266fa355f2f19a813a60c8e60ca248a1b526efbb0f90eec39a4",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf7024af6b8fb116d26daa98287e6968a5596efaddf76f686ca2eec45731699a5",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x33139b2e320659660af5a227df4f8a0c46524eab5a877d1a7362628701dbe085",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xefc0b80502ffa951e4000b21ef628fd66d8dad812007d5b113f25dc8bddfb79b",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x72841eeb6c5d5303a6acc3a74f66fa88e6c9a903568f5db2fa0091f284df37a5",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2b87eeae78f03ab7e9ba80ca439f19184fc02c4fc0303fcc45c134b91dd6d9ff",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xeff8f686e73c65691489dc1f667e89e32c98a825fb4bc284a54c8ea3aabeb86b",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x188614f56a45ceee84a62bec8a552adee30598a67827c69184d22323611900a0",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 176,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x13c5c4eab92eea8394459f18908e446cca5d3fe7367e0b7fb7be89308e1b320f",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 186,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd16a9f2aad2a77efffe136c25d8a0ed7afd57bb999b9f5317bcb33c2177037b4",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe868735d8cb21c3dae04417caaa922416d43e2996d7d44457bd831d5e7595358",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x068d4f4830d80c33796a84f1c7f1fb480dd54001f8456b0e3c2fc2ea26555b6f",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9125e062f6377e0f984f8aa9a32aea533a9718d1273ceeeba075480dfedb8f96",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb3bd85d62d858a863355bef22bb15531a9b56c8d4768c226f563042e2daf6f41",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfd5728a8976b16a2d43fd9ed12a853041cd5086e2dc446487170d96d456c28a9",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xce30dd1e03ddec8206f6b889c624434ecaef3dd9601b87fc57a5f787e7d2a461",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x05196fcd3859bc2c070c716fd14fb9f6c3a5769893c5b851eac937b117666008",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xca4cc8e5f83b87951b5e45c78e24f883829007b211da5ceb531f6f2d25c7546a",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1c2feefa1836db5b0a243a2e00496020b3e80f3a90f9de7eec0fac202c14fed5",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa5d782df78ff51022295c95437ea01734ab933cb05eb3200f9542c540b301edd",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5ee5a3e29349c5ab167f897c84b9cf5e9455b1543cf7e22ab4e5c44db480ecee",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd94b3493360692c47ce290bc73df74ac4f68e270c5eb045a61f7e771ffb73d2c",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcc50606ac9ea227dabcb87234e28b0bed504e6f1eca9a9c4977c5b03544c3a78",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1c699e695b32c75d0e3555eb53087e9a7e24fa6f8a44ac69a1dabd6d8ef4905f",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe24e9eb0a1e0f424dc305f66444bded24e9024327c770f245f4babc674907d41",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c9be48a318446178e0bdfb9502c95cb788574c2739c0332047793e7b921b0aa",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x901df6ca384604d8ffded8caecbc87bbd2ea59dbc40d567f9dcd5499f7a4d0ba",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x15bc78a7113b90dd9b8b4b283bac0a9deb60c25f7261af1e354d1e0e5d9a7cc7",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4838bec36fa29677ec4842106e994e2fc2555148eb34f0cede6e5c1967c70fdd",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x982aea547377c361d242bfeaedbde4214734a9f1d6a2037c4e645b2d11a375a0",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x299112de5134610db2fb8113c980a8f7a5a5c552acabddb439197797f4846d5a",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 186,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x595c236ff3bd2f04c94b910b74ae0fffeeae218c87b10b641b2bd8a68a648762",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc610bb53abc7115fa28b18bb5386752461800efb70bf2f8ba6db33255456945a",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fcb0a85cd8b0465aeb148c2bd789bdb323f2b6ced301bb6871a362712e34ccf",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf1d09bdeff79e454698d62e6e7a953b9bbfa6062943370c803da90b2fcd8b334",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x34dcef32e849b9ac00865f1e3efb730231ac935067baff52be9e08b0f22da3db",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1fed3a807f18579f6510213deac9dcf9ba545f0929e8dec5548817deed8e94ea",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x86f44f4d18470a2af354a2ce9d9ce6eceb5ad8d0ec6e804a6102861df8bd8e12",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 179,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x88e9e2edde370371aa818f95b12f8adb211cec3ab33d89a091f88d27f2ed66de",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 186,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x6960dd3e7391f303f512e713f41d8895b92f4bbe9b9207048acea79ba4d9d6f2",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdb425156da9ca06ecf7fa20b963de0f21d3c725919ddfad4343911bfc339d32c",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7b6b234afe1da87fc5cf4e894f1e9c1d33c433a17cef7e4f2838cdae73d75644",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x89b25003321cf36d7857c09a78e5c28a72c34a468a9e1f88380fdb086ff65019",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe32309e4fe77cd393b2399a4d018843e7feca05e5140b562fb67cb4cf67dd9cc",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf3f07153bd81bfd1ddf9a4bae86c0a8706c77cd7a0ec3657fe845aa8c8216e0",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6172278332de1f252579d6b2266ef6419939aecc1448b6979ceba55386576c6c",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 179,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb4ac3c007253b83214f75c76d71f170de238227ce8dce208915fae9dc8345082",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x10a5644b30eb535c6cef7a9bbc4691c7dc1bb049bb0316b038d265a552ff1eca",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8823fb3ab2f76b4a6b389e281461a8a2f9a3f1ca5d2deb9d7717a81f4e403e08",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x97ebb25fe279d8b3fa09967a2b4b0c9a686a1760f2c878f40e8e0040779fc08f",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd03f2cef0fc29f22712197fafd57b678254b86b5d0a20ed70270719bab6bac24",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd5054beaaf2a4286dec88c4befcb5555bff4163a6ea122b3ceb8f260cfbfacc3",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d9f6e8fcb4971097d507ff642736a0d8dd1fc7f32971709170fc3454b406c4e",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x88d11101188dffe7b1a80098804610bd02f2c0eff408c4effea60932a4fd2c62",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 179,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x83d0ebb9a0b3e1e557f9c9474475892d9a455fae20876694914107e76ea5aecd",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 186,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8dee593679e4a35a8daacd16104df8bf5075b6376c445717eb9de8ea671c85db",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x49b7472a97f459c5df366c3aa1e882d35c12865403623eff6b7a2d5c3ab45c98",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf31c8b4e4db1e31942c0c366f176154a9dfafd3df40c688975751b1984f63814",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x926e9f9aeb7a65a67ce1b8a4fe397124032165e683bf3469549be99a107c2de7",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xeb8590b2848430a2d67a0431f4b295ac49c0700f2e6d10b8f7ed789ea2563395",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x830fcba0f4952942027cc23291f23e774e938202d0a73997f7961d53fa69879b",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd053cf18f62eef6f9f1300c7851d7e14652895f4b0d1aad0e7bbc031738777eb",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0603b13dbe400619a5e48e59e11f730a6647762de63d2fcd650b6426acf0edc1",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1822ee4fb4065ac1829119a3fbe93ee7000e856633948666ddcf2f96aa53d706",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9b4250bf292cd49389754066d9162dd99bc3d6f11472c34210ece4054186dbcd",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7ac2e24fc563414042b4b1996b22883609068a9e3f3abd56cd169e9cfe8f7b75",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x783447574d355c7acf98cbc97502ac5032550e4b9c1fb360c65574bca631c142",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaef3916b5d18db97614f768894e120c6e3324c06fa19585d0f53b49f575dda8c",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x31938e50fff40597b09771b604a84e96dbf8b9125f30007ed0c29fc286112998",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x36751d35d64981f4ac1754d6aefa1dd26ee6f5996b090ba12c78bab4db39fa18",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 181,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x51d916a74894d9f857d61068346449143e5984325372b298df00b6f7afbe2731",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 182,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x33acb42a77a806f5385b0459fa832070055bc28d75a8f6af5f0471c430024772",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 183,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd12e54bad14deec473ce8509b30198353f3d6b403807fffb7cb594c3dec29bb0",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 184,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4daaeb6959219416963d6fb57d031427859ef6501956ccb2ac624cc00e8a0bab",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0d4c3b9820476d7050283ec69b0aafacaa7a7e58264d253d8c689093d416bf62",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5a97539ec13a4faa8c7eee8405992657a206d046b339f6c62248b6e73a14b8bd",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbba458dcd0466e08fda438463f2e78145c93f8e600a14f82a9ea16f4d6a84f71",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8e71ca090555d5c36813c835fb9886193db57bb599577461e9e1a6965ecca1b6",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x97197f85baacf6243b8bf4fdf964e87d60fe7daaf54955ecbb6d3693f9cca1c6",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4256172ebc1beb4ff9b67d6b970985072caed695093a8e4bd76661153b92fbd2",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5bf5dfba0d1c02ddabf41e9e0bf58b7927158c51c8b01fc47397f30afc9fa1fa",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe3d4b411a306161ae647dfe035475ded26f579215077ba2a5f12a17c4fee3e59",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc0a4c827e7d23a2b7a618cb994794802f23d279566100edb38aa60f93ea0fbdc",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x246bedfaf25a02ab5bace338367da848b57f074dabe683eedf43ecca3357c75b",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0d6be093227ae5f401df7a3b3525a154b87914d47580f7311368132c5db02b75",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf36fd082f673bc5ce14564712f0d5e72f325ce2cbbc581803aab6ea833698ef8",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5280415bc1d447b28e90b95822a35c535ff11f75ec38101aeade69aa2e863426",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdcb316c9b0c6ff804bc9f46efa5c692151103c9199cb5b74304acbe6381ac1c6",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcb7351cc32873584954255fd7d790739b857db19d7a80d6f873f5e6603bb110e",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc35206b354ba677376304593cd81b6d1cd0d6a38ac494879f97fa3b5edafcac7",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8f35888d858037f6c3c811c7e7783f74e8790ec9321e33c619a79948f0e1a3d3",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe9c409d7db60ed19a03bc06aaeea922c4924d87a47fe7dcfdd5ec6ce9f7e382f",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc02696967b0fceb9296680d8479250c37c0aca84393de81334a409a294851494",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf4ba7b6861e9734879c9e00865c6fddf77c49f4ceb43303a48e9790effc7387c",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6042e823aff9ff19c93a397519a0cfe91d55c5f181020e70d3dc40ed6914add2",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc48b48e50c20d8bd04997d5ae5936f2fd79e5d1ef4a8e7c588336defd94ae235",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xadc763a047e18e61a9ebbfc5ebf84ef897a5047a75577f4e80d0007bc1872073",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3125d109b609caa270aa26ed9cad85b2be342fcf7a2914a435d0683a1ecc0dc0",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf69097c8baabfcf9d8ed0750d73b04b05d455b1b09b2142a4984acd7f2b9118",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c13721620efe2238f453ed5085128e4c76bd1521266626bbdddb7f9d223feda",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2fc3a1104d043036ca374b0ccebd3d84dafbb0ed4eb42e4d430768aacccb6c2f",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x05262fec3287efda2fdc326f7184e20919cfa5ae5bab7748149ab984aab7a141",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc1db5454cb79c9d2f1383b421e829da6c4d3e9ca3de8059eb6f819a73f657f56",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1e321cdeba6c4a99dac4d6202253b3b21fe78a247cdde7dd4e3b91033f2ce3a2",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd845658ea28a0629f8569cedd635b89f3ef2bf292b29de0dc0fabfd5b5f85cbe",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xef1ca097a0c73f0b3ad131438bde321a6b66ddd5bc6538220479f010778be02a",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x35704694198b0e4df303f0797fc70717961131bdfa3cee0b26193bc7a4e5dd78",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd2c3cd430cc3e82f6f6b9bf042459636ee3a1e01ccfb019206730012f9f86a7c",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaca3e3f081ddbe7777f537abf1f95fe00423c0bcb691a07764dac773fcf399d4",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x988211d67ac3a344ee9bc65a20bb640b0f5323ded271587a2da15965e828621a",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xabee6a4f3f556e98d08d1a314b4dd2e1d3b0d306ad3f45edc20039b879ec3d1e",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x303a6018bebec32854cc2e1bba73319fbfc13d2551ea1d7999bf3fab843a993c",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa38d278aed0959cf38812f6d91d1e013e5fc97521f0999b9933f53507a2e7e8d",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x85858f75f7b6d2c3a5251fc143d7846bad87f9090b30c6a438be199d6e65dea5",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbefc6781793914ca3fd3710ee6ae0aa4d0a2abb20a891f68d90995cfefcc3e7b",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfc7f02343a27d1b93855bebd8b9ecac2ef5e0c5f0f44ccf466c75627593cc05f",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x845359e8f85d592f5afc2418c81523b88684ae1645b3bb8434a1c15620ee3cc0",
      "assetIds": []
    }
  ],
  "solcInputHash": "ec605981be9adfd04d88d4245397bb77",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}