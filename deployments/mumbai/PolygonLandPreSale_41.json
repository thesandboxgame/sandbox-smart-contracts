{
  "address": "0xb5DfD819a35aF6F404b96d498cFe5229E17fA3D4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommisionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc71fdf1dbdf8fa3832f7674f33587d61601138b695fbba138e09ad7c28e50969",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0xb5DfD819a35aF6F404b96d498cFe5229E17fA3D4",
    "transactionIndex": 24,
    "gasUsed": "2316653",
    "logsBloom": "0x
    "blockHash": "0x5c61f4465c04dab451600a913e764d0de7224116cbae24b9db0d5c8adcadf0a2",
    "transactionHash": "0xc71fdf1dbdf8fa3832f7674f33587d61601138b695fbba138e09ad7c28e50969",
    "logs": [
      {
        "transactionIndex": 24,
        "blockNumber": 29029940,
        "transactionHash": "0xc71fdf1dbdf8fa3832f7674f33587d61601138b695fbba138e09ad7c28e50969",
        "address": "0xb5DfD819a35aF6F404b96d498cFe5229E17fA3D4",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000592daadc9ea7f56a81de1fd27a723bd407709c460000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 99,
        "blockHash": "0x5c61f4465c04dab451600a913e764d0de7224116cbae24b9db0d5c8adcadf0a2"
      },
      {
        "transactionIndex": 24,
        "blockNumber": 29029940,
        "transactionHash": "0xc71fdf1dbdf8fa3832f7674f33587d61601138b695fbba138e09ad7c28e50969",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000ab31425c49d9800000000000000000000000000000000000000000000001ce43fd7ce754615d3000000000000000000000000000000000000000000000000066e4cad5a5597bc00000000000000000000000000000000000000000000001ce43524ba4f81783b0000000000000000000000000000000000000000000000000678ffc1801a3554",
        "logIndex": 100,
        "blockHash": "0x5c61f4465c04dab451600a913e764d0de7224116cbae24b9db0d5c8adcadf0a2"
      }
    ],
    "blockNumber": 29029940,
    "cumulativeGasUsed": "5340898",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x525129b95bA89B9800e47ef3dc7d23fBAd27b1a3",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x49c4D4C94829B9c44052C5f5Cb164Fc612181165",
    "0xa5Eb9C9Eb4F4c35B9Be8cFaAA7909F9ebe6Cb609",
    "0xc87156363650c63dbbb25a317cea09f057202bd5742e3dfb624db55dcebfb34c",
    1967115600,
    "0xB7060D3FeCAC3AE1F0A0AA416E3e8E472257950e",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000",
    "0xAc3ff31f526Af7f386ea43649e3fa67e329AeF93",
    "0x1d3CE3489a064aEFc9928fe08F9d2Dd968F5c969"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 312,
      "y": 393,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x15bb6cdaadfe36b84fc425fdd44619293b76a4dd09e89d393274c838d40e4132",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 394,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7e902e110039e283ee81cb4bc38e32764cbcf2b83a4da17e33d9d5f2edefc9f5",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 395,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x085c9e8d09022ac2ed8f291d1c0ed7b765aa9c4a5916f9ecf7f80a6038e1f86f",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 396,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x34378977dcaa46baa314797f75e97bd467e85deef494f543024f3bd53e971f14",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 397,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xacb17f954beb40b967d60d14679ed7e2c886f266096942846d12fe42a90c62ce",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 398,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4b94ebbe9cf55d795ee2d6ce6cc4ee8a63180f9764a63952400a6155856ec996",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 399,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x641228c97f4fdfd1cd0702880c6c54bd4176f2217dbab47e847d87738d62ad1d",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 400,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd23eadd753eb4efcb27035df70caaf7fa6fc8ca6fdaa5a0f8742f3d413effee7",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 401,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdd865a3eec63e5e47a823bb1cb52ce2a865d78df7b59e867bb5a90acd17fa7c4",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 405,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc77ad989abfb51bb2746c6a05fa28ec70f5df7547b55e1767e3e98f230528827",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 406,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x03a39c02160aba29fa4c99317600825a5caddb47a94f7af71e06b694a9162fc5",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 407,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xffb516f2f6703fc93fb68176c4da5145a4af2f27039bdbbf5c4a9f8a51a8a9cd",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 393,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x15d5cb3f2a2715fc353a757079985515c8a70e7a71a2a9dcc8ab1c735c647196",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 394,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x301ea39fb2f763c9b2eb28e8a86b6fe9741f587e37b9e239121404e9340437c8",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 395,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc8d18baa16e40d37dd964f47357a5524cd0982003da6136b1034ad6beadd73e9",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 396,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xee79cedb0098962632edaac8e8fff3fe876462bb23e4a2218f5fb385fff2764e",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 397,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1f6cae06a8b8039af54dfcaf88183437177fed9d1d4e1479f1658617ac4cd6d9",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 398,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x527665badaedd8e93434b9d5f86b3af246e5d251a547859269b5abb82b3dd4ee",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 399,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x6331a14f7127574090c58dbd03e035363b6a728964dc27703fd8331649b3a8a9",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 400,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x86b5ec4959f5aba199360443f1318e00d29d48c4ea4c269282857583141bdd7c",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 401,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe62693da4a48cf54b528e42f623ab071f6494f45c3d739e455cd0868df70f81c",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 405,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe58da789e3ea7d5934267f18cd15146907e43f578ea9f52f8cca0753c670f0d7",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 406,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf13837b33516c3851798e301ba0d3d3da084c4dc08a84ed5794e06dd5df0f682",
      "assetIds": []
    },
    {
      "x": 313,
      "y": 407,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x65c14eb5c5eb43bd9af945043731c8dcf2afc0e69af3409138ab781a2042b662",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 393,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x69aab923c0f26fa3424c43a3bbc3a997303fe0fb60576a9f37284f10bcd64834",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 394,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x43902baf68aff81aa0ca2cdca68c5a583841742be68f38176da56ffe4496a6d0",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 395,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2fecb9ea196fe193f959289eefeedee62b72ce0e2538c8c4902805fedd8706d1",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 396,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd831ad96c9d085860eb2cb6bee6aa2b3fb005fa9dd3ea60dbecb1afa571d3972",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 397,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa2e42bcb7d62afded27fc3ebf806beac955c3e9749a6b41a90507b5efc193537",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 398,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xbb07ddf9cd423cae3189fcbc9e03e7a746970ed81e2dc008d5c02b90fddb35d9",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 399,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4cd1d521a82417460871607a3f8fc0f1b1bb1e98f411fa611e399801c3f1bee4",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 400,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xff659425f07a8e042fe9c6a2d6d2853eec6da24b5079725f34a6aca7466a1a83",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 401,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xcf80c1474da63136b762debb658eeb82c988298cd64f9fdb3d83419da0849612",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 405,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x75008eb058efd0b5560346036a53a2c3f87c2414e248677cbaa2f73cb75264ff",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 406,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x270f16a2b85afa86f96049b46eea2f933f2381061d293ab438398361be64300a",
      "assetIds": []
    },
    {
      "x": 314,
      "y": 407,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4360f7c3188bb4695ecd2c7fe0358bedecfda5f867ed20d8223cdc09e7a631ab",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 390,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x38f881e89989e371a8d0c002cf650c78c524da9d030fb909f7f93803e0650fad",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 391,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4d235feda70b6e76c9cd8487aa373310f7b6c5ca9b86ceaf63a5332405fbf528",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 392,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4dc7049a8c444f4b5992a4a93025b9b4e16db65a5260627e554d8fbe0a2b1c46",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 396,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa5f9737c28c7b77e46a1afcd68393802b3002343c9d487799984ff7e1ac395c8",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 397,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x87bf729b317210d5c029b7a01a5d172ebbfca568c862d1605a54bdf9ab2753b7",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 398,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6b0cc86e45234a89e344fc94a7678a4dccecbb98d14d04d833fe087dc44205fa",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 390,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7c39e8bdaf7d5d22ea2ae73c1c593b4f92e8d2378549428c550e2fc6f843272c",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 391,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2ba44014bbb583cd24b4ace5c025c1bcdac42cb4e260e86dbdd9ad1f8b4c77df",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 392,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4e1ae134a542ae94a9ef9ca6ee59c7885c6884e6afae894e2e4a431dddf328f3",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 396,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x56c425c7575dbe92d45bacea0100de03a569d59701e106d6a9e0b45c194047f2",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 397,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x993228530ae9da93945b95746d30fdecd16139887f8345e7e4ce772a88e38a6c",
      "assetIds": []
    },
    {
      "x": 316,
      "y": 398,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7412520e48f71292660b52c26aee9b27cbbe22e83bf295016537e0ae7ae25d69",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 390,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6517083fea525ae1b89d65755a0a75e48f6e2ba192d2d25684910085d0446ed2",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 391,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc63413d35254732489a26dedb29d20cfddef3a0c65b1bdb15a9e38b912ff7e22",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 392,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x144b3e21c66a8a0abaa110e6f009988f889eabf0e23b0c062986e4d6a46a0ce6",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 396,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf69b2a69a13f3a011f46a240e54bd1fdb71449fe8aef9ebf0edf97a296017a60",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 397,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc626b49fc7984d184194d9337961adb54398bf486f1c98d75a4ad3a346987345",
      "assetIds": []
    },
    {
      "x": 317,
      "y": 398,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x83ecec51b18dcd70f7c160570fcd5db349a529e76eab082bf3edbb612ea3b3cb",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 384,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9057c3ed1bd46257375ae1cdc05d07e9445ad6b26176a2139accdbda8b5467c5",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 385,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x114406edfb8192645d78f24260e1432e1dd7f567b2b1ff170ff910fe492355b2",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 386,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaf7f3c625d77ceb878d1473830398263472ba672f19329d8e87c0ee828cdf58d",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 387,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe0f1484dc3931e56629ae0f7b7277bd0caf4102cdf85e5eece1d559c19a778fa",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 388,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x680d520c08f378cc044b6d054432d88ca8ca8e1df8d6d846c30fc913d8ba1da0",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 389,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x25aad1bf25abb1876315cdb074410e29079d0f73e87a6755371067ac76f6abf7",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 399,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2611f0a6eba9068f51121a3396ff4172c654103d32e51d58d4257fc50b229ce6",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 400,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8de05e781e969cee8897b39319b3e5216af15ebce724755136c1e49317634871",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 401,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x19d770b50de16bba7aabcf7d3db5d4b00b1103c5a045e7cc4f3b306525e46478",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 402,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x72fde52c3438ec62446ff671e7d58ce82443e9a9892347345e2d03960b06bf7a",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 403,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc9734d22f7da4e7d6758cada0f465ed2d512d8b8e0fff2b8b7d5979c8c2c820d",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 404,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xca8597447d3cb957eedd406ad212d463cc00018ecda6ae99a82c72a88283c32a",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 405,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x36c87de12b1293db794c5b4e3f0814defe2f81533f6f65d70142c078830b908a",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 406,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5755ff82643911637f754241542b1255c1d7497e8ed258f50bd50854adb7bb80",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 407,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x12e3fb573314cfdecb3bbe47687dadfd3e4e538dc9079ce39094c2721945975b",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 384,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf44d5edbac1e1c68a98369b18eeeada980c079ae4bfbd739355199c4cd140fcc",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 385,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x22f4fb9b210ded88d13974f7ff204ff9664b5bf2c29dcfa6ee64d77e43c1f77c",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 386,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x905ff1a065a3a5273f0d48bb696abdc503df877f162a25a6024a28d84a776a8d",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 387,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa650352fcdd2b425ed51b83def070b0376def4f57106936e6d0f50776f8ac4c5",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 388,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x39dec3c994c12f1eef7988ab84748c071336b2798222c67e838bbd376fedc2b6",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 389,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe91def7b49bbd6aa92a802f7cceab5549b46c4af6364bb4bd646889c8a491e6e",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 399,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb3c3b899c90ef09490a62a8cd757663005af06b8756924e888b48b827a1a6d84",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 400,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc5c56cb2d6dcfc8a0c0edd46d380998367eb893ff9ebd935351d669417f13a63",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 401,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf97bb715feb002283e5468b64d5a156ec14beb332cb2535aeb71b24d754ba1ff",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 402,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x29ac5f1df2568004143021173978e19d66b9daa60f400c868450627e07f80dac",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 403,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x22c898fa510de780fed679e711e13edfedeb814a7c0980fe4f18d92ab251cc2f",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 404,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3852122c06a4a4461295b90f79d2882426a5d1635141f2a3174faf60ffcb2f01",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 405,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7423fa14daae5c4bf4959221b6063a6feaace48a03d83ac0761d88a09bd0ec2b",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 406,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf0cd2142e195ec7501b98a4c74716b8e139313fa7afbe51f3a5257d8baaca9cc",
      "assetIds": []
    },
    {
      "x": 319,
      "y": 407,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc8440746d353e8a0ce91a08effe18590778039f6d0f6e46348f19a9437b46d4d",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 384,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe82ba66f8298bc5bdf959d4d064612e84ce355eac290761eaf1c721ac655c76d",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 385,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8e42569e8393a8cadb734afb6e675beaab6b8256695d75c24edb31b78a15fd9d",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 386,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x463abee7bfeba2495f4970f619f849402455d92355ec73b32b07b3aa369417f3",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 387,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xffc4b70a9d65387634c5cc1f689f5b39f7995e6d2554ee5bd8a01a9e77d59d9e",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 388,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1290c8445650fe987e983ede76e3e95d39625bbd5c5f7e8f4e3802af6f96909e",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 389,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x90ada0d291016e79c97b4db8d7b45b0f5b48ceed59b3b870264337947f962424",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 399,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x419d3d625b41b440298b76ddad4bc4a8e80797fc003b8dbb793b93e548dfb657",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 400,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa9c751937137b6eeaa38ac4fab3bb7685a75186088658a1e70d0dd837a21a9e4",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 401,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x36055f303d7df2e54814023cbdbf8daebb6173cd42422aa4f954e7b8084e45af",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 402,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8911a370b0c26ee763cf5ba9b53b532dd155cdda7f28d0d3f7a4981d54ae2df3",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 403,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x213253698178dfc23bf8d33219442baf268b4a1316eba1af60ec39fa20d7e8d1",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 404,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x32a885f5ccd93ebc1d5cda9a8dc1b87f3b19bd08350173d60a4783fe6b47b70b",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 405,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xac4ae9d6083e03b51c1e3bb4bbff9207de589c5b4c11906ceeddcfc9c59cca10",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 406,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xaba7c04a4c196240efe2485556cd2ef3646d16c011be9dee572273f44c5a235d",
      "assetIds": []
    },
    {
      "x": 320,
      "y": 407,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb13cbe63247417af9210530f1afb9ce8351c740aa26965ffa280f8733ac00600",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 387,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8f4a0a3d5ca151ad16c6de098059755b3977ed8bc816d6b1b5e1579a6d0763c3",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 388,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xe14c251b123b03c1575a1c008acea23ddbe49d6c97f72d7419e2fbee5fa3fd1f",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 389,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa3d69adf213c7909242e6a5ccfc602af9de028a1a7c0f8d8bb8ec7dffa1655e1",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 396,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8cca03fa0bc72c71fce3de272dbafeae3c1c9771ccf38a7d76c92274fd5e77d0",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 397,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x309736b42ea1ab538a0357d9fbe922edcb5109413e0ac820211de33761c3c55e",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 398,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xffabd9e523b7b342d75737e92278b262883012cae5ffe0cf856c0df0d8854d34",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 399,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9740269f6ff8a26b0cf4379776fe80220dccf99b60f282b4dafb1e03b0bedab9",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 400,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbe6e1e067d16b3777acc34a2e29e3aab8995ca16b0cc4863c2b85550037af6e9",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 401,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x001e17bafe7b6c04aca65f820e11364087eafb9a175764052a9f9c0da60fc4f4",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 387,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9bd7931e3dda6cc274cbfb85c5c01e4287ecddbc93942dfa8b9b842e0e83238d",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 388,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd9858dc6b749fa92c0a6ffb836ae032bb4da2cd735fb8319e8982f85d1da9018",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 389,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf98b1c76b68fc1b27991154809797e5ea98f0fb30cda55bb2877304265abeb9e",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 396,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdb5798ccd68a6aade8da70ad3b74248b19dac6533713c8e6dd98a27a79ad7f30",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 397,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4a3819ee748adccfc5604b250d63f812e6dca4fab66dfa27c81a195def4fc139",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 398,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5c9ca864035876f7f13e39b939f43018f5c3fbd478d7e763f4e6179e89a26776",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 399,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdb0503ecf3d68a5b540b9ea463a406d51ebf7b28687f39baadf081f7541e5a00",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 400,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3c06afde01edbe9a06f26bdec38bf535c551dd7b6a2059986c13a784bc2d7029",
      "assetIds": []
    },
    {
      "x": 322,
      "y": 401,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc7cefc3eefdc0c21a2c42e7b97987a3c3ff8e0faea75efd035b57b3bd5afbe80",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 387,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf70483479da4d8169335dcaa246996b10acd1246c2d7c69c56f2dfbfca96ddce",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 388,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1b754cca9aaba47a8ae81924b2a983b975a6e3446e72674d8e2975cba2da02a2",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 389,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe4fb37358365403c0f666bc3df6d3ae8074c02020f8860dfcdc4350646dc1dc9",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 396,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x511b7e74111798a6a7c0ed5915dd3a8ff25e5bf9e6ee8317d28bd18a55ca255e",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 397,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa2e18c190fb912440035955aeb9f9333298ab5793d6d25b6c8f9f2d315d49958",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 398,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x80ef4617d2976c43fec2d58367b64d2249e92dfca9df09b1508051fa938bacf8",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 399,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x621ef4b085cfd6daa5099b756aa7e49f05d3d41099f69ec6545e95ad23c2de7c",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 400,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x601a10cb3c9d6bdd6f32d3edb34e0374e3d0ed152c17da595bfa2032885087d2",
      "assetIds": []
    },
    {
      "x": 323,
      "y": 401,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x142d898a899232b5e0634c41bbf7edd20de239dca3ec8daeceb9d7c66237323d",
      "assetIds": []
    },
    {
      "x": 324,
      "y": 390,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9ee01d303e3404829df59b56ee55479401ec08f11fc868afe402360dfb59e3bc",
      "assetIds": []
    },
    {
      "x": 324,
      "y": 391,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x79dd31ba46f054a77a57f1a53452b25a0d06d283c0d52ffb5d370d44de18cb8c",
      "assetIds": []
    },
    {
      "x": 324,
      "y": 392,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x984cbe86527d400af19b68f4e55d495250ac6da6070b80ee92ea7d450758b8b0",
      "assetIds": []
    },
    {
      "x": 325,
      "y": 390,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf6647a2e54e1ba529c13376356639ba00998a60b0dd4cc63905c7c2008744646",
      "assetIds": []
    },
    {
      "x": 325,
      "y": 391,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa8b49db8967907075a3c48fac34c30426c6236dcd9c72f4422a5001ff5145501",
      "assetIds": []
    },
    {
      "x": 325,
      "y": 392,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9fe037c6ba24824bbd820a511d3efd4ef3cd92cafc6e4063e1949a53c86c58b1",
      "assetIds": []
    },
    {
      "x": 326,
      "y": 390,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x49eeb9dc796ab745c8273bd797d7a4de33582dd9f566e65b63e33f6495358862",
      "assetIds": []
    },
    {
      "x": 326,
      "y": 391,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc9dc361f5c9d77689367490a3a5487cbbf8cf50bd4561b0443e33c7313a74eef",
      "assetIds": []
    },
    {
      "x": 326,
      "y": 392,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf7a226c21d811f11401de78cb763b9e6ec35e042040d5b3c69351f8f0575c86a",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 384,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe353a45b4670f46c5181fa1acfbd58bb96a7a7a76b9eaf03e5a2ae2b594105df",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 385,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2808e9790a9d076dbef837735d6373aae4e5666e564347e4069b37395f8e001f",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 386,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf0fdb1677af049e9ae7fcaae9c7d4c1d7a9c707c3af0686c3e89421d4fd17166",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 387,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x23de112db30d8f75060c656ef5f9f38e787b3dd7c4164a872563633fdd085c27",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 388,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7aab5ab7688cd543aa7ed48b72bff818f06ffed6914c97e2246094b74ca847ad",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 389,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc133cb28b731401c06982f8c415d1b6e0b4088bb1286f55143bd3f7276013fbb",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 393,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8b868f283b201e8c589c1ea3f6ae57c0658f881572f5b38445e7d9a8f3f0a6c1",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 394,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf2c0e0eda9584b77120b81fd5aa6c5adc15b603eccffbcd628a4a0f5df5b8ad1",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 395,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x82277c7083ba3c5acccfc943bc41ea1b81ef65082800aa3bc795687c35a1b5b9",
      "assetIds": []
    },
    {
      "x": 328,
      "y": 384,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd13b342440a1edc8c06ef6eaaf60d14f0b135ed7113e72c09ab192137b8fb608",
      "assetIds": []
    },
    {
      "x": 328,
      "y": 385,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x128bd5ce22edfb9084b790d1dba5a3681c47f7e48b57fe2efcf55b0ca71bb4be",
      "assetIds": []
    },
    {
      "x": 328,
      "y": 386,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x93246a28e98114f4ad6367cd243266876dfd9fcef2e878c05af87aa0c5e31f22",
      "assetIds": []
    },
    {
      "x": 328,
      "y": 387,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xbfaa680d22b8d277f41144012cc17832bd96b51818988d68441a6b3ef57d07ba",
      "assetIds": []
    },
    {
      "x": 328,
      "y": 388,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd3fd0a2f055651f506e28ee842dab5eb4c9a4f7538c94c83cf9f335575356567",
      "assetIds": []
    },
    {
      "x": 328,
      "y": 389,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x462592486b9c5f1b105b0354cea39f2a8309531df7b242e60ebf334f6a5c7af0",
      "assetIds": []
    },
    {
      "x": 328,
      "y": 393,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8039c50e122853faef46c442f8d3a20f889f63d3792623fd71592cf3117bf2a5",
      "assetIds": []
    },
    {
      "x": 328,
      "y": 394,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x35ab2b30d9d42ad872dda536bb1a0e3663f009fba5f302b8f9646ebd0f02e6e9",
      "assetIds": []
    },
    {
      "x": 328,
      "y": 395,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1741fe2c59d064cfcc0074126c4110d87cac354c9b59ff0ba18f78921f62bae6",
      "assetIds": []
    },
    {
      "x": 329,
      "y": 384,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x7910ce84f49434f2eed2e82e2a3fa283ba0ac6dd0f0dd77dcde9b22e06489e54",
      "assetIds": []
    },
    {
      "x": 329,
      "y": 385,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xed005e8bc2182085dbe4ce608b5c09e2797039cb1d1cb813fc0914962585b38b",
      "assetIds": []
    },
    {
      "x": 329,
      "y": 386,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x674acaa40c03f4de67f11198a406e8bc08feb7a666db8cd9cc032addee34efc2",
      "assetIds": []
    },
    {
      "x": 329,
      "y": 387,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xae28a85fd09c339d0d30988944b123bc36272f3f0ceb0a25be5bdf08f9fc1290",
      "assetIds": []
    },
    {
      "x": 329,
      "y": 388,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf6f96f66940bf8ecdc0f48e0a6bd5b4e8d9be9f55c8e26e6497a95a60916dfa5",
      "assetIds": []
    },
    {
      "x": 329,
      "y": 389,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xbefa5b7b788684cf49aa5b14d913573eb30ec00135f97ac1b25dbc2a8c17cecb",
      "assetIds": []
    },
    {
      "x": 329,
      "y": 393,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0ca0cf6f5037006538c43f80e9e7d974254dcd7c85e8b5b0c751160e4e43899b",
      "assetIds": []
    },
    {
      "x": 329,
      "y": 394,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5fbd06e2591908741fa37c0de474b23f7e579b6a0cb1e0d5dee7939c12698811",
      "assetIds": []
    },
    {
      "x": 329,
      "y": 395,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8baf825404eb0e16e9493017051dce6d5f12b84602f134429b8051286a72967e",
      "assetIds": []
    },
    {
      "x": 330,
      "y": 384,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4705e5af74423fe78c63a76d08289f80b348493a3b06514200af22ad4c8b16ac",
      "assetIds": []
    },
    {
      "x": 330,
      "y": 385,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x30468ce25bc923faecd1c44faaf941f1a170a198ab1b83f1edda13a71383a666",
      "assetIds": []
    },
    {
      "x": 330,
      "y": 386,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x7a898d3c5c1772b2ae24ba76e917674c0b4cac8fb679a71e39a58657fc601b6a",
      "assetIds": []
    },
    {
      "x": 331,
      "y": 384,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xed49af340d35c2d0e75cd46a2a165777e01bb00065d9f1a2636246dd0dc3f13f",
      "assetIds": []
    },
    {
      "x": 331,
      "y": 385,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xba8358a25b097df6722eebf9abe85d0c6ddcf6ec02fc0cef44fa37ceb33d1392",
      "assetIds": []
    },
    {
      "x": 331,
      "y": 386,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x636a9dbf4c8e6a76e92c811f45223fe9260f8c5a17d7995447960439421e233c",
      "assetIds": []
    },
    {
      "x": 332,
      "y": 384,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xd854cb854d5f27a2bfbbbc8ab609eeda7addc7b8c95e5a08243c80d5e2fcf10d",
      "assetIds": []
    },
    {
      "x": 332,
      "y": 385,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xda223eb7bd941f0817f84cc0f7c3a5f2af6e9a768e714d933125ae494025cdcd",
      "assetIds": []
    },
    {
      "x": 332,
      "y": 386,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8f51cd7f25c055df88b63add1a666c8865ceb4c343def4d44ec2fd0bcf511a2b",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 390,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6888286df26df8f7371387ffec6c3ee012969b13f5542373cbe41c010a88c72f",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 402,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x6562ee508b5a729b5b0a21003bb4c4e8413cf71a7d0d76980944474af7e4d54b",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 393,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x10ed4dc9e375c84a031f6a089237d72fb13b3184796a4c6fdee010b316a54cd8",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 399,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x51af5b4bddd4ece425cc24f4c0430d7370b96520f9f86ba26445c4712c5b414e",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 402,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe5dfeb4c009a6841e2c00eb647d5851a5e76cb79c711bff3497b0e35ea1ff500",
      "assetIds": []
    },
    {
      "x": 315,
      "y": 405,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x09e8d53d6ba417027ca274ebb6e25da3f044f0bed4f49fb03b7f9a5371275337",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 396,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xa0e34d38cc81d3e8a81e3989278f9ff0bd30e22ebe743518448c04d81854bc91",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 384,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2334e13a637632f6c03127fa7eb0aa8d8688c16b939504f52c4ed4d97153891e",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 402,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb426d67a6c6d9324e67fd14969dfc96f3b855f03aec17d235068032f8cbd4179",
      "assetIds": []
    },
    {
      "x": 321,
      "y": 405,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3caf83e250c6fb20e6638f40b5232d881265f805db64aecf7d935fd8b261bfb5",
      "assetIds": []
    },
    {
      "x": 324,
      "y": 384,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xb5932251b432625428f40a5b5b747e9f2b9a9ce620c35c3e32e6095bb9863d70",
      "assetIds": []
    },
    {
      "x": 324,
      "y": 387,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe2372af8d62d8e91840a969d9e126875c27ff3de824fa72c00e7315a9c2040c9",
      "assetIds": []
    },
    {
      "x": 324,
      "y": 393,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc863cdce1351e4f06e514497b198591bbee7da855230367ca95f40eb5272db29",
      "assetIds": []
    },
    {
      "x": 327,
      "y": 390,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9a88dad750995c6d3410c68dc0375168cae73207a629b75a3df80373fab95064",
      "assetIds": []
    },
    {
      "x": 330,
      "y": 387,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xf0dad2e7f9889a91ebe4263110766e29f7bb2fbda2597b81ec98fdf70fc89a0f",
      "assetIds": []
    },
    {
      "x": 333,
      "y": 384,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x0d32b3722b47e0c298fc6599626f1344cfa41b5cd8713e19ea9f2411342d543b",
      "assetIds": []
    },
    {
      "x": 333,
      "y": 387,
      "size": 3,
      "price": "8648000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x1fd6292fb3012eff912e4da9456fd6bd67a9d44b14b1ebef7c79fe04cd0f9bf5",
      "assetIds": []
    },
    {
      "x": 312,
      "y": 384,
      "size": 6,
      "price": "32772000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9e560cc89e871f1e0f650d96083c3fd8c9137bda14b25e15187d6be98d4dfdcc",
      "assetIds": []
    },
    {
      "x": 318,
      "y": 390,
      "size": 6,
      "price": "32772000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x4157bc10211ca7019e7daa8ba7551693bd1ebc5cda4d854a406361c8c5efd82d",
      "assetIds": []
    },
    {
      "x": 330,
      "y": 390,
      "size": 6,
      "price": "32772000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x467eacedf2db43fa02eb0978111f78333b947f7ad497aeb27b24a6e6c3fb4947",
      "assetIds": []
    },
    {
      "x": 324,
      "y": 396,
      "size": 12,
      "price": "123806000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xcdd6a6ee9059ae884ebc48b802a534adc974ef50cb4c4c322e72d40b1668cf3c",
      "assetIds": []
    }
  ],
  "solcInputHash": "486143892da8fc4c77e5e3448c469657",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommisionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"reserved\":\"the reserved address (if any)\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommisionRate()\":{\"notice\":\"the max commision rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5; // TODO: update once upgrade is complete\\n\\nimport \\\"../common/Libraries/SigUtil.sol\\\";\\nimport \\\"../common/Libraries/SafeMathWithRequire.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = SigUtil.recover(keccak256(SigUtil.prefixed(hashedData)), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x9d5e05cd6ed81df8e47cb33f650bf814ed9cf56948b02db8789cca72986fa304\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"../common/Libraries/SafeMathWithRequire.sol\\\";\\nimport \\\"./LandToken.sol\\\";\\nimport \\\"../common/Interfaces/ERC1155.sol\\\";\\nimport \\\"../common/Interfaces/ERC20.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is MetaTransactionReceiver, ReferralValidator {\\n    using SafeMathWithRequire for uint256;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param proof merkleProof for that particular Land\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        // require(block.timestamp > _expiryTime, \\\"SALE_NOT_OVER\\\"); // removed to recover in case of misconfigured sales\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        if (assetIds.length == 0) return;\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        require(_sand.transferFrom(buyer, address(_feeDistributor), feeAmountInSand), \\\"FEE_TRANSFER_FAILED\\\");\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    ERC1155 internal immutable _asset;\\n    LandToken internal immutable _land;\\n    ERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        _land = LandToken(landAddress);\\n        _sand = ERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = ERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x8acd75f72c2bd6c80cd77f0409684f04aee64bb5243d374348b096fed0ee7b3f\"},\"src/solc_0.6/EstateSale/LandToken.sol\":{\"content\":\"pragma solidity 0.6.5;\\n\\n\\ninterface LandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5522cfd266ac2047ca71f1fae6994be8141ce510c15a7ab6ba7f6fc97ad30cb4\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"../common/Libraries/SigUtil.sol\\\";\\nimport \\\"../common/Libraries/SafeMathWithRequire.sol\\\";\\nimport \\\"../common/Interfaces/ERC20.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 private _previousSigningDelay = 60 * 60 * 24 * 10;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external {\\n        require(_admin == msg.sender, \\\"Sender not admin\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commision rate\\n     * @return the maximum commision rate that a referral can give\\n     */\\n    function getMaxCommisionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external {\\n        require(_admin == msg.sender, \\\"Sender not admin\\\");\\n        _maxCommissionRate = newMaxCommissionRate;\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMathWithRequire.div(SafeMathWithRequire.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMathWithRequire.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                payable(referrer).transfer(commission);\\n            }\\n        }\\n\\n        destination.transfer(amountForDestination);\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        ERC20 token = ERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMathWithRequire.div(SafeMathWithRequire.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMathWithRequire.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                require(token.transferFrom(buyer, referrer, commission), \\\"commision transfer failed\\\");\\n            }\\n        }\\n\\n        require(token.transferFrom(buyer, destination, amountForDestination), \\\"payment transfer failed\\\");\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = SigUtil.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xa20586b36bbac3dea0cccffecbb81850fb9458021e9c059133e3e2233d59eaa5\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"pragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x21ddf217d83b4c1b8c3fa7240ff1d1fcedb902003a65d455d2101b95f40f6db8\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"pragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public {\\n        require(msg.sender == _admin, \\\"only admin can setup metaTransactionProcessors\\\");\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x980c70427ff48a30d894b48b0900342020816b057bdc8fa4e258221b809ef670\"},\"src/solc_0.6/common/Interfaces/ERC1155.sol\":{\"content\":\"pragma solidity 0.6.5;\\n\\n\\n/**\\n    @title ERC-1155 Multi Token Standard\\n    @dev See https://eips.ethereum.org/EIPS/eip-1155\\n    Note: The ERC-165 identifier for this interface is 0xd9b67a26.\\n */\\ninterface ERC1155 {\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n        @notice Transfers `value` amount of an `id` from  `from` to `to`  (with safety call).\\n        @dev Caller must be approved to manage the tokens being transferred out of the `from` account (see \\\"Approval\\\" section of the standard).\\n        MUST revert if `to` is the zero address.\\n        MUST revert if balance of holder for token `id` is lower than the `value` sent.\\n        MUST revert on any other error.\\n        MUST emit the `TransferSingle` event to reflect the balance change (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        After the above conditions are met, this function MUST check if `to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        @param from    Source address\\n        @param to      Target address\\n        @param id      ID of the token type\\n        @param value   Transfer amount\\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `to`\\n    */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified (with safety call).\\n        @dev Caller must be approved to manage the tokens being transferred out of the `from` account (see \\\"Approval\\\" section of the standard).\\n        MUST revert if `to` is the zero address.\\n        MUST revert if length of `ids` is not the same as length of `values`.\\n        MUST revert if any of the balance(s) of the holder(s) for token(s) in `ids` is lower than the respective amount(s) in `values` sent to the recipient.\\n        MUST revert on any other error.\\n        MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\\n        After the above conditions for the transfer(s) in the batch are met, this function MUST check if `to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        @param from    Source address\\n        @param to      Target address\\n        @param ids     IDs of each token type (order and length must match _values array)\\n        @param values  Transfer amounts per token type (order and length must match _ids array)\\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `to`\\n    */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Get the balance of an account's tokens.\\n        @param owner  The address of the token holder\\n        @param id     ID of the token\\n        @return        The _owner's balance of the token type requested\\n     */\\n    function balanceOf(address owner, uint256 id) external view returns (uint256);\\n\\n    /**\\n        @notice Get the balance of multiple account/token pairs\\n        @param owners The addresses of the token holders\\n        @param ids    ID of the tokens\\n        @return        The _owner's balance of the token types requested (i.e. balance for each (owner, id) pair)\\n     */\\n    function balanceOfBatch(address[] calldata owners, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n        @notice Enable or disable approval for a third party (\\\"operator\\\") to manage all of the caller's tokens.\\n        @dev MUST emit the ApprovalForAll event on success.\\n        @param operator  Address to add to the set of authorized operators\\n        @param approved  True if the operator is approved, false to revoke approval\\n    */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n        @notice Queries the approval status of an operator for a given owner.\\n        @param owner     The owner of the tokens\\n        @param operator  Address of authorized operator\\n        @return           True if the operator is approved, false if not\\n    */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x324734020d86f92f40c415afe3199bb0707057e5544bd59422b6b5323d63f038\"},\"src/solc_0.6/common/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity 0.6.5;\\n\\n\\n/// @dev see https://eips.ethereum.org/EIPS/eip-20\\ninterface ERC20 {\\n    /// @notice emitted when tokens are transfered from one address to another.\\n    /// @param from address from which the token are transfered from (zero means tokens are minted).\\n    /// @param to destination address which the token are transfered to (zero means tokens are burnt).\\n    /// @param value amount of tokens transferred.\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice emitted when owner grant transfer rights to another address\\n    /// @param owner address allowing its token to be transferred.\\n    /// @param spender address allowed to spend on behalf of `owner`\\n    /// @param value amount of tokens allowed.\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /// @notice return the current total amount of tokens owned by all holders.\\n    /// @return supply total number of tokens held.\\n    function totalSupply() external view returns (uint256 supply);\\n\\n    /// @notice return the number of tokens held by a particular address.\\n    /// @param who address being queried.\\n    /// @return balance number of token held by that address.\\n    function balanceOf(address who) external view returns (uint256 balance);\\n\\n    /// @notice transfer tokens to a specific address.\\n    /// @param to destination address receiving the tokens.\\n    /// @param value number of tokens to transfer.\\n    /// @return success whether the transfer succeeded.\\n    function transfer(address to, uint256 value) external returns (bool success);\\n\\n    /// @notice transfer tokens from one address to another.\\n    /// @param from address tokens will be sent from.\\n    /// @param to destination address receiving the tokens.\\n    /// @param value number of tokens to transfer.\\n    /// @return success whether the transfer succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool success);\\n\\n    /// @notice approve an address to spend on your behalf.\\n    /// @param spender address entitled to transfer on your behalf.\\n    /// @param value amount allowed to be transfered.\\n    /// @param success whether the approval succeeded.\\n    function approve(address spender, uint256 value) external returns (bool success);\\n\\n    /// @notice return the current allowance for a particular owner/spender pair.\\n    /// @param owner address allowing spender.\\n    /// @param spender address allowed to spend.\\n    /// @return amount number of tokens `spender` can spend on behalf of `owner`.\\n    function allowance(address owner, address spender) external view returns (uint256 amount);\\n}\\n\",\"keccak256\":\"0xc5d126e7b0fc8347f01d952e98fae9251abf74fd0fc16d6cbd31a1654f808ff0\"},\"src/solc_0.6/common/Libraries/SafeMathWithRequire.sol\":{\"content\":\"pragma solidity 0.6.5;\\n\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert\\n */\\nlibrary SafeMathWithRequire {\\n    using SafeMathWithRequire for uint256;\\n\\n    uint256 constant DECIMALS_18 = 1000000000000000000;\\n    uint256 constant DECIMALS_12 = 1000000000000;\\n    uint256 constant DECIMALS_9 = 1000000000;\\n    uint256 constant DECIMALS_6 = 1000000;\\n\\n    /**\\n     * @dev Multiplies two numbers, throws on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        require(c / a == b, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two numbers, truncating the quotient.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0, \\\"divbyzero\\\");\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"undeflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Adds two numbers, throws on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        require(c >= a, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    function sqrt6(uint256 a) internal pure returns (uint256 c) {\\n        a = a.mul(DECIMALS_12);\\n        uint256 tmp = a.add(1) / 2;\\n        c = a;\\n        // tmp cannot be zero unless a = 0 which skip the loop\\n        while (tmp < c) {\\n            c = tmp;\\n            tmp = ((a / tmp) + tmp) / 2;\\n        }\\n    }\\n\\n    function sqrt3(uint256 a) internal pure returns (uint256 c) {\\n        a = a.mul(DECIMALS_6);\\n        uint256 tmp = a.add(1) / 2;\\n        c = a;\\n        // tmp cannot be zero unless a = 0 which skip the loop\\n        while (tmp < c) {\\n            c = tmp;\\n            tmp = ((a / tmp) + tmp) / 2;\\n        }\\n    }\\n\\n    function cbrt6(uint256 a) internal pure returns (uint256 c) {\\n        a = a.mul(DECIMALS_18);\\n        uint256 tmp = a.add(2) / 3;\\n        c = a;\\n        // tmp cannot be zero unless a = 0 which skip the loop\\n        while (tmp < c) {\\n            c = tmp;\\n            uint256 tmpSquare = tmp**2;\\n            require(tmpSquare > tmp, \\\"overflow\\\");\\n            tmp = ((a / tmpSquare) + (tmp * 2)) / 3;\\n        }\\n        return c;\\n    }\\n\\n    function cbrt3(uint256 a) internal pure returns (uint256 c) {\\n        a = a.mul(DECIMALS_9);\\n        uint256 tmp = a.add(2) / 3;\\n        c = a;\\n        // tmp cannot be zero unless a = 0 which skip the loop\\n        while (tmp < c) {\\n            c = tmp;\\n            uint256 tmpSquare = tmp**2;\\n            require(tmpSquare > tmp, \\\"overflow\\\");\\n            tmp = ((a / tmpSquare) + (tmp * 2)) / 3;\\n        }\\n        return c;\\n    }\\n\\n    // TODO test\\n    function rt6_3(uint256 a) internal pure returns (uint256 c) {\\n        a = a.mul(DECIMALS_18);\\n        uint256 tmp = a.add(5) / 6;\\n        c = a;\\n        // tmp cannot be zero unless a = 0 which skip the loop\\n        while (tmp < c) {\\n            c = tmp;\\n            uint256 tmpFive = tmp**5;\\n            require(tmpFive > tmp, \\\"overflow\\\");\\n            tmp = ((a / tmpFive) + (tmp * 5)) / 6;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbe4011624c0a2a6c8947fe7759924da4a4ed2c6b97befc3b379d14b8e31570eb\"},\"src/solc_0.6/common/Libraries/SigUtil.sol\":{\"content\":\"pragma solidity 0.6.5;\\n\\n\\nlibrary SigUtil {\\n    function recover(bytes32 hash, bytes memory sig) internal pure returns (address recovered) {\\n        require(sig.length == 65);\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n        require(v == 27 || v == 28);\\n\\n        recovered = ecrecover(hash, v, r, s);\\n        require(recovered != address(0));\\n    }\\n\\n    function recoverWithZeroOnFailure(bytes32 hash, bytes memory sig) internal pure returns (address) {\\n        if (sig.length != 65) {\\n            return (address(0));\\n        }\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            return (address(0));\\n        } else {\\n            return ecrecover(hash, v, r, s);\\n        }\\n    }\\n\\n    // Builds a prefixed hash to mimic the behavior of eth_sign.\\n    function prefixed(bytes32 hash) internal pure returns (bytes memory) {\\n        return abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash);\\n    }\\n}\\n\",\"keccak256\":\"0x9a7394d82062e7f036a6f11d32f1a021cf92e667effdefd12a3592c652b1b865\"}},\"version\":1}",
  "bytecode": "0x610160604052620d2f0060055534801561001857600080fd5b50604051620028583803806200285883398181016040526101a081101561003e57600080fd5b50805160208201516040830151606080850151608086015160a08088015160c0808a015160e08b01516101008c01516101208d01516101408e01516101608f0151610180909f0151600280546001600160a01b0319166001600160a01b03871617905560038490558e8c1b6001600160601b03199081169099529a8d901b9097169094529a9b999a98999698959793969195909490939091906100e28b600161015d565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260008054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506101c192505050565b6001600160a01b038216600081815260016020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c61012051610140516126116200024760003980610b3d5280612077525080610b1952806112ec5250806120e5525080611841528061199e5250806117f75280611b9d5280612119525080611872528061196f525080610eb25280611c9452506126116000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80638f283970116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af1461085f578063e56f8a9e14610885578063f23a6e61146108a25761011b565b8063c10a420814610780578063caed3500146108575761011b565b80638f28397014610500578063984d625214610526578063b522ecff146105f8578063bc197c811461061e5761011b565b806365194ce7116100ee57806365194ce7146103485780636e9960c3146104a657806377f1c3ac146104ca5780638a04af6a146104d25761011b565b80631187fd3c1461012057806325cb5bc014610300578063495906571461031a57806358bc294414610322575b600080fd5b6102fe600480360361012081101561013757600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561017357600080fd5b82018360208201111561018557600080fd5b803590602001918460208302840111640100000000831117156101a757600080fd5b919390928235926040810190602001356401000000008111156101c957600080fd5b8201836020820111156101db57600080fd5b803590602001918460208302840111640100000000831117156101fd57600080fd5b91939092909160208101903564010000000081111561021b57600080fd5b82018360208201111561022d57600080fd5b8035906020019184602083028401116401000000008311171561024f57600080fd5b91939092909160208101903564010000000081111561026d57600080fd5b82018360208201111561027f57600080fd5b803590602001918460018302840111640100000000831117156102a157600080fd5b9193909290916020810190356401000000008111156102bf57600080fd5b8201836020820111156102d157600080fd5b803590602001918460018302840111640100000000831117156102f357600080fd5b509092509050610937565b005b610308610b17565b60408051918252519081900360200190f35b610308610b3b565b6102fe6004803603602081101561033857600080fd5b50356001600160a01b0316610b5f565b6103ee6004803603602081101561035e57600080fd5b81019060208101813564010000000081111561037957600080fd5b82018360208201111561038b57600080fd5b803590602001918460018302840111640100000000831117156103ad57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c0a945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561046757818101518382015260200161044f565b50505050905090810190601f1680156104945780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104ae610d0f565b604080516001600160a01b039092168252519081900360200190f35b610308610d1e565b6102fe600480360360408110156104e857600080fd5b506001600160a01b0381351690602001351515610d24565b6102fe6004803603602081101561051657600080fd5b50356001600160a01b0316610d7b565b6102fe6004803603606081101561053c57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561056757600080fd5b82018360208201111561057957600080fd5b8035906020019184602083028401116401000000008311171561059b57600080fd5b9193909290916020810190356401000000008111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111640100000000831117156105ed57600080fd5b509092509050610e51565b6102fe6004803603602081101561060e57600080fd5b50356001600160a01b0316610fdc565b61074b600480360360a081101561063457600080fd5b6001600160a01b03823581169260208101359091169181019060608101604082013564010000000081111561066857600080fd5b82018360208201111561067a57600080fd5b8035906020019184602083028401116401000000008311171561069c57600080fd5b9193909290916020810190356401000000008111156106ba57600080fd5b8201836020820111156106cc57600080fd5b803590602001918460208302840111640100000000831117156106ee57600080fd5b91939092909160208101903564010000000081111561070c57600080fd5b82018360208201111561071e57600080fd5b8035906020019184600183028401116401000000008311171561074057600080fd5b5090925090506110c5565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610843600480360360a081101561079657600080fd5b8101906020810181356401000000008111156107b157600080fd5b8201836020820111156107c357600080fd5b803590602001918460018302840111640100000000831117156107e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b0383358116945060208401351692604081013592506060013590506110f2565b604080519115158252519081900360200190f35b6104ae61122e565b6108436004803603602081101561087557600080fd5b50356001600160a01b031661123d565b6102fe6004803603602081101561089b57600080fd5b503561125b565b61074b600480360360a08110156108b857600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156108f857600080fd5b82018360208201111561090a57600080fd5b8035906020019184600183028401116401000000008311171561092c57600080fd5b5090925090506112bf565b6109418e8d6112ea565b610a388d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525061144d92505050565b610a8c8e8c8c6003818110610a4957fe5b9050602002013586868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506117d092505050565b610aca8e8e8d8d8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061182192505050565b610b078d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611c1292505050565b5050505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000546001600160a01b03163314610bbe576040805162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f742061646d696e00000000000000000000000000000000604482015290519081900360640190fd5b600554600280546001600160a01b03908116600090815260046020526040902042909301909255805473ffffffffffffffffffffffffffffffffffffffff191692909116919091179055565b606060008060008060606000806000808a80602001905160a0811015610c2f57600080fd5b8101908080516040519392919084640100000000821115610c4f57600080fd5b908301906020820185811115610c6457600080fd5b8251640100000000811182820188101715610c7e57600080fd5b82525081516020918201929091019080838360005b83811015610cab578181015183820152602001610c93565b50505050905090810190601f168015610cd85780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6000546001600160a01b031690565b60035490565b6000546001600160a01b03163314610d6d5760405162461bcd60e51b815260040180806020018281038252602e8152602001806125ae602e913960400191505060405180910390fd5b610d778282611de1565b5050565b6000546001600160a01b03163314610dda576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b600054604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610eb0576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b158015610fbd57600080fd5b505af1158015610fd1573d6000803e3d6000fd5b505050505050505050565b6001600160a01b038116611037576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6000546001600160a01b03163314611096576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006003548211806111155750836001600160a01b0316856001600160a01b0316145b8061111f57508242115b1561112c57506000611225565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e490930190935281519101206000906111e39089611e63565b6001600160a01b038116600090815260046020526040902054909150421161121057600192505050611225565b6002546001600160a01b039081169116149150505b95945050505050565b6002546001600160a01b031690565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031633146112ba576040805162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f742061646d696e00000000000000000000000000000000604482015290519081900360640190fd5b600355565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061135e576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061138457503360009081526001602052604090205460ff165b6113d5576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806113fc5750816001600160a01b0316816001600160a01b0316145b610d77576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061145e57fe5b60200260200101518860018151811061147357fe5b60200260200101518960028151811061148857fe5b60200260200101518a60038151811061149d57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b838110156114d75781810151838201526020016114bf565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b83811015611528578181015183820152602001611510565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561164a578181015183820152602001611632565b50505050905090810190601f1680156116775780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561169557600080fd5b505afa1580156116a9573d6000803e3d6000fd5b505050506040513d60208110156116bf57600080fd5b5051611712576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b60006117738760008151811061172457fe5b60200260200101518860018151811061173957fe5b60200260200101518960028151811061174e57fe5b60200260200101518a60038151811061176357fe5b60200260200101518c8b8b611f30565b905061177f8482611fd5565b610fd1576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b60006117dc84846120a0565b60065490915061181b908590839085906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006121f9565b50505050565b8060028151811061182e57fe5b60200260200101516001148061186b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b1561196d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf83836002815181106118ad57fe5b6020026020010151846000815181106118c257fe5b6020026020010151856001815181106118d757fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b15801561195057600080fd5b505af1158015611964573d6000803e3d6000fd5b50505050611b0d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f0000000000000000000000000000000000000000000000000000000000000000836002815181106119ca57fe5b6020026020010151846000815181106119df57fe5b6020026020010151856001815181106119f457fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611aa4578181015183820152602001611a8c565b50505050905090810190601f168015611ad15780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611af457600080fd5b505af1158015611b08573d6000803e3d6000fd5b505050505b61019881600181518110611b1d57fe5b60200260200101510281600081518110611b3357fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611b7e57fe5b602002602001015185600381518110611b9357fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611bc957fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b8051611c1d57610d77565b6060815167ffffffffffffffff81118015611c3757600080fd5b50604051908082528060200260200182016040528015611c61578160200160208202803683370190505b50905060005b8251811015611c91576001828281518110611c7e57fe5b6020908102919091010152600101611c67565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611d4c578181015183820152602001611d34565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015611d8b578181015183820152602001611d73565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b158015611dc457600080fd5b505af1158015611dd8573d6000803e3d6000fd5b50505050505050565b6001600160a01b03821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60008151604114611e7357600080fd5b60208201516040830151606084015160001a601b811015611e9257601b015b8060ff16601b1480611ea757508060ff16601c145b611eb057600080fd5b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015611f07573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b038416611f2757600080fd5b50505092915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b83811015611fa2578181015183820152602001611f8a565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b8451811015612074576000858281518110611ff157fe5b6020026020010151905080831015612039578281604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120925061206b565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50600101611fda565b507f00000000000000000000000000000000000000000000000000000000000000001490505b92915050565b6000806120c560646120b985600563ffffffff61247b16565b9063ffffffff6124eb16565b604080516323b872dd60e01b81526001600160a01b0387811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526044820184905291519293507f0000000000000000000000000000000000000000000000000000000000000000909116916323b872dd916064808201926020929091908290030181600087803b15801561216457600080fd5b505af1158015612178573d6000803e3d6000fd5b505050506040513d602081101561218e57600080fd5b50516121e1576040805162461bcd60e51b815260206004820152601360248201527f4645455f5452414e534645525f4641494c454400000000000000000000000000604482015290519081900360640190fd5b6121f1838263ffffffff61255016565b949350505050565b825181908590156123a35760606000806000806122158a610c0a565b939850919650945092509050600061223086868686866110f2565b156122be5761224a6122428d8461247b565b6127106124eb565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46122bb8782612550565b96505b801561239c57604080516323b872dd60e01b81526001600160a01b038f811660048301528781166024830152604482018490529151918a16916323b872dd916064808201926020929091908290030181600087803b15801561231f57600080fd5b505af1158015612333573d6000803e3d6000fd5b505050506040513d602081101561234957600080fd5b505161239c576040805162461bcd60e51b815260206004820152601960248201527f636f6d6d6973696f6e207472616e73666572206661696c656400000000000000604482015290519081900360640190fd5b5050505050505b604080516323b872dd60e01b81526001600160a01b0389811660048301528681166024830152604482018490529151918416916323b872dd916064808201926020929091908290030181600087803b1580156123fe57600080fd5b505af1158015612412573d6000803e3d6000fd5b505050506040513d602081101561242857600080fd5b5051611dd8576040805162461bcd60e51b815260206004820152601760248201527f7061796d656e74207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b60008261248a5750600061209a565b508181028183828161249857fe5b041461209a576040805162461bcd60e51b815260206004820152600860248201527f6f766572666c6f77000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008161253f576040805162461bcd60e51b815260206004820152600960248201527f64697662797a65726f0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b81838161254857fe5b049392505050565b6000828211156125a7576040805162461bcd60e51b815260206004820152600860248201527f756e6465666c6f77000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5090039056fe6f6e6c792061646d696e2063616e207365747570206d6574615472616e73616374696f6e50726f636573736f7273a26469706673582212209a7f7bcaa0dc86bc9799cba75b35de5c08e7cf3c4069a5b2bb2529769c18822b64736f6c63430006050033",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "reserved": "the reserved address (if any)",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommisionRate()": {
        "notice": "the max commision rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13656,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 13718,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 11834,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 11836,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 11840,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 11849,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningDelay",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 7459,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7461,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)6784"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)6784": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}