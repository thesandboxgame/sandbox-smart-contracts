{
  "address": "0x46d7d9d6CB3CD3E6C6dc6c8117Cf927A10659d68",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_polygonLand",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newLandTunnel",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldLandTunnel",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldLandTunnel",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newLandTunnel",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "TunnelLandsMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "sizes",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "x",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "y",
              "type": "uint256[]"
            }
          ],
          "indexed": false,
          "internalType": "struct PolygonLandTunnelMigration.OwnerWithLandIds",
          "name": "_ownerWithLandIds",
          "type": "tuple"
        }
      ],
      "name": "TunnelLandsMigratedWithWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldLandTunnel",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newLandTunnel",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "sizes",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "x",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "y",
          "type": "uint256[]"
        }
      ],
      "name": "TunnelQuadsMigrated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "approveNewLandTunnel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "migrateLandsToTunnel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "sizes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "x",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "y",
          "type": "uint256[]"
        }
      ],
      "name": "migrateQuadsToTunnel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "sizes",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "x",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "y",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct PolygonLandTunnelMigration.OwnerWithLandIds",
          "name": "_ownerWithLandIds",
          "type": "tuple"
        }
      ],
      "name": "migrateToTunnelWithWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newLandTunnel",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldLandTunnel",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "polygonLand",
      "outputs": [
        {
          "internalType": "contract IPolygonLandWithSetApproval",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x2999557cda0c8ba9739edeae8d46014dbd2d7eced0e0e162de984713b6feffdd",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0x46d7d9d6CB3CD3E6C6dc6c8117Cf927A10659d68",
    "transactionIndex": 6,
    "gasUsed": "954645",
    "logsBloom": "0x
    "blockHash": "0x1187d298c1dd82a42eff3e221cc44aa1b12ee13508439d1b307011241b49221a",
    "transactionHash": "0x2999557cda0c8ba9739edeae8d46014dbd2d7eced0e0e162de984713b6feffdd",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 32226431,
        "transactionHash": "0x2999557cda0c8ba9739edeae8d46014dbd2d7eced0e0e162de984713b6feffdd",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000005165dea1c49eb00000000000000000000000000000000000000000000001875193549d40c9645000000000000000000000000000000000000000000002d91bae861bcffeba45500000000000000000000000000000000000000000000001875141eebe9f04c5a000000000000000000000000000000000000000000002d91baed781aea07ee40",
        "logIndex": 167,
        "blockHash": "0x1187d298c1dd82a42eff3e221cc44aa1b12ee13508439d1b307011241b49221a"
      }
    ],
    "blockNumber": 32226431,
    "cumulativeGasUsed": "18603430",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x525129b95bA89B9800e47ef3dc7d23fBAd27b1a3",
    "0x2a750A10F86545bA5929E933490A6AbA94f3157F",
    "0xf3390C7351695DBF9B5c09CC5FF1d3564761A519",
    "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02"
  ],
  "numDeployments": 1,
  "solcInputHash": "0bda727934a1d0a23f0d0298b7a388fc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_polygonLand\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newLandTunnel\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldLandTunnel\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldLandTunnel\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLandTunnel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"TunnelLandsMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"sizes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"x\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"y\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct PolygonLandTunnelMigration.OwnerWithLandIds\",\"name\":\"_ownerWithLandIds\",\"type\":\"tuple\"}],\"name\":\"TunnelLandsMigratedWithWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldLandTunnel\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLandTunnel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"sizes\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"x\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"y\",\"type\":\"uint256[]\"}],\"name\":\"TunnelQuadsMigrated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approveNewLandTunnel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"migrateLandsToTunnel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sizes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"x\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"y\",\"type\":\"uint256[]\"}],\"name\":\"migrateQuadsToTunnel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"sizes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"x\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"y\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PolygonLandTunnelMigration.OwnerWithLandIds\",\"name\":\"_ownerWithLandIds\",\"type\":\"tuple\"}],\"name\":\"migrateToTunnelWithWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newLandTunnel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldLandTunnel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"polygonLand\",\"outputs\":[{\"internalType\":\"contract IPolygonLandWithSetApproval\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approveNewLandTunnel()\":{\"details\":\"approves New Land Tunnel to transfer Lands on behalf of this contract\"},\"changeAdmin(address)\":{\"params\":{\"_newAdmin\":\"the new admin to be set\"}},\"migrateLandsToTunnel(uint256[])\":{\"details\":\"Transfers all the passed land ids from the old land tunnel to the new land tunnel\",\"params\":{\"ids\":\"of land tokens to be migrated\"}},\"migrateQuadsToTunnel(uint256[],uint256[],uint256[])\":{\"details\":\"Transfers all the passed quads from the old land tunnel to the new land tunnel\",\"params\":{\"sizes\":\"of land quads to be migrated\",\"x\":\"coordinate of land quads to be migrated\",\"y\":\"coordinate of land quads to be migrated\"}},\"migrateToTunnelWithWithdraw((address,uint256[],uint256[],uint256[]))\":{\"details\":\"Fetches locked land ids to this contract and withdraws again through the new tunnel\",\"params\":{\"_ownerWithLandIds\":\"struct containing token owner with their land ids\"}}},\"title\":\"Tunnel migration on L2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeAdmin(address)\":{\"notice\":\"changes admin to new admin\"},\"migrateLandsToTunnel(uint256[])\":{\"notice\":\"This method needs super operator role to execute\"},\"migrateQuadsToTunnel(uint256[],uint256[],uint256[])\":{\"notice\":\"This method needs super operator role to execute\"},\"migrateToTunnelWithWithdraw((address,uint256[],uint256[],uint256[]))\":{\"notice\":\"This method needs super operator role to execute\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/solc_0.8/polygon/child/land/PolygonLandTunnelMigration.sol\":\"PolygonLandTunnelMigration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"src/solc_0.8/common/interfaces/IERC721MandatoryTokenReceiver.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n// solhint-disable-next-line compiler-version\\npragma solidity 0.8.2;\\n\\n/// @dev Note: The ERC-165 identifier for this interface is 0x5e8bf644.\\ninterface IERC721MandatoryTokenReceiver {\\n    function onERC721BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        bytes calldata data\\n    ) external returns (bytes4); // needs to return 0x4b808c46\\n\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4); // needs to return 0x150b7a02\\n}\\n\",\"keccak256\":\"0x66db07bc53d4c7f6b8f23dfa76874378e01b87a1b81726d5d637942d072203a9\",\"license\":\"MIT\"},\"src/solc_0.8/common/interfaces/ILandToken.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.2;\\n\\ninterface ILandToken {\\n    function batchTransferQuad(\\n        address from,\\n        address to,\\n        uint256[] calldata sizes,\\n        uint256[] calldata xs,\\n        uint256[] calldata ys,\\n        bytes calldata data\\n    ) external;\\n\\n    function transferQuad(\\n        address from,\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n\\n    function batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf1cb108c7274c973356adedb18230b18bdad992b946e0921cc3ebed04f59c92e\",\"license\":\"MIT\"},\"src/solc_0.8/common/interfaces/IPolygonLand.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.2;\\n\\nimport \\\"./ILandToken.sol\\\";\\n\\ninterface IPolygonLand is ILandToken {\\n    function mintQuad(\\n        address user,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes memory data\\n    ) external;\\n\\n    function exists(\\n        uint256 size,\\n        uint256 x,\\n        uint256 y\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5a52e567ddb2271b88c5dfe919401036f0f6c15dd7ff7a6eb055e12a6c12f06c\",\"license\":\"MIT\"},\"src/solc_0.8/common/interfaces/IPolygonLandTunnel.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.2;\\n\\ninterface IPolygonLandTunnel {\\n    function batchTransferQuadToL1(\\n        address to,\\n        uint256[] calldata sizes,\\n        uint256[] calldata xs,\\n        uint256[] calldata ys,\\n        bytes memory data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xab0d619988ed1c2a9054b42d33944255ccc8f225cf3d7c77c2eaed6d6a764a16\",\"license\":\"MIT\"},\"src/solc_0.8/common/interfaces/IPolygonLandWithSetApproval.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.2;\\n\\nimport \\\"./IPolygonLand.sol\\\";\\n\\ninterface IPolygonLandWithSetApproval is IPolygonLand {\\n    function setApprovalForAll(address operator, bool approved) external;\\n}\\n\",\"keccak256\":\"0x73066ff31f9182373c002f80aeaa2012dcc94704730e2dceccdae2a40b7442b5\",\"license\":\"MIT\"},\"src/solc_0.8/polygon/child/land/PolygonLandTunnelMigration.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.2;\\n\\nimport \\\"../../../common/interfaces/IPolygonLandWithSetApproval.sol\\\";\\nimport \\\"../../../common/interfaces/IPolygonLandTunnel.sol\\\";\\nimport \\\"../../../common/interfaces/IERC721MandatoryTokenReceiver.sol\\\";\\n\\n/// @title Tunnel migration on L2\\ncontract PolygonLandTunnelMigration is IERC721MandatoryTokenReceiver {\\n    uint256 private constant GRID_SIZE = 408;\\n\\n    struct OwnerWithLandIds {\\n        address owner;\\n        uint256[] sizes;\\n        uint256[] x;\\n        uint256[] y;\\n    }\\n\\n    IPolygonLandWithSetApproval public polygonLand;\\n    address public newLandTunnel;\\n    address public oldLandTunnel;\\n    address private admin;\\n\\n    event TunnelLandsMigrated(address indexed oldLandTunnel, address indexed newLandTunnel, uint256[] ids);\\n    event TunnelLandsMigratedWithWithdraw(OwnerWithLandIds _ownerWithLandIds);\\n    event TunnelQuadsMigrated(\\n        address indexed oldLandTunnel,\\n        address indexed newLandTunnel,\\n        uint256[] sizes,\\n        uint256[] x,\\n        uint256[] y\\n    );\\n    event AdminChanged(address _newAdmin);\\n\\n    modifier isAdmin() {\\n        require(admin == msg.sender, \\\"!AUTHORISED\\\");\\n        _;\\n    }\\n\\n    /// @notice changes admin to new admin\\n    /// @param _newAdmin the new admin to be set\\n    function changeAdmin(address _newAdmin) external isAdmin {\\n        admin = _newAdmin;\\n        emit AdminChanged(_newAdmin);\\n    }\\n\\n    constructor(\\n        address _polygonLand,\\n        address _newLandTunnel,\\n        address _oldLandTunnel,\\n        address _admin\\n    ) {\\n        admin = _admin;\\n        polygonLand = IPolygonLandWithSetApproval(_polygonLand);\\n        newLandTunnel = _newLandTunnel;\\n        oldLandTunnel = _oldLandTunnel;\\n    }\\n\\n    /// @dev Transfers all the passed land ids from the old land tunnel to the new land tunnel\\n    /// @notice This method needs super operator role to execute\\n    /// @param ids of land tokens to be migrated\\n    function migrateLandsToTunnel(uint256[] memory ids) external isAdmin {\\n        polygonLand.batchTransferFrom(oldLandTunnel, newLandTunnel, ids, \\\"0x\\\");\\n        emit TunnelLandsMigrated(oldLandTunnel, newLandTunnel, ids);\\n    }\\n\\n    /// @dev Fetches locked land ids to this contract and withdraws again through the new tunnel\\n    /// @notice This method needs super operator role to execute\\n    /// @param _ownerWithLandIds struct containing token owner with their land ids\\n    function migrateToTunnelWithWithdraw(OwnerWithLandIds memory _ownerWithLandIds) external isAdmin {\\n        // check for gas limits based on the number of locked tokens\\n        // Fetch locked tokens to this contract address\\n        polygonLand.batchTransferQuad(\\n            oldLandTunnel,\\n            address(this),\\n            _ownerWithLandIds.sizes,\\n            _ownerWithLandIds.x,\\n            _ownerWithLandIds.y,\\n            \\\"0x\\\"\\n        );\\n        // Withdraw tokens to L1\\n        IPolygonLandTunnel(newLandTunnel).batchTransferQuadToL1(\\n            _ownerWithLandIds.owner,\\n            _ownerWithLandIds.sizes,\\n            _ownerWithLandIds.x,\\n            _ownerWithLandIds.y,\\n            \\\"0x\\\"\\n        );\\n\\n        emit TunnelLandsMigratedWithWithdraw(_ownerWithLandIds);\\n    }\\n\\n    ///@dev approves New Land Tunnel to transfer Lands on behalf of this contract\\n    function approveNewLandTunnel() external {\\n        polygonLand.setApprovalForAll(newLandTunnel, true);\\n    }\\n\\n    /// @dev Transfers all the passed quads from the old land tunnel to the new land tunnel\\n    /// @notice This method needs super operator role to execute\\n    /// @param sizes of land quads to be migrated\\n    /// @param x coordinate of land quads to be migrated\\n    /// @param y coordinate of land quads to be migrated\\n    function migrateQuadsToTunnel(\\n        uint256[] memory sizes,\\n        uint256[] memory x,\\n        uint256[] memory y\\n    ) external isAdmin {\\n        polygonLand.batchTransferQuad(oldLandTunnel, newLandTunnel, sizes, x, y, \\\"0x\\\");\\n        emit TunnelQuadsMigrated(oldLandTunnel, newLandTunnel, sizes, x, y);\\n    }\\n\\n    function onERC721Received(\\n        address, /* operator */\\n        address, /* from */\\n        uint256, /* tokenId */\\n        bytes calldata /* data */\\n    ) external pure override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n\\n    function onERC721BatchReceived(\\n        address, /* operator */\\n        address, /* from */\\n        uint256[] calldata, /* ids */\\n        bytes calldata /* data */\\n    ) external pure override returns (bytes4) {\\n        return this.onERC721BatchReceived.selector;\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId) external pure returns (bool) {\\n        return interfaceId == 0x5e8bf644 || interfaceId == 0x01ffc9a7;\\n    }\\n}\\n\",\"keccak256\":\"0x1461ff8c61f0ac172d7627f00fe65064b98674eb3baec5e7ed8709674f491cb5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c806386f4779211610081578063df6324291161005b578063df63242914610206578063ebe9483414610219578063ff9bb1451461022c576100c9565b806386f47792146101d85780638f283970146101eb578063c62fbdea146101fe576100c9565b80633b2fd458116100b25780633b2fd4581461015f5780634b808c461461018a57806376926076146101c3576100c9565b806301ffc9a7146100ce578063150b7a02146100f6575b600080fd5b6100e16100dc366004610ae2565b61023f565b60405190151581526020015b60405180910390f35b61012e6101043660046109b6565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100ed565b600154610172906001600160a01b031681565b6040516001600160a01b0390911681526020016100ed565b61012e6101983660046108fb565b7f4b808c46000000000000000000000000000000000000000000000000000000009695505050505050565b6101d66101d1366004610a23565b6102da565b005b600254610172906001600160a01b031681565b6101d66101f93660046108da565b6103ff565b6101d66104b4565b600054610172906001600160a01b031681565b6101d6610227366004610a5e565b61053a565b6101d661023a366004610b22565b610664565b60007f5e8bf644000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614806102d257507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b90505b919050565b6003546001600160a01b031633146103275760405162461bcd60e51b815260206004820152600b60248201526a085055551213d49254d15160aa1b60448201526064015b60405180910390fd5b6000546002546001546040517f15ddc5350000000000000000000000000000000000000000000000000000000081526001600160a01b03938416936315ddc5359361037d93908216929116908690600401610c99565b600060405180830381600087803b15801561039757600080fd5b505af11580156103ab573d6000803e3d6000fd5b50506001546002546040516001600160a01b039283169450911691507ff3c8a06d9bf1d976109b76dbbd7e869f76aa4af071573fe465e2b3b8f5b421f4906103f4908590610d5b565b60405180910390a350565b6003546001600160a01b031633146104475760405162461bcd60e51b815260206004820152600b60248201526a085055551213d49254d15160aa1b604482015260640161031e565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c906020015b60405180910390a150565b600054600180546040517fa22cb4650000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101929092529091169063a22cb46590604401600060405180830381600087803b15801561052057600080fd5b505af1158015610534573d6000803e3d6000fd5b50505050565b6003546001600160a01b031633146105825760405162461bcd60e51b815260206004820152600b60248201526a085055551213d49254d15160aa1b604482015260640161031e565b6000546002546001546040517feaa5e0670000000000000000000000000000000000000000000000000000000081526001600160a01b039384169363eaa5e067936105dc9390821692911690889088908890600401610c1e565b600060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b50506001546002546040516001600160a01b039283169450911691507f5925ea9cd1b8a825a990df684ca7e1da5ce4c4dfbc2271a8470b8f2a31dcc1279061065790879087908790610d6e565b60405180910390a3505050565b6003546001600160a01b031633146106ac5760405162461bcd60e51b815260206004820152600b60248201526a085055551213d49254d15160aa1b604482015260640161031e565b6000546002546020830151604080850151606086015191517feaa5e0670000000000000000000000000000000000000000000000000000000081526001600160a01b039586169563eaa5e0679561070c9591169330939192600401610c1e565b600060405180830381600087803b15801561072657600080fd5b505af115801561073a573d6000803e3d6000fd5b505060015483516020850151604080870151606088015191517f3f360a400000000000000000000000000000000000000000000000000000000081526001600160a01b039095169650633f360a40955061079994909190600401610ceb565b600060405180830381600087803b1580156107b357600080fd5b505af11580156107c7573d6000803e3d6000fd5b505050507f62c9f2bdf46e0b85b03dabe7d78361cc7dc14ca10dda2527d405e3a57a218c01816040516104a99190610da7565b80356001600160a01b03811681146102d557600080fd5b600082601f830112610821578081fd5b8135602067ffffffffffffffff82111561083d5761083d610e4c565b80820261084b828201610e1b565b838152828101908684018388018501891015610865578687fd5b8693505b85841015610887578035835260019390930192918401918401610869565b50979650505050505050565b60008083601f8401126108a4578182fd5b50813567ffffffffffffffff8111156108bb578182fd5b6020830191508360208285010111156108d357600080fd5b9250929050565b6000602082840312156108eb578081fd5b6108f4826107fa565b9392505050565b60008060008060008060808789031215610913578182fd5b61091c876107fa565b955061092a602088016107fa565b9450604087013567ffffffffffffffff80821115610946578384fd5b818901915089601f830112610959578384fd5b813581811115610967578485fd5b8a6020808302850101111561097a578485fd5b602083019650809550506060890135915080821115610997578384fd5b506109a489828a01610893565b979a9699509497509295939492505050565b6000806000806000608086880312156109cd578081fd5b6109d6866107fa565b94506109e4602087016107fa565b935060408601359250606086013567ffffffffffffffff811115610a06578182fd5b610a1288828901610893565b969995985093965092949392505050565b600060208284031215610a34578081fd5b813567ffffffffffffffff811115610a4a578182fd5b610a5684828501610811565b949350505050565b600080600060608486031215610a72578283fd5b833567ffffffffffffffff80821115610a89578485fd5b610a9587838801610811565b94506020860135915080821115610aaa578384fd5b610ab687838801610811565b93506040860135915080821115610acb578283fd5b50610ad886828701610811565b9150509250925092565b600060208284031215610af3578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146108f4578182fd5b600060208284031215610b33578081fd5b813567ffffffffffffffff80821115610b4a578283fd5b9083019060808286031215610b5d578283fd5b610b676080610e1b565b610b70836107fa565b8152602083013582811115610b83578485fd5b610b8f87828601610811565b602083015250604083013582811115610ba6578485fd5b610bb287828601610811565b604083015250606083013582811115610bc9578485fd5b610bd587828601610811565b60608301525095945050505050565b6000815180845260208085019450808401835b83811015610c1357815187529582019590820190600101610bf7565b509495945050505050565b60006001600160a01b03808816835280871660208401525060c06040830152610c4a60c0830186610be4565b8281036060840152610c5c8186610be4565b90508281036080840152610c708185610be4565b83810360a08501526002815261060f60f31b602082015290506040810198975050505050505050565b60006001600160a01b03808616835280851660208401525060806040830152610cc56080830184610be4565b82810360608401526002815261060f60f31b6020820152604081015b9695505050505050565b60006001600160a01b038616825260a06020830152610d0d60a0830186610be4565b8281036040840152610d1f8186610be4565b90508281036060840152610d338185610be4565b83810360808501526002815261060f60f31b6020820152905060408101979650505050505050565b6000602082526108f46020830184610be4565b600060608252610d816060830186610be4565b8281036020840152610d938186610be4565b90508281036040840152610ce18185610be4565b6000602082526001600160a01b038351166020830152602083015160806040840152610dd660a0840182610be4565b90506040840151601f1980858403016060860152610df48383610be4565b9250606086015191508085840301608086015250610e128282610be4565b95945050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e4457610e44610e4c565b604052919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212204a4d3ee94409e2301612b101d730dbb0de80927acbba09346e915e517a95e67b64736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approveNewLandTunnel()": {
        "details": "approves New Land Tunnel to transfer Lands on behalf of this contract"
      },
      "changeAdmin(address)": {
        "params": {
          "_newAdmin": "the new admin to be set"
        }
      },
      "migrateLandsToTunnel(uint256[])": {
        "details": "Transfers all the passed land ids from the old land tunnel to the new land tunnel",
        "params": {
          "ids": "of land tokens to be migrated"
        }
      },
      "migrateQuadsToTunnel(uint256[],uint256[],uint256[])": {
        "details": "Transfers all the passed quads from the old land tunnel to the new land tunnel",
        "params": {
          "sizes": "of land quads to be migrated",
          "x": "coordinate of land quads to be migrated",
          "y": "coordinate of land quads to be migrated"
        }
      },
      "migrateToTunnelWithWithdraw((address,uint256[],uint256[],uint256[]))": {
        "details": "Fetches locked land ids to this contract and withdraws again through the new tunnel",
        "params": {
          "_ownerWithLandIds": "struct containing token owner with their land ids"
        }
      }
    },
    "title": "Tunnel migration on L2",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeAdmin(address)": {
        "notice": "changes admin to new admin"
      },
      "migrateLandsToTunnel(uint256[])": {
        "notice": "This method needs super operator role to execute"
      },
      "migrateQuadsToTunnel(uint256[],uint256[],uint256[])": {
        "notice": "This method needs super operator role to execute"
      },
      "migrateToTunnelWithWithdraw((address,uint256[],uint256[],uint256[]))": {
        "notice": "This method needs super operator role to execute"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58676,
        "contract": "src/solc_0.8/polygon/child/land/PolygonLandTunnelMigration.sol:PolygonLandTunnelMigration",
        "label": "polygonLand",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IPolygonLandWithSetApproval)41967"
      },
      {
        "astId": 58678,
        "contract": "src/solc_0.8/polygon/child/land/PolygonLandTunnelMigration.sol:PolygonLandTunnelMigration",
        "label": "newLandTunnel",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 58680,
        "contract": "src/solc_0.8/polygon/child/land/PolygonLandTunnelMigration.sol:PolygonLandTunnelMigration",
        "label": "oldLandTunnel",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 58682,
        "contract": "src/solc_0.8/polygon/child/land/PolygonLandTunnelMigration.sol:PolygonLandTunnelMigration",
        "label": "admin",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IPolygonLandWithSetApproval)41967": {
        "encoding": "inplace",
        "label": "contract IPolygonLandWithSetApproval",
        "numberOfBytes": "20"
      }
    }
  }
}