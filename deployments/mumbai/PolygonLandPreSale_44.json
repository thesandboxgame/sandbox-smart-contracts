{
  "address": "0x206f29346598eEb2D5b57E6971c16A48b762c861",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "landAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sandContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialMetaTx",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "initialWalletAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSigningWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMaxCommissionRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "estate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authValidator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "topCornerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "LandQuadPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "MaxCommissionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "MetaTransactionProcessor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "NewReceivingWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "ReferralUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "SigningWalletUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserved",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "info",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "buyLandWithSand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "referral",
          "type": "bytes"
        }
      ],
      "name": "decodeReferral",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disableWallet",
          "type": "address"
        }
      ],
      "name": "disablePreviousSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiryTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCommissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigningWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "isMetaTransactionProcessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        }
      ],
      "name": "isReferralValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "metaTransactionProcessor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setMetaTransactionProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setReceivingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxCommissionRate",
          "type": "uint256"
        }
      ],
      "name": "updateMaxCommissionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSigningWallet",
          "type": "address"
        }
      ],
      "name": "updateSigningWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "assetIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4fc22b3ccd71515b940a87e1526054482be8c89c3216fe4abae690d5f712e1ca",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0x206f29346598eEb2D5b57E6971c16A48b762c861",
    "transactionIndex": 11,
    "gasUsed": "2667567",
    "logsBloom": "0x00000000000200000000000000000000000000000000000000040000000000000002000000000000000000000000000000028000002000000000000000000000000000000000000000000000000000800000000000000000040100000000000000000000000000000000000000000000000000000000000080000000010000000000000000000000000000000000000000000000000000000000000000200000200000000000000000000000000000000000000000000000000040000000004000000000000000000001000000000000000001000000000000108008000000000000000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0xfd5962da57f865865a7ef231be5fd99f327916504100b6c257959b7067155cb5",
    "transactionHash": "0x4fc22b3ccd71515b940a87e1526054482be8c89c3216fe4abae690d5f712e1ca",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 29400428,
        "transactionHash": "0x4fc22b3ccd71515b940a87e1526054482be8c89c3216fe4abae690d5f712e1ca",
        "address": "0x206f29346598eEb2D5b57E6971c16A48b762c861",
        "topics": [
          "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
        ],
        "data": "0x000000000000000000000000592daadc9ea7f56a81de1fd27a723bd407709c460000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 32,
        "blockHash": "0xfd5962da57f865865a7ef231be5fd99f327916504100b6c257959b7067155cb5"
      },
      {
        "transactionIndex": 11,
        "blockNumber": 29400428,
        "transactionHash": "0x4fc22b3ccd71515b940a87e1526054482be8c89c3216fe4abae690d5f712e1ca",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000e3735016ce2fb00000000000000000000000000000000000000000000001cd3026ddf931047dc000000000000000000000000000000000000000000000b64c3150d769c8b084c00000000000000000000000000000000000000000000001cd2f436aa91a364e1000000000000000000000000000000000000000000000b64c32344ab9df7eb47",
        "logIndex": 33,
        "blockHash": "0xfd5962da57f865865a7ef231be5fd99f327916504100b6c257959b7067155cb5"
      }
    ],
    "blockNumber": 29400428,
    "cumulativeGasUsed": "10969168",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x525129b95bA89B9800e47ef3dc7d23fBAd27b1a3",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x592daadC9eA7F56A81De1FD27A723Bd407709c46",
    "0x49c4D4C94829B9c44052C5f5Cb164Fc612181165",
    "0xa5Eb9C9Eb4F4c35B9Be8cFaAA7909F9ebe6Cb609",
    "0xeb727f80cc2acb07d612fa25db40b29c9eebff51b7c946bd3feeda8cad8db1ee",
    1986897600,
    "0xB7060D3FeCAC3AE1F0A0AA416E3e8E472257950e",
    2000,
    "0x0000000000000000000000000000000000000000",
    "0xB766Af2EfCB61bd5a261E007D8866f005E305D5d",
    "0xAc3ff31f526Af7f386ea43649e3fa67e329AeF93",
    "0x1d3CE3489a064aEFc9928fe08F9d2Dd968F5c969"
  ],
  "numDeployments": 1,
  "linkedData": [
    {
      "x": 198,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x603f330a25ef6ce192cda9aba93f525782c06ffd3f322aafe6c5eed290c71a01",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0c31328f78169ca9d4fe1987518c5bf5c301019f98c91c5213e911f12eada487",
      "assetIds": []
    },
    {
      "x": 198,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2da5c68dd0f32177798e1edc268e2c4658aa6a1a7b28b150a553e7c1ceab1e96",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3f3941f64d8a204098fcbed1c1ce2ff2ac0264af960e70ea3b008b25d2448c40",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xce46a5f367ef21a536f968c769c8d712e46839d952fb1f135a12753a64cb88e3",
      "assetIds": []
    },
    {
      "x": 199,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x780546a4c34de22f4dd8da2a17066affd6c0c8ef928258350afad55a551bcf31",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6acfb65b4429b54433c9fb57b23c6f311e4d0cc9210ea357315381dd83d8ed1",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x3a6066058a81697a500b4fc7dc9a9e269fc4c068ffae0e42cea8039f3179943b",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x53e41bbc4547de21ed0c62a88756728ecc0e7898a01deb1285ac5242b9372c0f",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1094ec51ca7a1b481f76dc7f455d7b0c60d60b728326acfcf0190bde32318d47",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1fb321f9e3a6370af1e94db27bc722d17832511ca5f28d1c8b6c322594ce6575",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7a76c9d853940bba388fa6e35543a2a2128c5e15061d76c3e40bc71d876a77f3",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x20178de2c7e77a4570b5205be7042ef2dc3c59559794ddd6c0f89ef89e744815",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6a0cfe1b9cf05a0b88780c56f718b3bf9734e9931e92f5b95bf5f39dc146f6a2",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe6f1358c45ebaf4c0401ac24a6b1d08301639e2d6b113c2514aae2b90027f6fc",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa55a11f8405452d05a824e34b514ff3c5814faa1952e17d31635ada8023a5f42",
      "assetIds": []
    },
    {
      "x": 200,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb957f6577dafda8c898e965b24f5b2d6f2a5d13a4d41c5b155594208afd4d506",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb66a73c1a0152e72015bc65acfc36eaf759edf26e5d34672b0b780613e1d3452",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc594509d318ea28bdd0f0ffaf3e4900b421432a2d8dc7544582609a0e785ff1c",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd78870682138218fd406b89b9a6945a05acb3ade9c2dbe451c793cb4d869ab34",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb015ddafb350035ce5f6b29172363ef946dd972ec398d9e56bedb79b6cf1883d",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x127fe47a9455bc4b840c8198aaa1936d95a3f38837a9dd2865258f381dc44e95",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2035595096e8b3b17106b9a8b81dd8857f8e6a98b342e9465ea741350edf8daa",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa4ef8bd79b1716a32141b932e4edeb522979f8db8288af18d83414d3e845292",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e80a42e2277a1cb668386ee55634bd310179a681dfe51d90597dfaf09accba1",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x224fae2e043c309943b1dc087f73d3d89a5a886f64900a38cafa339db52c2297",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd9a19ca666aa31a2542e61ce7574c6524397e982bc9f74874a7a024cc3397b6a",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1b1450bbffdf7d38d04d5772da3de5c215bb3c2fed7534f787892d044cf9844e",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6e77f7f681a48c34ba07126a3aa4b25d689d27cff4a8cba6bec2a7fa79597901",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1de9e38f8cb2bd9d5184d26581a6b6d4d1ed30a9f2b0958ed8bc29aeb573257",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x762953ed8fcb581b1d51609a9200048e9f9db738aa7568c06e3de3c3883b1b4a",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb787efef9e74f40d2e15b1503e3a90caf43664a647de3be1729c1cbc01848685",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd74d1b08f78e625be02d4834fcd37a8b4ced188500db1832a44c133dcc3566be",
      "assetIds": []
    },
    {
      "x": 201,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9439cb771c8fd8119dec55c3e084c49500cb7ac5f8192aeb26a4c9ff2cc5fd26",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x79e12173d8a7dfb1f2874726e6635c367e6b391c4450774e0e1d63d24e337b3a",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7a95b7e2adaf849346fc7a8bbc2838807c3c68f4963a5ececaa4ae0945a4687c",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe1f3842f86bf2b1cd4e8fa4623307452ea8e3c56698251aae738af637f177169",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbf3487c27b2382c29c5bcbb8f8e70c96bbc1573818b040fe2a3f899b46983f91",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8bd0273e00cdb373e8a9c5286155386a1b2ac859196730169694c63f825aaf7c",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdad897c57c4e924f19cf5f4aece7ff105693ead0bab9dc597c85e8cdee20e884",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc0557a24783595605c5b5ef82616f2a4db3255e676b766e3143156b1240bab53",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa3d07e967e274fb03c48944c823ae3392a5f55a01a8a69a94b8a3462eca9bf55",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6a7ab165c55cefc1b634220ecc6d354b0f20e60989b9a5602aeb8b245a02ded",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde44634d0ab75f3de90115083629357e3895d95e419f113aca95255bcf073535",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf31ecb00c9a9073d732e9e99e9cf84b11f6f0bd9cc2ed80cc5c0b92b2b312a87",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x308962729e93b7103ddd127c05e16acbc822402614ee7e345dc0d2909d40c249",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5d8cf46546dc0b1c9d23fd99a1c01d1453f75b0cf60cf4a5b95827d5dbbae844",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3d958f0ba3ea5dc1d4e41b3c63879d295cb632ab4900c268840adbe607580164",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa7829b81e012576f7c68754637af3d128bb772f344556c772a48412b7c29186a",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6e3b0f223cc58ec8c5c925ef680daa240f765efdd5cc855079ea35cdf3348a4",
      "assetIds": []
    },
    {
      "x": 202,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8125fa555452e6db357e18bbbe3fbc41f200991261dbd6e0d799c44a51da984a",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd1d8aa9bd8fdc6d35e3c4faf0805ac7dbdf860e29f3ec02300a2e3a84bad56db",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9ad46877ec427097287e9884d8a5f6452d75f5319ee697af32791c81d28222c3",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd62004a74ead2a253ce139e8b963df41f75c6852acebc33bfc8b6501aadc714c",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe8683fea7393752807b90e93f504de3963deba0f93b395abefc472c4172e2fc1",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd97dd6bb78e66f214681a778af22ecb776ec7ec20def723aff5152dbc0153a48",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd8ec2a5ed90e7fa669de3faa8e3a6c1914720e08d9ca02aaa545bc03d66799b1",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x62d33d71920bba7957edb0b48f0dadd894841d9bd18f45bf634250bbba3796ba",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x63fd351a418a84c1d96ad87b779ca64270fc4764af2b3f75c7b57b3ab4135a0d",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 176,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5f591edd68b225c5bf58dcdb8a27e9ed13a178ab1ca2e9c4da4222c9e5e654fe",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x848b31d52b272fdd92af64bc99714f5e6a2ee799f19b0fdffb92956ad2a8967c",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ffa75bd077c0840c6a2eb05bbcc828a69db92534bb1cadfed70659115b72438",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa1fcd7e93c3eb16099d9cc05a077007285edf971376fe82a27ee21ba89f8fd36",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9520dbaefa36b96442315735c0e4b7a5a32bda8c65f2e944031e91e9b9597f1e",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0a115a0b4c2dd16c6196a16d4db9d0764ad96f29e444cd9af9351185f14601ea",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2cd6c2e1b0f2eefe31355d0ac4c2498fcacd793692ad20fe69d7594126c0aa26",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x8733e3c5784b1cd75ee84073c59eb27b011033781c249d86e9e4d65db3030e62",
      "assetIds": []
    },
    {
      "x": 203,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb6698bf64c4a2c2239e0628acd693537d6f1f751aed7aa2a751501cb836e240f",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0252f7e081e02d8f4e2879bf19f5b82bf44919ceee5cddf192da4eb90e5337ed",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x710b543d3969a3f920a111abb6bc761f0b561b63a2b5652c0dc66130d02356bc",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x135e14dc56572fc2436f6c43c777a688591e060ca665fac43225ef94ccc941be",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x000e50a517408ef0dc3fc799c107afd73185897e74836d8dcb8df38e8f5ef2ea",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6c4d2dae09f319c41d29bc145a6ca3c95be2ab5f7453e9a661b358ab204accd5",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x70548288500cbe4fcf787d2bbb96605ad6e2f836dea53557fafc5d8b3bf03b1c",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdcff7b54a12c9f8b3b7e3cce8e86c41ea7d54b6724170979da61d7d022b274ed",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3208bd74d52d4221c608f15dfae7fb03689c6c3b3d1b1e070a18aac1de294374",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0887074d0cb766c389fb824b23b98ea371c55c2d323c657348a1a84cfed28874",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x81ca09836a144ccbf35d60d985ec83ad001bc7628c26df81ddd2bd5454d58965",
      "assetIds": []
    },
    {
      "x": 204,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf8424ce29b5eb73b6c6da5b86aa3ab9b0825d89aff63da1cf01c34c036a06781",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x209dcbf1367e68a10b4f9178330c3b813542c9d1798290722f883c6eac11be31",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x860200e0947f4966c6f237996760f0a1b48fb06ff44bd6501fe0442868485f4f",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe959fa419c155b54ebc2e8d60e46df7f0b2ef308e0e915f68980d5403f84a556",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17bbebc64bd584bf530a8a33afed85b64ebf58d8fe2345773d2673bfe5c49a81",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdd5ebe52bf2759d4f5d4ca1c7a427baf0f2f3d4b8b5ca4eb15a8bab9b58da250",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x5088f52543ae2c7b98ad55bd40defdedfde2b8e705fb77b1aafa0f0d6b306a53",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdadb9f2f8acb7a156da5fe0716d6a59a633ca7d4cdea5f5bdb3d8ace73096703",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x390e0a30e9f5001b4c5ee9e0313dffd21ef099860e643798c8c0ed49c2552b99",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x56fd5a70c0dea387a89b0510a3303c2aa0fab29e8eb1f51492ae598d945e2c88",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x086989bbeeb1dcef974450a8b64db8a4c949834bd27b3615aba35e7dea3a79f5",
      "assetIds": []
    },
    {
      "x": 205,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x08ccdece795a648c7268fa427392b9520aeb29295694d71c4c4fd8b2ba2ad6eb",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe7d6b3f1c5abe3d4aea3cadcdff67b6e5fe4f7552671ac442a58984ba9a03f1e",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x94068e1f3b438334eee80acb4362471f7b9e82c5a123c205c9abc26d97469424",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa4589fe760e1984045e928586e21bb3dac8579827a154a54a76a572582122a88",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3348e2824112c7ecace962e744de4f7650b5ae0a3c98735abed8b85621802356",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x52f05792a129db95ad55030467577806fa6aa32cfc588d90b2472baf97cf2b04",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x1b77d56292e227fe6e6dfca5c6378e6689e4f3177010ff6f7be03c8ef44b35b6",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x59ab66cec1fd93d129f0f58683fe4f305f0bf002880bcf8860dc195f5295cb98",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xca489e021d7fba1073fa0829485d6cdf6f8622536535222fa2697291c009315d",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xe454395383ff6da1df372b030a49ee27b47c51a8a66e2da1c44e321c5544fae2",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaad222c7732bf0f2d09edb80956a377dc8f5f12506b15f2ed861aa8824bc2a77",
      "assetIds": []
    },
    {
      "x": 206,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x94d86a876429fc703e080bdb1c55d1a58fd6bb8d7ef37640b16704852bcc4377",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb55e4d3ea76ef2d19b5f18d2bb6cbe0a6478f6036e9dfa0fef6d209b7068ec35",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdead08ddd4ca5e00ac3cff32bf5e08055543e292740570290a1184682f2cc4b3",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9f704ff6605a840ab0f89bac95df4ebf6080d7b37c260500ad4f245a93b93415",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x10c3dad9f7a16ee800f354c68d23dcd0e76edf05d0aa43776023dd7d8a0682ad",
      "assetIds": []
    },
    {
      "x": 207,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd28d87a51b22bb38bd381d7128774e2c9225e8edd6f3cf54516441ca0cf7f975",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb8852c393e3360ce3dd450476b5c44820ddc1f511de0817f3f6c65fb2958e013",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5d802cc187c84f3abf776929b87e9ebbcecc1f51de11ef8382e80669ecf55ae7",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5f6e8d1d9a56210fd6bbe063adef13c5c4197165f85da56a9b3b87639adb4829",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xda0e9434202b44d6b6fff46cc4b5aac21c72cdca463f02f68ff72dfbdc24f66b",
      "assetIds": []
    },
    {
      "x": 208,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3680d2088735802cbf7334cb8e3ab68326f6f6674a20b8d26cc023d266c726b5",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x4f459c8b7786317f9b984b513490cd13c0c4f5676a850f232b18e2911159df18",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x44c25d8edd8e1478f472c742d49afa43564f7f7f356395133bc92d183cea8ad6",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd1cd7918cac875ea617ad96713508e09513124aaf0d991fe306fbc1863d326a1",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x73b9ac94dde63a5ba247d3fc05272a46d28aecc7d7ef66c522e9c75c1a605672",
      "assetIds": []
    },
    {
      "x": 209,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6b438d1139295bbfb416ae0f87f0f8123cc93d4d1534128fc0eed2d5da3da718",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0955300535ad71688476704d04454f4afb9dc3ddb4e651e7d91f7edda5b009a5",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 175,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb41cefc046010117ce23c95525051adac87459e6c1375b8d456023378bcbfcff",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 176,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xffd84660cbaf3fa198cb2d283d2ec0778da38bddbdb02610681158e1ae37e9a3",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3bd802551dc738adfa7b457b9ff3ca848773c35a590f86de339621717a161698",
      "assetIds": []
    },
    {
      "x": 210,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3bee1eadf5e2192ff4c77752d52b02316cc1ae34343e95ef6ba3e3f35514e03e",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x51717a1442fc68963e4f79280affe25e7e68a77e8a9adc39ea6bf2a19264b785",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5bd49ddcb28f3c017ec6a14c8506662c0a3d717e2041d5aaf522077a14dfd1b6",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa735bb0384d6c88a72bdb088ebf6acb85347119dcb85d6a683cb71689996beec",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe80c6185ce869ea43503293238ce9027c38a17a72dbec0bc122e840e0afa47a0",
      "assetIds": []
    },
    {
      "x": 211,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17ee14ecfb2cd5991bbbcaa0ef6b41f151821eab2c4198fae9371007d7349bf2",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x44fecd921e49ab50333dc883536e15829ec33c6d8885ce6e5b16883a08628dfb",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xab457420cb1dfa967cfb0adcb9f746ebb76f29a530e79fad05febb7b5131783c",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5f4989b3f6ecba9f398c96019d35c0a37abc310b58e64842894db9e01220cbdf",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x437007c8346133c74df420b8bf8c6a6e5ac2e82116abc78ab53e2b284c662c85",
      "assetIds": []
    },
    {
      "x": 212,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc82265f578efd9b31ea3f4f5769c6eb259ff01f3128b9aaa96636fa6092fd2f8",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac2ca2a083f7f55ce940df611371303f6f3bdd4b3b0f1df865f84f4fc2a1c8ed",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x351c68996671b08a8b34b3ba8517e60859be99bd5eca83477b6e0c3612205833",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x91d298879fb028f7d2f4f14b08f282944be87748157cc38a8f08c17b102d08fe",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x169893912870ebef9760e93f915a5b6082c41e4907057ad93bdd1fc9c8cffda5",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6d75b71f9d29ad40721ebf75de5c0d46cf67eaea0536c32762138e71da04f34c",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x19584c01b77b3d97283f7097f04c66dbb58fa92883cbb42df582afcf6ca91833",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfc03d3bc8ec18d39c188a71bd84afbbfc3a23e083ae6e865e4daf861247cc5ea",
      "assetIds": []
    },
    {
      "x": 213,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbb15024a645b5e2b77e69174cd41847e5f47baf6b2d7883c93182e8d70104dea",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x388227c9707743a14f5658396462d266d8a5deee15430e4ad67786b70cd333b6",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6fe711c8b9c19f0c62c9d2bff5c7f75046520f5d4d4af13c0b9f51047a1b4fa2",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdc92283a94e248a6639ec0148da7637162abbcfc3276e30b1a0bd48fbef483f8",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3289aef5da896389d106744f39217e7546d8802e5afe0afe3a71f5f5de470ebf",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x07ca038064a0c0cb024d1470baaea15fe10d16660804903648806a90b0eb274f",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x96b06cc978ee24e81914cdc5e7d48f3d2d656c5e0a85f8d1bb218943dce0ef94",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4db1aa2cc38b3045bbd8df865121ccaff3cb3fbc565dd456638d07c6978ea62a",
      "assetIds": []
    },
    {
      "x": 214,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x78abf7cf3c03e7b8a958d567c12d85ffd0b129b86aadc114109931a908af73e0",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc0bfa9eda2aa1c8180a7ff5309fff9329a356d63dde592e87b56af446375d5ea",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x34ca98c42686346637d3781c2adc93387ba586627e1ea755e262428074eaf330",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 176,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x3191061566db5acf8d53048b09c3edae8db1dd7164dfbc5de39131e2928ff0da",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xaad98907225729b0295435c2e3269149eb0c9d66a438f58ca3c56d2bc0ee9a9f",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 178,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x56401e0c87719a4cad4ec226c034001813a965cedf51a8a2d613e4743818e660",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x121983f3b1cce9ac6b59ddf37ef093092d9facaa13262f5698912a402633bf72",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x806291cb57e782593e521de3f62f35af615dafba230540ff865fb98611cece44",
      "assetIds": []
    },
    {
      "x": 215,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa844cd4ce009774e6e6218411e9d1eadadb9788347686ad8059238366caa8cbe",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 168,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xcdde2e35ee1831826fbef9a9a972b3da57268c9c3aefb47be9520114aa62183e",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 169,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc9b1cc17c57175ef67aabad724c2e3f9748daea25a43020c0c58c630f3034650",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xce524a776a2ea7e712b9503fa320e1d80b88e32e426fe30e7f137ca9e2f86875",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7c303c2c99c7b69362e2995389f444e9b421a542d074e7a1618052ef4612b8d7",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x608810a006b990de26b090fb5e329f8bbc036a814126948fe10a6a1259fdd5f1",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6ed37bcfd93f614e955e56af827f64f60eb0fbe960f30cdb70aa1ad905d2649e",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4f837a66d6dd4a472e33dba13facb4b66ff8b0495c94715b76e583138f6ac2ee",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9c4a5f7041cbc6521b7c3fe078f71cffe6db6285927411ec237073d9efc71fb2",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa88ee5e150b5409481f1369f14d53e6659894c558bd2011e700528c5d128f15e",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x924f2b0a769088b5ba18cb11a41963579cab044b3fd1f4cd6147a44a6cf6ab1e",
      "assetIds": []
    },
    {
      "x": 216,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdf0347df2463a50946302bc4dce8a212e02ddb5b1d5c374a7701521ab4da2c55",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4b3db366bd082b743f7006ddf11b0aee5b1f77cf8aa27db868576760f3037854",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe5f60c919b0bb48c4e81ff4b52e40eb746266e7afe8a623813afb94d2e309521",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4530b09c764443838ce8cf5f2f5869cc5b80e73e0f000a974c78b7beafa08667",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x8beff25825b159e2431b30a8b33ae7b9139343022af7e345dfeac18ae8f9efed",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd95d15d91ac9cfef7bea3e97f1b9df24875bc3f66d9b867178371542597ed8fa",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x45fb21901467de13a731e9eabce8588c9558ab48c261d63296ebb8fef3de704e",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4c30f13d11be8508717204fbe7b6ab2667441d449c028d6e567037e08d8f9a71",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5a1142f20e71d576eb6fb267f3b828c779476086e25e2b224048688b4ab5b8a2",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2391139836a6f5640044bac9ee4dfaf6b54a83441e48a1c4ff05dbce0af31af1",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ba24022a2c78ad684f9c22fdcc2c9728ee6954ab4d4cfdbb4b1ab8ba42b2807",
      "assetIds": []
    },
    {
      "x": 217,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x51f3427e797ff6eb1dd117801b746aae8e512c4cc8ab43224f74e7d31b3e84a2",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xecbcb7f726595ae060e7b5754cc9af869053c0b8576137e740281cde8e4f05f8",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2348daa38a1f10c40a4eb3057d8dfdec52fd02bc8d8f52a7ebd96260562994b2",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x22d4d6a3a879cfca5297c5f0de594483877c94ad5a73e8871e9a69150957afc5",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd663f02c31f14a472793f4f853e58b9dd5af15bf29d03e7c1965bfc1c91117ca",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde0186870a05488ae337e4a8558bb8b962ff1c47c81717a1b544705995419db6",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe5399e80a63bbcffa6f22e6f27274be1af8d2e9223801d69b9b8dd7adb411779",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x94fee28795e2fd058bca655f7269c90170b86007b8956afc2c382f470533b74f",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xda7a544836aab53d9804ca7449577d06e03d93603518202b4f5ae4da43ff0367",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xad079896cb47a10d56db2928d82580ee407f4780b2e27037f38c8d9f9b975dec",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa749798a4e3f5aae81af6aa0687df175c87c2c55beffa56c36b9c0c560c18605",
      "assetIds": []
    },
    {
      "x": 218,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x46789b73ed4d4530343bf9dbdced746b5c593465fb12825b6c2e56886a307ce8",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8d65e4c2dc0d08cec9f693d5a0fac51fa0e0488c71181b1dff10bb5e37818024",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1c19696b35f69b4b17f85790969a4778a71b1dc1917b8b5d54003c5ae6691b20",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf46de2fa7cc426f863bb32e6309601e3dd68a1db33035115ebdcc1b11c2c6450",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x000c7298f64299c154986f5741463bcc19f52421508f735899df6670da9d7968",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfc5bba8b32bbab78662865556856f7dbe08a92f9ad2c2d9096ea7104b36eaf62",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xc84af52c5591e9f6a7af7cffa4ba07895069f274e98ef663e1eaed3b64b53c6c",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x2d74f07945ffb6a44a6622cb0f096df682506841ef367fe3dc3c4c7bf4c35519",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x470eb75ed411317c2551251d6158394abcd8fe832dec43fb1833ffe03d6ea162",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbf4ee8352e8395d1a12781789141b9a940419cc0cfe71385b1789d14c9b50fe4",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6215e4480394a774b2e4ca436d1141fdf84e8ef660aebcb9dea4cc1a85b7c7d0",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x424f672e23865c06ed42ba49e1d4394cae9c65055cf82fedf42c179f926ad10b",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x86593f17aed52e3c673f660260c314e81f6bb518c1ec9fcd4802490e649ebb8b",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x61577f2acfbb9a145045d1600e6189408a201499f0b29080af10e5cb12c15d4d",
      "assetIds": []
    },
    {
      "x": 219,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb5a27be8a984bd31d822a1dba3d2795b5d73aa75071d65d0c349bf9c0c959a1c",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaffb65a2a5c167c1f4f314e42048d6701502ad00fb96dcda3d1020fb6c45599e",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1136c63475eae536fbcf7f45b40b9543d4ec292ab7f706d896813e2af2a5bd3f",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8e7173a6c3bfd402fd2d470de8317ff9eddd3d9d6eb773b6da530a6809a53ede",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x888b733c3b088bb721d639ab82a4638db6708f47fbeec33622d6b34f95f8b002",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc0f8ca9e429178f225afe9704c873a65d266a4353e127434a885076650568368",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xd9105562dffac953fe5c54d17bb6a917a896d8f84d03b94629d25e1e616cf599",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x12aef1c086ee8fe40ab3b404256edcd22f1605ffb8292cc3bc65e47e86fa524b",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1a1209e99965c101eced419ca559cdacafc1cff9a62a37c535ed3ae06de829c1",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1e782a9817261360864f49b6abcc12a596832d48d609d7cdc77f1370ab037cfa",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9090230e864f4280d659813cbfa8ec3ced196ea46d76ce5ae993741545946b0b",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd04f57fe71349647917459fcf18e6465d2459243e7f8051e456e39d9d7c61031",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6663519d0a75b468a1db41c0d890bd3d7d5220b38c22c6253145810e744904f7",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe434ff3e5f01cd444dbdfd4a351590283b58606517dd1854e060c799fd85fec7",
      "assetIds": []
    },
    {
      "x": 220,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd6e796bfb1050e44571dcd384a5ddb4c7b84857ac339c695e5735674e226426f",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5701076b69a08c3d8e8d00f468abf904671c03cadefaa191af2c89508d93c5bc",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd790d1fe04a2534106816f5bb03c55d6cf65265683e1094f88972aaeb847f31f",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x54749eb8e7ceca3f3f0ec4cc02c6cea75d4f43147d364b3bcd646555e41b2237",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc649b16181d0b2f62d4b0113491ef82ed789d32d6ef215b3f0095b7c764a1a2b",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5f6bd5e850f8b45eebc3217e7eb63f1617c14bd23c9a1486b869b35faf3c5e40",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 173,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x476e4b39dfa1543546028848ef1c7ea9f19ec74c6ee99ddf33d10ca114a47429",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xb9895724f55beced77d71659b58c627f855af4f5912a3c0c9623ecf5578b194f",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0xc33238f18ddcf8fd8283f1033959a5c80b2894989cc0c7a720186a80a4102c62",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 182,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5d256eccbbcfbeb605b64fb6dab15e61d31351332ec3de3f1699bb6f82f95876",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 183,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x77e04d62a1ab17a438f43dd84344041e30949b0fafa460112740000b3c82e0e6",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 184,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x34d15ddb00f7557b1e9fbbbbd959d33aeaf915a4961a893897a9a13312e022ee",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 185,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x9725c1d38349e46e9835474081539bd771f23b50c091447677b9886250882772",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf12fd7bd17e729fbdd68377146c09f0a75a9d9875a83ba5ac934b63b3bbcd6fb",
      "assetIds": []
    },
    {
      "x": 221,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc29e9b55e722f080ee3b8f5ec1607741c18b1da1e1e7cae7353c773bc9e411c6",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x906df77bf04a37f6810b988779164d505e691192bce22e0441e4946346c03aa7",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x04d56cd3937397275c746199385c4f17982f99c26f27ab85518b284302c2b4d5",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcfcdbcf7999e940912b86beb911480361876ed8f0c5f48e88aee7266da7c2a8c",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0b3d093924ee79f294caa5614215a94f19f7f28efd4b493512a1b7b4b48febe5",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe39902c33aeb5119a1b3768d12d6d1b9257116ecced9a9e2e449ff53fb66ec22",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa41ce25854f6383683da96c0752575dc19e92a6f12e5f0b64decf9d618520076",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 174,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x6e78cefcd75327d80a55d6d9e5c7831879044f6d291e72037601b244ebf7e5f7",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x9f24ffdb01c159b1f212dba9d9a20b9f287855565ba8560107dea3769b0b7987",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 176,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xde5ad934c8c26d20313cf4983d7cede93391e8579431bc3fccbfb6ce6d62b94b",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 186,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xf48a950b1217108a5b4197a7c9b21b17c6ff8f915b2c6a2a721c94db6eb7d9ea",
      "assetIds": []
    },
    {
      "x": 222,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2471ac29ed758ab419d6fbebf7d37ba557da72ddc1da3661fb8799308d6ab90d",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcfbb89a1c0c0c6450ef478497ff80009540354ee8f0168d5891f97c80211249d",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0bb15d5489f3cde3c2d38c96f0ac21e6288f974e22f17d0ec582fa9f6431330e",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xac65294a0258aa9a92e41b7009110ee875230674f218aeaa45e38bcf6b70c639",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x2423cd517d0135cf8da0415c71c0ac8ec84134b3c0b6a1367a763453e0198429",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xdae740df02100d1eea2ffcf24b65797a50be3033f5f5775a0b89e23d6288d770",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x88a9fe2092eeaac70d07ea5d4e04d9a187dbfb234724b8dd21a600954babf33d",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x88623b07ff96ba27956fc325f1b16bfff89621017a262289a9070e8dcfac4b89",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa506a3e4a2fb547e9ded6384f2c582fa3e7cc4eb92229dace596b999d043c68",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x638993083848173d53b74f86d16dbf69d7d17bb4d014c9b845465ab12697b66d",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc54117a7f3b37a772090be8e2fe5645385fefbcf77b37db2c9839325a293f566",
      "assetIds": []
    },
    {
      "x": 223,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x23f0929624628999d781fa8386c8344d7ef7c3af90f7f184ae6b1485bf9f49c5",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x13dda85ca6466b7ecda6ab6c403a2ec664234c37d4fd0d0ef7899e4898975577",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb47728e8c0d5cb1fdac449b9ce089b8de298873b7d371afe41e5cf167c9e3849",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xde239288d0fb70a2dd2e59c10f4dbc1feda1868050dd2252e71ad6aabc79d7d1",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5b0de6cbdd1d9b135b2b16dec9a78442cb0112936a15f9c764abdb5a7a2b960f",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7e9db17ebafb624ee9bf056fe71e73e1cd1ff2ac105b38f3427b9ff6e6624f59",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa50ce2bdf976299f2075545e1a7e7cb0ef62d07660d7e29c401980686e9f046a",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xda540b12be30e8445ef3980ca7f3a365095c8085c2b95140d78925ec09d4900d",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3aba9b1b7151c86b56bf08913c3be5562111b0c5f403509cfd10e48f6eb94a7c",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x355e87dc058e6d354151c7cec7826cc3407fc715bfd67d03d505866dc303dd4f",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 186,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x531cdb4027208831b96f537a6efa849afc733ae4f8dfeb536033952e7da2904f",
      "assetIds": []
    },
    {
      "x": 224,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcdc686251325af32e2ed5517b4154a71df1409f03f2a9aaa6b4bcbc934704488",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf7834ed96f3ebfda27e22d86b3a83f331041e07c08ab226f554e69911141f14e",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb0a7530ef1cedcdcadce5b24f0d293fb7930b97b0045e51aa7149021491fef80",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd13c0cbdd3d12b7c1dbbcf6d6d06d0ad3d5e055382de871e7444c3dda9b0eb5d",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x07caa31abca28047835c8d0c9df22d4c839fd9fc030b0c1edbef0680a56b1438",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x6a40cfe53c607364feb34831d160aa8d4336f59941431bfea5cf31cd36989e18",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 179,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x52b612371f0acfdf76adf687c886be2ca0e41d9efa23863dd1582706831796fa",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 186,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x92c2645c820252539b47473d90fa040ce944d4301ae43f2bdd3cb2ddb0cd66f8",
      "assetIds": []
    },
    {
      "x": 225,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1a3c1758746da2728e39c0a30cdee8e5122f789366a69073de68f4670b0c46b0",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x250d928824deb7a4a84bcda15acc7d151e94c23d4d46a3a31dc5f8059acb9503",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xce0007175812a8b5380547587bd493ef7e0d6e52953d5d1f906d244229fd47cc",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5375d7573c3729d06ceb97e60439aa8f04df9e98c01793f22f941fc4f3ab7e97",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb68a3010eb9f4a32b37cbc63c5a7e81488f2c63d239b91862f1fd1c71da4d0df",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x25e062340b7a8e313eba936ca5b703ce831406ab7962bb8ab53a42f16640f049",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 179,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xa10b0a7d8145c51293fdf18b5490a01b625d1a5e12dcdd8970a3e009379e8a91",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x05f2499e60560735e2bce02215d2bcb0a58a14b73b8579fadd4201ccc8234d38",
      "assetIds": []
    },
    {
      "x": 226,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb1a5ad96af2ecfdd5622b47251dd5a2c2eb9ebbf4d71499d452e240bd1dd8018",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x483237d5541c5a8227462a002910cc6aeee5217283f21d02bce958752e1b2f1b",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x779be710269d66b024a941be0fb4521a6566b3a429f38ce0dc8b8769967ca2fe",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x57a89089bf0c4f079645df724d5aaa120bdff0321f2d097934843579bbc98d5b",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1fe3ab811b545e32f32abcc0dbf4ed1314244179dc29b0872757b57f8c33d93b",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1625e6825478fb75c61034b8e4085d80c59059df1c28c800a53cb13ef0612586",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 179,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xdfd7144fd273dbcf7d924141489c613754ab802197d9620117e36e486328e0be",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 186,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x0c70d7baad8f6661f90b629d40555b6f0837d43419c36b6af0f3594d19bdfef9",
      "assetIds": []
    },
    {
      "x": 227,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfd98372d7bded4b6b98902683d30ea6e7acc61b1c7e093a3a6276998deb87cd9",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x17f7e223ed367d5e2ba0bbb448f24b29a0ebaf35db486f2f761bb84aaea0d453",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xa04fb004e76f218d59de60877f53cc30c1e36e55c9243464082aa986434347e5",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x67f25b855ffafbe558f410ffb2d61533c85c6e63dbda43790a8e16a68ff15bab",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe520bb43b7108b0c8dda35b6e00809224cfb0ff47f2201073f32902094c490f4",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x9d565a777c827a9fb9edf21fab324e9a829b3757347dd79e23fdf7cab4c226b5",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe3e5c500289706ca4cea2f3d92351d7267ed99314302b6191d89edab751b7591",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xfbbfced5c2c38003b8dcc44c61806b8c760b2b705e627430e574e72e9a79b435",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x938ba14943b0a30cadb832ee2e5e26ee577529b9837226e74668fcc29b461167",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5716ffc5ec548fecfd83d87a286c4d48d0464ccc1ce50a28b626a57a4fa07041",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe43e17bdaf0438ce129aa3d7422c1e73b94f3c9b5a5808e7253b63c68f3ac5c9",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xec7027a8fb07dd0466a7e63ee8ae778913dcd51b37f4ce15ab064f9906d95efc",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x111c809ee7da7ac7ec6921ccd76cf5e5d5d14ed403e40156a6649c54cd1e4e23",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 180,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xce4ded03eabd856e424da8df694e10ad8a4009dd5305b69ea570bf9ad3182995",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 181,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x3292964316082945fa38f3183d06868db18b4b585e4750cab379ac470fb9bc1a",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 182,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0xfb3bdccd12d9a1908f32720e841727c244a83ef19a6a7e06558027125f4c9adc",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 183,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x5344986cc0959a07593da066369120790f9d763d6084cfcd41d173cc91d93145",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 184,
      "size": 1,
      "price": "4683000000000000000000",
      "reserved": "",
      "salt": "0x77853bda164b070597eb1d1eaf852f303f474b32e49aeba9a7d4bbd52e58441a",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "0x7a9fe22691c811ea339d9b73150e6911a5343dca",
      "salt": "0x2acd92438e0538a9d0c737f2db6638e5563d9cc0606e6a6a0717c4896a65e6cd",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe31ddce0e3e2a4fd64beae59075e1668b265c5fcdf730cabd78079651b4f03df",
      "assetIds": []
    },
    {
      "x": 228,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1c818cfd82d673674fcf016fd92c49ac9d80ed006c4a4c0f139cfc9803acc1d3",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3fc62642cf9f3122fd5ec08974bc7ced08544763cf6dd6f927fb6487f11230ae",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7dc120dd43a33733be6000023b6348d3a0ba2bc6a20c9e9baee25e6a7b5da194",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe313fa4f89333436f930538024312e6c06f406e7ce80c934e1bf34cdfa41ed00",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x0bb23dd4beee2ef24d387234f59da8c8ef797bd0f037aaccd6baf8b92b232842",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x532e9d2fd409ec90102077567f63e3cfb94692edf252cb8b7fb3f01100fb115e",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xaa8c7df8bf13c9794e2486c9c44ad073f6f6658bd14c0af8c118f0b5c8656eb5",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3a3ede56749e4756addd44908b3c4a1d867ec4ca4da0a859c44a784e04290f8d",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x8ccb132bff12e1b6bf8b769fe22dc86ec9636cb0343ea64f44320416327db706",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbd4681210bcd92b12af2d42b1c5ab05acfe9d37c2d527e4b5b128cf73d8b24f8",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd179ed4f55504e6de90eb3528c7073c31b7f56aae40bd693717d175011d1f56b",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xbf989dea27ab32e8acfcc0526852a51e5c3bea5ca5f670985cd4486d5a084a22",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb3966f40abe0bf475357b66faadc9841f6113389c5434e7282caa1b322f541c6",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xb86c3382b957843408483d80fc51329cbb107bde528f325b490f394005780ed9",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x49f2f3bc63bacb3e2cd6c2fe893877a22e5bfa3880d5085b98fdfdcd5807999f",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x95a7ed270ca57a5954efac7a18a151012d4ff3a4e7e520f44ccd5dfe433ca5ed",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xcda77d3f3575005ffb2ce18dc39ff6942d3b65713425f86337179dcc57a085d1",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x00a09116fe9b5d378722bcf486148b1d92c8273d4d5d19fe8bd0fbda7cedd562",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x3378cbb5b995781d514f02a479772980dec9c33c68395e8b78bcd1a556d9e125",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1e1fd5888c29655a3666d0838db9e37a3c8eb661bfcfafb804c3a1d3d0dd0816",
      "assetIds": []
    },
    {
      "x": 229,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd50ff56ba853fbc6176e9c14d313e9ab214337542daf59498a9239c1854cc2c5",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 168,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7dce8ceaeb3f04a8c84d7f71b69fc2c1c1186ff3195a7a4c7637d3a23fae71e9",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 169,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd93b1b4258fe99f24db508a8baea2df72a5126d476291a5244cff1faf7573629",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 170,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc370e82f0c91fa967f0cc34ec6678d67571709b8056f99a275906721a73fd33c",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 171,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xd4ebafba80a7599fe2f0a1b35e795c70c5a7651129b6b8825866166f2a400075",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 172,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xf03ec95d20b2b6ec37516b576a084b440195442cdebf790a49831983f0aefe29",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 173,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xe95fd68d022baa37cebadfc4a7324a10014f7057e2cd54b5b628f282533ba74a",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 174,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x5615a007cef65cf84184362ad8ec9ff35dad87cfd940142ce0501f5763cd46dc",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 175,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xc55bff175d0b514710707166d0f96c8b3075d601d1bd7b143fe60623a5214f9d",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 176,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x044c82ada0d96a41cdd9d8c2c3f01e2f51f2bb3ca4068ff8b74383c84b86968f",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 177,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x14e1b557e9be246c16217671873a55bec91583559d8094480753f3dff69dff38",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 178,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x56bd0cd00946a18c1d3b1967c96a8700dbc12bb09b10275a4fda208d62f6a9bb",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 179,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x75812831c1d8666c27909d53eb121ad96eb0b007418153918d451de755abcbef",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 180,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x00ac914e8dacbae1436b6aa650376c85c2407ce363ee260b3c829be195b272a9",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 181,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ef2b35f4e08fd9262d104db1b3b6e09a87ac0281266ee7eba4012a0eaa413f1",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 182,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4108dbdf0f0f08313afc4a4208f115ada0bf855ff2f84a499a6c309d18752d00",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 183,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x1a3d2491c4868276fb7dea086ef5a3af799c4515f1169635121530a3162128f5",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 184,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x692e87d3adead20758565a704eebed19c806051120d22773f87a7c32ed3001af",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 185,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x7ce1e63fc958f77c25d3718861979dd3e6cbd4d30f561f30023be5f9a0bf0b47",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 186,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0x4ff4c2bbdbf0b989e5d57056aee3a80e0003c3d13a5f243a84e519e25df0890e",
      "assetIds": []
    },
    {
      "x": 230,
      "y": 187,
      "size": 1,
      "price": "1011000000000000000000",
      "reserved": "",
      "salt": "0xded732e32471b36184905c1172b26291ca5b558971bb5392f3a83d1095427528",
      "assetIds": []
    }
  ],
  "solcInputHash": "ec605981be9adfd04d88d4245397bb77",
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"landAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sandContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"initialWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSigningWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMaxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"estate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authValidator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topCornerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"LandQuadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"MaxCommissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewReceivingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"ReferralUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"SigningWalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserved\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"info\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyLandWithSand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"referral\",\"type\":\"bytes\"}],\"name\":\"decodeReferral\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disableWallet\",\"type\":\"address\"}],\"name\":\"disablePreviousSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCommissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"isReferralValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxCommissionRate\",\"type\":\"uint256\"}],\"name\":\"updateMaxCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigningWallet\",\"type\":\"address\"}],\"name\":\"updateSigningWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"params\":{\"assetIds\":\"asset ids (lands) that will be bought\",\"buyer\":\"address that perform the payment\",\"info\":\"[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\",\"proof\":\"merkleProof for that particular Land\",\"referral\":\"referral id\",\"reserved\":\"the reserved address (if any)\",\"salt\":\"The salt submitted for verification.\",\"signature\":\"A signed message specifying tx details\",\"to\":\"address that will own the purchased Land\"}},\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"disablePreviousSigningWallet(address)\":{\"details\":\"Disable compromised signing wallet\",\"params\":{\"disableWallet\":\"The wallet address to be disabled\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getSigningWallet()\":{\"details\":\"signing wallet authorized for referral\",\"returns\":{\"_0\":\"the address of the signing wallet\"}},\"isMetaTransactionProcessor(address)\":{\"details\":\"check whether address `who` is given meta-transaction execution rights.\",\"params\":{\"who\":\"The address to query.\"},\"returns\":{\"_0\":\"whether the address has meta-transaction execution rights.\"}},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"params\":{\"commissionRate\":\"The commissionRate of the referral\",\"expiryTime\":\"The expiry time of the referral\",\"referee\":\"The address of the referee\",\"referrer\":\"The address of the referrer\",\"signature\":\"The signature to check (signed referral)\"},\"returns\":{\"_0\":\"True if the referral is valid\"}},\"setMetaTransactionProcessor(address,bool)\":{\"details\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\",\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}},\"updateMaxCommissionRate(uint256)\":{\"details\":\"Update the maximum commission rate\",\"params\":{\"newMaxCommissionRate\":\"The new maximum commission rate\"}},\"updateSigningWallet(address)\":{\"details\":\"Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.\",\"params\":{\"newSigningWallet\":\"The new address of the signing wallet\"}},\"withdrawAssets(address,uint256[],uint256[])\":{\"params\":{\"assetIds\":\"the assetIds to be transferred\",\"to\":\"intended recipient of the asset tokens\",\"values\":\"the quantities of the assetIds to be transferred\"}}},\"title\":\"Estate Sale contract with referral\"},\"userdoc\":{\"methods\":{\"buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)\":{\"notice\":\"buy Land with SAND using the merkle proof associated with it\"},\"getExpiryTime()\":{\"notice\":\"Gets the expiry time for the current sale\"},\"getMaxCommissionRate()\":{\"notice\":\"the max commission rate\"},\"getMerkleRoot()\":{\"notice\":\"Gets the Merkle root associated with the current sale\"},\"isReferralValid(bytes,address,address,uint256,uint256)\":{\"notice\":\"Check if a referral is valid\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"},\"withdrawAssets(address,uint256[],uint256[])\":{\"notice\":\"enable Admin to withdraw remaining assets from EstateSaleWithFee contract\"}},\"notice\":\"This contract manages the sale of our lands as Estates\"}},\"settings\":{\"compilationTarget\":{\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":\"EstateSaleWithAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\"},\"@openzeppelin/contracts-0.6/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\"},\"@openzeppelin/contracts-0.6/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\"},\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\"},\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\"},\"@openzeppelin/contracts-0.6/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\"},\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\"},\"src/solc_0.6/EstateSale/AuthValidator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\ncontract AuthValidator is Admin {\\n    address public _signingAuthWallet;\\n\\n    event SigningWallet(address indexed signingWallet);\\n\\n    constructor(address adminWallet, address initialSigningWallet) public {\\n        require(adminWallet != address(0), \\\"AuthValidator: zero address\\\");\\n\\n        _admin = adminWallet;\\n        _updateSigningAuthWallet(initialSigningWallet);\\n    }\\n\\n    function updateSigningAuthWallet(address newSigningWallet) external onlyAdmin {\\n        _updateSigningAuthWallet(newSigningWallet);\\n    }\\n\\n    function _updateSigningAuthWallet(address newSigningWallet) internal {\\n        require(newSigningWallet != address(0), \\\"AuthValidator: INVALID_SIGNING_WALLET\\\");\\n        _signingAuthWallet = newSigningWallet;\\n        emit SigningWallet(newSigningWallet);\\n    }\\n\\n    function isAuthValid(bytes memory signature, bytes32 hashedData) public view returns (bool) {\\n        address signer = ECDSA.recover(ECDSA.toEthSignedMessageHash(hashedData), signature);\\n        return signer == _signingAuthWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x949c6063b3d90a8c53ca8d3c80a1097da05b7189e87d8c8825b97acc17dbd38e\"},\"src/solc_0.6/EstateSale/EstateSaleWithAuth.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./ILandToken.sol\\\";\\nimport \\\"../common/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\nimport \\\"../ReferralValidator/ReferralValidator.sol\\\";\\nimport \\\"./AuthValidator.sol\\\";\\n\\n/// @title Estate Sale contract with referral\\n/// @notice This contract manages the sale of our lands as Estates\\ncontract EstateSaleWithAuth is ReentrancyGuard, MetaTransactionReceiver, ReferralValidator {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    event LandQuadPurchased(\\n        address indexed buyer,\\n        address indexed to,\\n        uint256 indexed topCornerId,\\n        uint256 size,\\n        uint256 price,\\n        address token,\\n        uint256 amountPaid\\n    );\\n\\n    event NewReceivingWallet(address indexed newWallet);\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _wallet = newWallet;\\n\\n        emit NewReceivingWallet(newWallet);\\n    }\\n\\n    /// @notice buy Land with SAND using the merkle proof associated with it\\n    /// @param buyer address that perform the payment\\n    /// @param to address that will own the purchased Land\\n    /// @param reserved the reserved address (if any)\\n    /// @param info [X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land\\n    /// @param salt The salt submitted for verification.\\n    /// @param assetIds asset ids (lands) that will be bought\\n    /// @param proof merkleProof for that particular Land\\n    /// @param referral referral id\\n    /// @param signature A signed message specifying tx details\\n    function buyLandWithSand(\\n        address buyer,\\n        address to,\\n        address reserved,\\n        uint256[] calldata info,\\n        bytes32 salt,\\n        uint256[] calldata assetIds,\\n        bytes32[] calldata proof,\\n        bytes calldata referral,\\n        bytes calldata signature\\n    ) external nonReentrant {\\n        _checkAddressesAndExpiryTime(buyer, reserved);\\n        _checkAuthAndProofValidity(to, reserved, info, salt, assetIds, proof, signature);\\n        _handleFeeAndReferral(buyer, info[PRICE_INDEX], referral);\\n        _mint(buyer, to, info);\\n        _sendAssets(to, assetIds);\\n    }\\n\\n    /// @notice Gets the expiry time for the current sale\\n    /// @return The expiry time, as a unix epoch\\n    function getExpiryTime() external view returns (uint256) {\\n        return _expiryTime;\\n    }\\n\\n    /// @notice Gets the Merkle root associated with the current sale\\n    /// @return The Merkle root, as a bytes32 hash\\n    function getMerkleRoot() external view returns (bytes32) {\\n        return _merkleRoot;\\n    }\\n\\n    /// @notice enable Admin to withdraw remaining assets from EstateSaleWithFee contract\\n    /// @param to intended recipient of the asset tokens\\n    /// @param assetIds the assetIds to be transferred\\n    /// @param values the quantities of the assetIds to be transferred\\n    function withdrawAssets(\\n        address to,\\n        uint256[] calldata assetIds,\\n        uint256[] calldata values\\n    ) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    function onERC1155Received(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256, /*id*/\\n        uint256, /*value*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address, /*operator*/\\n        address, /*from*/\\n        uint256[] calldata, /*ids*/\\n        uint256[] calldata, /*values*/\\n        bytes calldata /*data*/\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function _sendAssets(address to, uint256[] memory assetIds) internal {\\n        uint256[] memory values = new uint256[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            values[i] = 1;\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, assetIds, values, \\\"\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAddressesAndExpiryTime(address buyer, address reserved) internal view {\\n        /* solium-disable-next-line security/no-block-members */\\n        require(block.timestamp < _expiryTime, \\\"SALE_IS_OVER\\\");\\n        require(buyer == msg.sender || _metaTransactionContracts[msg.sender], \\\"NOT_AUTHORIZED\\\");\\n        require(reserved == address(0) || reserved == buyer, \\\"RESERVED_LAND\\\");\\n    }\\n\\n    // NOTE: _checkAddressesAndExpiryTime & _checkAuthAndProofValidity were split due to a stack too deep issue\\n    function _checkAuthAndProofValidity(\\n        address to,\\n        address reserved,\\n        uint256[] memory info,\\n        bytes32 salt,\\n        uint256[] memory assetIds,\\n        bytes32[] memory proof,\\n        bytes memory signature\\n    ) internal view {\\n        bytes32 hashedData = keccak256(\\n            abi.encodePacked(\\n                to,\\n                reserved,\\n                info[X_INDEX],\\n                info[Y_INDEX],\\n                info[SIZE_INDEX],\\n                info[PRICE_INDEX],\\n                salt,\\n                keccak256(abi.encodePacked(assetIds)),\\n                keccak256(abi.encodePacked(proof))\\n            )\\n        );\\n        require(_authValidator.isAuthValid(signature, hashedData), \\\"INVALID_AUTH\\\");\\n\\n        bytes32 leaf = _generateLandHash(\\n            info[X_INDEX],\\n            info[Y_INDEX],\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            reserved,\\n            salt,\\n            assetIds\\n        );\\n        require(_verify(proof, leaf), \\\"INVALID_LAND\\\");\\n    }\\n\\n    function _mint(\\n        address buyer,\\n        address to,\\n        uint256[] memory info\\n    ) internal {\\n        if (info[SIZE_INDEX] == 1 || _estate == address(0)) {\\n            _land.mintQuad(to, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], \\\"\\\");\\n        } else {\\n            _land.mintQuad(_estate, info[SIZE_INDEX], info[X_INDEX], info[Y_INDEX], abi.encode(to));\\n        }\\n        emit LandQuadPurchased(\\n            buyer,\\n            to,\\n            info[X_INDEX] + (info[Y_INDEX] * GRID_SIZE),\\n            info[SIZE_INDEX],\\n            info[PRICE_INDEX],\\n            address(_sand),\\n            info[PRICE_INDEX]\\n        );\\n    }\\n\\n    function _generateLandHash(\\n        uint256 x,\\n        uint256 y,\\n        uint256 size,\\n        uint256 price,\\n        address reserved,\\n        bytes32 salt,\\n        uint256[] memory assetIds\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(x, y, size, price, reserved, salt, assetIds));\\n    }\\n\\n    function _verify(bytes32[] memory proof, bytes32 leaf) internal view returns (bool) {\\n        bytes32 computedHash = leaf;\\n\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n\\n            if (computedHash < proofElement) {\\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n            } else {\\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n            }\\n        }\\n\\n        return computedHash == _merkleRoot;\\n    }\\n\\n    function _handleFeeAndReferral(\\n        address buyer,\\n        uint256 priceInSand,\\n        bytes memory referral\\n    ) internal {\\n        // send 5% fee to a specially configured instance of FeeDistributor.sol\\n        uint256 remainingAmountInSand = _handleSandFee(buyer, priceInSand);\\n\\n        // calculate referral based on 95% of original priceInSand\\n        handleReferralWithERC20(buyer, remainingAmountInSand, referral, _wallet, address(_sand));\\n    }\\n\\n    function _handleSandFee(address buyer, uint256 priceInSand) internal returns (uint256) {\\n        uint256 feeAmountInSand = priceInSand.mul(FEE).div(100);\\n        _sand.safeTransferFrom(buyer, address(_feeDistributor), feeAmountInSand);\\n        return priceInSand.sub(feeAmountInSand);\\n    }\\n\\n    uint256 internal constant GRID_SIZE = 408; // 408 is the size of the Land\\n\\n    IERC1155 internal immutable _asset;\\n    ILandToken internal immutable _land;\\n    IERC20 internal immutable _sand;\\n    address internal immutable _estate;\\n    address internal immutable _feeDistributor;\\n\\n    address payable internal _wallet;\\n    AuthValidator internal _authValidator;\\n    uint256 internal immutable _expiryTime;\\n    bytes32 internal immutable _merkleRoot;\\n\\n    uint256 private constant FEE = 5; // percentage of land sale price to be diverted to a specially configured instance of FeeDistributor, shown as an integer\\n    // buyLandWithSand info indexes\\n    uint256 private constant X_INDEX = 0;\\n    uint256 private constant Y_INDEX = 1;\\n    uint256 private constant SIZE_INDEX = 2;\\n    uint256 private constant PRICE_INDEX = 3;\\n\\n    constructor(\\n        address landAddress,\\n        address sandContractAddress,\\n        address initialMetaTx,\\n        address admin,\\n        address payable initialWalletAddress,\\n        bytes32 merkleRoot,\\n        uint256 expiryTime,\\n        address initialSigningWallet,\\n        uint256 initialMaxCommissionRate,\\n        address estate,\\n        address asset,\\n        address feeDistributor,\\n        address authValidator\\n    ) public ReferralValidator(initialSigningWallet, initialMaxCommissionRate) {\\n        require(landAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(sandContractAddress.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(initialMetaTx != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(admin != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(initialWalletAddress != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(asset.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n        require(feeDistributor != address(0), \\\"EstateSaleWithAuth: zero address\\\");\\n        require(authValidator.isContract(), \\\"EstateSaleWithAuth: is not a contract\\\");\\n\\n\\n        _land = ILandToken(landAddress);\\n        _sand = IERC20(sandContractAddress);\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        _wallet = initialWalletAddress;\\n        _merkleRoot = merkleRoot;\\n        _expiryTime = expiryTime;\\n        _admin = admin;\\n        _estate = estate;\\n        _asset = IERC1155(asset);\\n        _feeDistributor = feeDistributor;\\n        _authValidator = AuthValidator(authValidator);\\n    }\\n}\\n\",\"keccak256\":\"0x039331cd15021fe3b9312674d873fdc02b968ae2af5343caf14e6c054a2fcc1d\"},\"src/solc_0.6/EstateSale/ILandToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ninterface ILandToken {\\n    function mintQuad(\\n        address to,\\n        uint256 size,\\n        uint256 x,\\n        uint256 y,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8d03b53d325fbb052d78f274b106f14bf9a5afc928451b26bc9e579585ae44b2\"},\"src/solc_0.6/ReferralValidator/ReferralValidator.sol\":{\"content\":\"/* solhint-disable not-rely-on-time, func-order */\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"@openzeppelin/contracts-0.6/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-0.6/math/SafeMath.sol\\\";\\nimport \\\"../common/BaseWithStorage/Admin.sol\\\";\\n\\n\\n/// @dev This contract verifies if a referral is valid\\ncontract ReferralValidator is Admin {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    address private _signingWallet;\\n    uint256 private _maxCommissionRate;\\n\\n    mapping(address => uint256) private _previousSigningWallets;\\n    uint256 constant private _previousSigningDelay = 10 days;\\n\\n    event ReferralUsed(\\n        address indexed referrer,\\n        address indexed referee,\\n        address indexed token,\\n        uint256 amount,\\n        uint256 commission,\\n        uint256 commissionRate\\n    );\\n\\n    event SigningWalletUpdated(address indexed newSigningWallet);\\n    event MaxCommissionRateUpdated(uint256 indexed newMaxCommissionRate);\\n\\n    constructor(address initialSigningWallet, uint256 initialMaxCommissionRate) public {\\n        require(initialSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n\\n        _signingWallet = initialSigningWallet;\\n        _maxCommissionRate = initialMaxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the signing wallet\\n     * The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to\\n     * disable the previous wallet, use the disablePreviousSigningWallet function.\\n     * @param newSigningWallet The new address of the signing wallet\\n     */\\n    function updateSigningWallet(address newSigningWallet) external onlyAdmin {\\n        require(newSigningWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[_signingWallet] = now + _previousSigningDelay;\\n        _signingWallet = newSigningWallet;\\n\\n        emit SigningWalletUpdated(newSigningWallet);\\n    }\\n\\n     /**\\n     * @dev Disable compromised signing wallet\\n     * @param disableWallet The wallet address to be disabled\\n     */\\n    function disablePreviousSigningWallet(address disableWallet) external {\\n        require(_admin == msg.sender, \\\"ReferralValidator: Sender not admin\\\");\\n        require(disableWallet != address(0), \\\"ReferralValidator: zero address\\\");\\n        _previousSigningWallets[disableWallet] = 0;\\n    }\\n\\n    /**\\n     * @dev signing wallet authorized for referral\\n     * @return the address of the signing wallet\\n     */\\n    function getSigningWallet() external view returns (address) {\\n        return _signingWallet;\\n    }\\n\\n    /**\\n     * @notice the max commission rate\\n     * @return the maximum commission rate that a referral can give\\n     */\\n    function getMaxCommissionRate() external view returns (uint256) {\\n        return _maxCommissionRate;\\n    }\\n\\n    /**\\n     * @dev Update the maximum commission rate\\n     * @param newMaxCommissionRate The new maximum commission rate\\n     */\\n    function updateMaxCommissionRate(uint256 newMaxCommissionRate) external onlyAdmin {\\n        _maxCommissionRate = newMaxCommissionRate;\\n\\n        emit MaxCommissionRateUpdated(newMaxCommissionRate);\\n    }\\n\\n    function handleReferralWithETH(\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination\\n    ) internal {\\n        uint256 amountForDestination = amount;\\n\\n        require(msg.value >= amount, \\\"ReferralValidator: insufficient funds\\\");\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            require(commissionRate < 10000, \\\"ReferralValidator: invalid commisionRate\\\");\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, address(0), amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = payable(referrer).call{value:commission}(\\\"\\\");\\n                require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n            }\\n        }\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = destination.call{value:amountForDestination}(\\\"\\\");\\n        require(success, \\\"ReferralValidator: Transfer failed.\\\");\\n    }\\n\\n    function handleReferralWithERC20(\\n        address buyer,\\n        uint256 amount,\\n        bytes memory referral,\\n        address payable destination,\\n        address tokenAddress\\n    ) internal {\\n        IERC20 token = IERC20(tokenAddress);\\n        uint256 amountForDestination = amount;\\n\\n        if (referral.length > 0) {\\n            (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = decodeReferral(referral);\\n\\n            uint256 commission = 0;\\n\\n            if (isReferralValid(signature, referrer, referee, expiryTime, commissionRate)) {\\n                commission = SafeMath.div(SafeMath.mul(amount, commissionRate), 10000);\\n\\n                emit ReferralUsed(referrer, referee, tokenAddress, amount, commission, commissionRate);\\n                amountForDestination = SafeMath.sub(amountForDestination, commission);\\n            }\\n\\n            if (commission > 0) {\\n                token.safeTransferFrom(buyer, referrer, commission);\\n            }\\n        }\\n\\n        token.safeTransferFrom(buyer, destination, amountForDestination);\\n    }\\n\\n    /**\\n     * @notice Check if a referral is valid\\n     * @param signature The signature to check (signed referral)\\n     * @param referrer The address of the referrer\\n     * @param referee The address of the referee\\n     * @param expiryTime The expiry time of the referral\\n     * @param commissionRate The commissionRate of the referral\\n     * @return True if the referral is valid\\n     */\\n    function isReferralValid(\\n        bytes memory signature,\\n        address referrer,\\n        address referee,\\n        uint256 expiryTime,\\n        uint256 commissionRate\\n    ) public view returns (bool) {\\n        if (commissionRate > _maxCommissionRate || referrer == referee || now > expiryTime) {\\n            return false;\\n        }\\n\\n        bytes32 hashedData = keccak256(abi.encodePacked(referrer, referee, expiryTime, commissionRate));\\n\\n        address signer = ECDSA.recover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hashedData)), signature);\\n\\n        if (_previousSigningWallets[signer] >= now) {\\n            return true;\\n        }\\n\\n        return _signingWallet == signer;\\n    }\\n\\n    function decodeReferral(bytes memory referral)\\n        public\\n        pure\\n        returns (\\n            bytes memory,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        (bytes memory signature, address referrer, address referee, uint256 expiryTime, uint256 commissionRate) = abi.decode(\\n            referral,\\n            (bytes, address, address, uint256, uint256)\\n        );\\n\\n        return (signature, referrer, referee, expiryTime, commissionRate);\\n    }\\n}\\n\",\"keccak256\":\"0xad5300e058f15841c54f3bc70ad5c89a6c9a0853aa6e0b542e7a9e59192687d2\"},\"src/solc_0.6/common/BaseWithStorage/Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        require(_admin != newAdmin, \\\"already admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe1a95ec41b32e523a6fad060f90aa6d03a72a545857a91c2f51473b6072637dc\"},\"src/solc_0.6/common/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.5;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin {\\n    mapping(address => bool) internal _metaTransactionContracts;\\n\\n    /// @dev emiited when a meta transaction processor is enabled/disabled\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @dev Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public onlyAdmin {\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        require(metaTransactionProcessor != address(0), \\\"MetaTransactionReceiver: zero address\\\");\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @dev check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns (bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\\n\",\"keccak256\":\"0x4a11e21dfc85fb9330c02abc019bfb5b1e40d0fcd36e2a2e652d4c06b6e8105b\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b50604051620031e9380380620031e983398181016040526101a08110156200003957600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b01516101608c0151610180909c015160016000559a9b999a9899979896979596949593949293919290919085856001600160a01b038216620000f8576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0393841617905560045562000130908e1662000459602090811b62002adc17901c565b6200016d5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6200018c8c6001600160a01b03166200045960201b62002adc1760201c565b620001c95760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b038b1662000214576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038a166200025f576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b6001600160a01b038916620002aa576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b620002c9836001600160a01b03166200045960201b62002adc1760201c565b620003065760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160a01b03821662000351576040805162461bcd60e51b815260206004820181905260248201526000805160206200317f833981519152604482015290519081900360640190fd5b62000370816001600160a01b03166200045960201b62002adc1760201c565b620003ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180620031c46025913960400191505060405180910390fd5b6001600160601b031960608e811b821660a0528d901b1660c052620003dd8b60016001600160e01b036200045f16565b600680546001600160a01b039a8b166001600160a01b031991821617909155610140989098526101209690965260018054998916998816999099179098556001600160601b0319606092831b811660e05290821b811660805296901b909516610100525060078054919093169116179055506200050a92505050565b3b151590565b6001600160a01b038216620004a65760405162461bcd60e51b81526004018080602001828103825260258152602001806200319f6025913960400191505060405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205161014051612bef6200059060003980610be0528061247e525080610bbc528061159d5250806124fc525080611af25280611c4f525080611aa85280611e4e52806124d9525080611b235280611c205250806111075280611f3a5250612bef6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063984d6252116100b2578063c10a420811610081578063dc5074af11610066578063dc5074af146108a0578063e56f8a9e146108c6578063f23a6e61146108e357610136565b8063c10a4208146107c1578063caed35001461089857610136565b8063984d62521461055f578063ab1cc78c14610631578063b522ecff14610639578063bc197c811461065f57610136565b806365194ce71161010957806378e6e5b9116100ee57806378e6e5b9146104e55780638a04af6a1461050b5780638f2839701461053957610136565b806365194ce7146103635780636e9960c3146104c157610136565b80631187fd3c1461013b57806325cb5bc01461031b578063495906571461033557806358bc29441461033d575b600080fd5b610319600480360361012081101561015257600080fd5b6001600160a01b038235811692602081013582169260408201359092169181019060808101606082013564010000000081111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460208302840111640100000000831117156101c257600080fd5b919390928235926040810190602001356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b91939092909160208101903564010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184602083028401116401000000008311171561026a57600080fd5b91939092909160208101903564010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b9193909290916020810190356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b509092509050610978565b005b610323610bba565b60408051918252519081900360200190f35b610323610bde565b6103196004803603602081101561035357600080fd5b50356001600160a01b0316610c02565b6104096004803603602081101561037957600080fd5b81019060208101813564010000000081111561039457600080fd5b8201836020820111156103a657600080fd5b803590602001918460018302840111640100000000831117156103c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2e945050505050565b6040518080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6104c9610e33565b604080516001600160a01b039092168252519081900360200190f35b610319600480360360208110156104fb57600080fd5b50356001600160a01b0316610e42565b6103196004803603604081101561052157600080fd5b506001600160a01b0381351690602001351515610f00565b6103196004803603602081101561054f57600080fd5b50356001600160a01b0316610f6d565b6103196004803603606081101561057557600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156105a057600080fd5b8201836020820111156105b257600080fd5b803590602001918460208302840111640100000000831117156105d457600080fd5b9193909290916020810190356401000000008111156105f257600080fd5b82018360208201111561060457600080fd5b8035906020019184602083028401116401000000008311171561062657600080fd5b5090925090506110a6565b610323611231565b6103196004803603602081101561064f57600080fd5b50356001600160a01b0316611237565b61078c600480360360a081101561067557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460208302840111640100000000831117156106dd57600080fd5b9193909290916020810190356401000000008111156106fb57600080fd5b82018360208201111561070d57600080fd5b8035906020019184602083028401116401000000008311171561072f57600080fd5b91939092909160208101903564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b509092509050611348565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b610884600480360360a08110156107d757600080fd5b8101906020810181356401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335811694506020840135169260408101359250606001359050611375565b604080519115158252519081900360200190f35b6104c96114b1565b610884600480360360208110156108b657600080fd5b50356001600160a01b03166114c0565b610319600480360360208110156108dc57600080fd5b50356114de565b61078c600480360360a08110156108f957600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561093957600080fd5b82018360208201111561094b57600080fd5b8035906020019184600183028401116401000000008311171561096d57600080fd5b509092509050611570565b600260005414156109d0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556109df8e8d61159b565b610ad68d8d8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506116fe92505050565b610b2a8e8c8c6003818110610ae757fe5b9050602002013586868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8192505050565b610b688e8e8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ad292505050565b610ba58d898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ec392505050565b50506001600055505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b03163314610c61576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610cbc576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b600380546001600160a01b03908116600090815260056020526040808220620d2f0042019055835473ffffffffffffffffffffffffffffffffffffffff1916928516928317909355915190917fbbb5fb2ee7e707ae0c968f63e94211ea81e66a718c34e2f810a7619e5678a21791a250565b606060008060008060606000806000808a80602001905160a0811015610d5357600080fd5b8101908080516040519392919084640100000000821115610d7357600080fd5b908301906020820185811115610d8857600080fd5b8251640100000000811182820188101715610da257600080fd5b82525081516020918201929091019080838360005b83811015610dcf578181015183820152602001610db7565b50505050905090810190601f168015610dfc5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151959f50909d509b5099509197505050505050505091939590929450565b6001546001600160a01b031690565b6001546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401808060200182810382526023815260200180612b056023913960400191505060405180910390fd5b6001600160a01b038116610ee6576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c56616c696461746f723a207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0316600090815260056020526040812055565b6001546001600160a01b03163314610f5f576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b610f698282612087565b5050565b6001546001600160a01b03163314610fcc576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b6001546001600160a01b038281169116141561102f576040805162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b600154604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a16001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611105576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d63087878787876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f8201169050808301925050508481038252600081526020016020019950505050505050505050600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505050505050565b60045490565b6001600160a01b038116611292576040805162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4d66958b757eb92a1b43d02be4c38c9500b73f532420ee3706cb43d420ba023690600090a250565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60006004548211806113985750836001600160a01b0316856001600160a01b0316145b806113a257508242115b156113af575060006114a8565b60408051606087811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e49093019093528151910120600090611466908961214e565b6001600160a01b0381166000908152600560205260409020549091504211611493576001925050506114a8565b6003546001600160a01b039081169116149150505b95945050505050565b6003546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b6001546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601260248201527f6f6e6c792061646d696e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b600481905560405181907f774069781371d65424b3b0b101c1d40014532cac040f979595b99a3fcf8ce08c90600090a250565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000421061160f576040805162461bcd60e51b815260206004820152600c60248201527f53414c455f49535f4f5645520000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821633148061163557503360009081526002602052604090205460ff165b611686576040805162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806116ad5750816001600160a01b0316816001600160a01b0316145b610f69576040805162461bcd60e51b815260206004820152600d60248201527f52455345525645445f4c414e4400000000000000000000000000000000000000604482015290519081900360640190fd5b600087878760008151811061170f57fe5b60200260200101518860018151811061172457fe5b60200260200101518960028151811061173957fe5b60200260200101518a60038151811061174e57fe5b60200260200101518a8a60405160200180828051906020019060200280838360005b83811015611788578181015183820152602001611770565b50505050905001915050604051602081830303815290604052805190602001208a60405160200180828051906020019060200280838360005b838110156117d95781810151838201526020016117c1565b5050505090500191505060405160208183030381529060405280519060200120604051602001808a6001600160a01b03166001600160a01b031660601b8152601401896001600160a01b03166001600160a01b031660601b81526014018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050600760009054906101000a90046001600160a01b03166001600160a01b031663012847ed83836040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118fb5781810151838201526020016118e3565b50505050905090810190601f1680156119285780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b50516119c3576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f415554480000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a24876000815181106119d557fe5b6020026020010151886001815181106119ea57fe5b6020026020010151896002815181106119ff57fe5b60200260200101518a600381518110611a1457fe5b60200260200101518c8b8b612337565b9050611a3084826123dc565b611226576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f4c414e440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000611a8d84846124a5565b600654909150611acc908590839085906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061253f565b50505050565b80600281518110611adf57fe5b602002602001015160011480611b1c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316155b15611c1e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf8383600281518110611b5e57fe5b602002602001015184600081518110611b7357fe5b602002602001015185600181518110611b8857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b031681526020018481526020018381526020018281526020018060200182810382526000815260200160200195505050505050600060405180830381600087803b158015611c0157600080fd5b505af1158015611c15573d6000803e3d6000fd5b50505050611dbe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e1e3bbf7f000000000000000000000000000000000000000000000000000000000000000083600281518110611c7b57fe5b602002602001015184600081518110611c9057fe5b602002602001015185600181518110611ca557fe5b60200260200101518760405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d55578181015183820152602001611d3d565b50505050905090810190601f168015611d825780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611da557600080fd5b505af1158015611db9573d6000803e3d6000fd5b505050505b61019881600181518110611dce57fe5b60200260200101510281600081518110611de457fe5b602002602001015101826001600160a01b0316846001600160a01b03167fe4dfa6ac11314892f3029b34a25b1a887da3b1cab2bbf8506d87128ba6e3ac0284600281518110611e2f57fe5b602002602001015185600381518110611e4457fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000087600381518110611e7a57fe5b602002602001015160405180858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200194505050505060405180910390a4505050565b6060815167ffffffffffffffff81118015611edd57600080fd5b50604051908082528060200260200182016040528015611f07578160200160208202803683370190505b50905060005b8251811015611f37576001828281518110611f2457fe5b6020908102919091010152600101611f0d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632eb2c2d6308585856040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b83811015611ff2578181015183820152602001611fda565b50505050905001848103835285818151815260200191508051906020019060200280838360005b83811015612031578181015183820152602001612019565b50505050905001848103825260008152602001602001975050505050505050600060405180830381600087803b15801561206a57600080fd5b505af115801561207e573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166120cc5760405162461bcd60e51b8152600401808060200182810382526025815260200180612b6b6025913960400191505060405180910390fd5b6001600160a01b03821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb9281900390910190a15050565b600081516041146121a6576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122175760405162461bcd60e51b8152600401808060200182810382526022815260200180612ae36022913960400191505060405180910390fd5b8060ff16601b1415801561222f57508060ff16601c14155b1561226b5760405162461bcd60e51b8152600401808060200182810382526022815260200180612b286022913960400191505060405180910390fd5b60408051600080825260208083018085528a905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa1580156122c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661232b576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b93505050505b92915050565b60008787878787878760405160200180888152602001878152602001868152602001858152602001846001600160a01b03166001600160a01b031660601b8152601401838152602001828051906020019060200280838360005b838110156123a9578181015183820152602001612391565b50505050905001975050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081815b845181101561247b5760008582815181106123f857fe5b60200260200101519050808310156124405782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612472565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016123e1565b507f0000000000000000000000000000000000000000000000000000000000000000149392505050565b6000806124ca60646124be85600563ffffffff61264716565b9063ffffffff6126a716565b90506125276001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f00000000000000000000000000000000000000000000000000000000000000008463ffffffff6126e916565b612537838263ffffffff61277116565b949350505050565b8251819085901561262c57606060008060008061255b8a610d2e565b93985091965094509250905060006125768686868686611375565b15612604576125906125888d84612647565b6127106126a7565b9050886001600160a01b0316846001600160a01b0316866001600160a01b03167fac7a699eb95c3c6d390ec4626de17ef9a67b35891efdb197beba7c7fdd45fac48f858760405180848152602001838152602001828152602001935050505060405180910390a46126018782612771565b96505b8015612625576126256001600160a01b0389168e878463ffffffff6126e916565b5050505050505b61207e6001600160a01b03831688868463ffffffff6126e916565b60008261265657506000612331565b8282028284828161266357fe5b04146126a05760405162461bcd60e51b8152600401808060200182810382526021815260200180612b4a6021913960400191505060405180910390fd5b9392505050565b60006126a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b3565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611acc908590612855565b60006126a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061290b565b6000818361283f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128045781810151838201526020016127ec565b50505050905090810190601f1680156128315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161284b57fe5b0495945050505050565b60606128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129659092919063ffffffff16565b805190915015612906578080602001905160208110156128c957600080fd5b50516129065760405162461bcd60e51b815260040180806020018281038252602a815260200180612b90602a913960400191505060405180910390fd5b505050565b6000818484111561295d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128045781810151838201526020016127ec565b505050900390565b60606125378484600085606061297a85612adc565b6129cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612a0a5780518252601f1990920191602091820191016129eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b50915091508115612a855791506125379050565b805115612a955780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156128045781810151838201526020016127ec565b3b15159056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c7565526566657272616c56616c696461746f723a2053656e646572206e6f742061646d696e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6574615472616e73616374696f6e52656365697665723a207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122077f2d13cbcb85fa08010a53c1e4ef27117b031e8c1c9273d55cef362af299f3164736f6c6343000605003345737461746553616c6557697468417574683a207a65726f20616464726573734d6574615472616e73616374696f6e52656365697665723a207a65726f206164647265737345737461746553616c6557697468417574683a206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "params": {
          "assetIds": "asset ids (lands) that will be bought",
          "buyer": "address that perform the payment",
          "info": "[X_INDEX=0] x coordinate of the Land [Y_INDEX=1] y coordinate of the Land [SIZE_INDEX=2] size of the pack of Land to purchase [PRICE_INDEX=3] price in SAND to purchase that Land",
          "proof": "merkleProof for that particular Land",
          "referral": "referral id",
          "reserved": "the reserved address (if any)",
          "salt": "The salt submitted for verification.",
          "signature": "A signed message specifying tx details",
          "to": "address that will own the purchased Land"
        }
      },
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "disablePreviousSigningWallet(address)": {
        "details": "Disable compromised signing wallet",
        "params": {
          "disableWallet": "The wallet address to be disabled"
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getSigningWallet()": {
        "details": "signing wallet authorized for referral",
        "returns": {
          "_0": "the address of the signing wallet"
        }
      },
      "isMetaTransactionProcessor(address)": {
        "details": "check whether address `who` is given meta-transaction execution rights.",
        "params": {
          "who": "The address to query."
        },
        "returns": {
          "_0": "whether the address has meta-transaction execution rights."
        }
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "params": {
          "commissionRate": "The commissionRate of the referral",
          "expiryTime": "The expiry time of the referral",
          "referee": "The address of the referee",
          "referrer": "The address of the referrer",
          "signature": "The signature to check (signed referral)"
        },
        "returns": {
          "_0": "True if the referral is valid"
        }
      },
      "setMetaTransactionProcessor(address,bool)": {
        "details": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).",
        "params": {
          "enabled": "set whether the metaTransactionProcessor is enabled or disabled.",
          "metaTransactionProcessor": "address that will be given/removed metaTransactionProcessor rights."
        }
      },
      "setReceivingWallet(address)": {
        "params": {
          "newWallet": "address of the new receiving wallet"
        }
      },
      "updateMaxCommissionRate(uint256)": {
        "details": "Update the maximum commission rate",
        "params": {
          "newMaxCommissionRate": "The new maximum commission rate"
        }
      },
      "updateSigningWallet(address)": {
        "details": "Update the signing wallet The previous wallet is still valid for a grace period (_previousSigningDelay). If you want to disable the previous wallet, use the disablePreviousSigningWallet function.",
        "params": {
          "newSigningWallet": "The new address of the signing wallet"
        }
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "params": {
          "assetIds": "the assetIds to be transferred",
          "to": "intended recipient of the asset tokens",
          "values": "the quantities of the assetIds to be transferred"
        }
      }
    },
    "title": "Estate Sale contract with referral"
  },
  "userdoc": {
    "methods": {
      "buyLandWithSand(address,address,address,uint256[],bytes32,uint256[],bytes32[],bytes,bytes)": {
        "notice": "buy Land with SAND using the merkle proof associated with it"
      },
      "getExpiryTime()": {
        "notice": "Gets the expiry time for the current sale"
      },
      "getMaxCommissionRate()": {
        "notice": "the max commission rate"
      },
      "getMerkleRoot()": {
        "notice": "Gets the Merkle root associated with the current sale"
      },
      "isReferralValid(bytes,address,address,uint256,uint256)": {
        "notice": "Check if a referral is valid"
      },
      "setReceivingWallet(address)": {
        "notice": "set the wallet receiving the proceeds"
      },
      "withdrawAssets(address,uint256[],uint256[])": {
        "notice": "enable Admin to withdraw remaining assets from EstateSaleWithFee contract"
      }
    },
    "notice": "This contract manages the sale of our lands as Estates"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1129,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 14099,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14168,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_metaTransactionContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12200,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_signingWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12202,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12206,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_previousSigningWallets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7750,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_wallet",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 7752,
        "contract": "src/solc_0.6/EstateSale/EstateSaleWithAuth.sol:EstateSaleWithAuth",
        "label": "_authValidator",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AuthValidator)7063"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AuthValidator)7063": {
        "encoding": "inplace",
        "label": "contract AuthValidator",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}